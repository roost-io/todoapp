openapi: 3.0.1
info:
  title: Customer Order Management
  description: ''
  version: 5.4.0
servers:
  - url: https:/serverRoot/com/
  - url: http:/serverRoot/com/
tags:
  - name: orderManagement
  - name: onboarding
  - name: getBasicInfo
  - name: serviceManagement
  - name: profileManagement
  - name: accountManagement
  - name: groupManagement
paths:
  /order-service/orders/onboarding:
    post:
      tags:
        - onboarding
      operationId: createOnboardingOrder
      summary: Creates an Onboarding Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/OnboardingOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-profile-account:
    post:
      tags:
        - onboarding
      operationId: createProfileAccountOrder
      summary: Creates a Profile Account Order
      description: This operation will allow a customer to create profile and account
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateProfileAccountRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/add-service:
    post:
      tags:
        - onboarding
      operationId: createAddServiceOrder
      summary: Creates an AddService Order
      description: >-
        This operation will allow a customer to create a new service under one
        of the existing account
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AddServiceRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/starter-pack:
    post:
      tags:
        - onboarding
      operationId: createStarterPackOrder
      summary: Bulk starter pack creation by inventory
      description: This operation will create an order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/StarterPackOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-account:
    post:
      tags:
        - accountManagement
      operationId: createAccount
      summary: Creates a createAccount Order
      description: This operation will allow a customer to create a new billing account
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateAccountOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-profile:
    post:
      tags:
        - profileManagement
      operationId: createProfile
      summary: Creates a createProfile Order
      description: This operation will allow a customer to create a new profile
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateProfileOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/add-service-to-new-account:
    post:
      tags:
        - onboarding
      operationId: createAddServiceToNewAccountOrder
      summary: Creates an AddServiceToNewAccount Order
      description: >-
        This operation will allow a customer to create a new service under a new
        billing account
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AddServiceToNewAccountRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/add-subscription:
    post:
      tags:
        - serviceManagement
      operationId: createAddSubscriptionOrder
      summary: Creates an Add Subscription Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TMFAddSubscriptionRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/gifting:
    post:
      tags:
        - serviceManagement
      operationId: createSubscriptionGiftingOrder
      summary: Creates a Subscription Gifting Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TMFSubscriptionGiftingRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/stop-auto-renewal:
    post:
      tags:
        - serviceManagement
      operationId: createUpdateRenewalOrder
      summary: Creates an update renewal order
      description: This operation creates an Order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateAutoRenewalOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/override-subscribtion-charges:
    post:
      tags:
        - serviceManagement
      operationId: createSubscriptionChargeOverrideOrder
      summary: Creates an order to override the subscription charge
      description: This operation creates an Order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionChargeOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/cancel-subscription:
    post:
      tags:
        - serviceManagement
      operationId: createCancelSubscriptionOrder
      summary: Creates an Cancel Subscription Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TMFCancelSubscriptionRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/suspend-subscription:
    post:
      tags:
        - serviceManagement
      operationId: createSuspendSubscriptionOrder
      summary: Creates an Suspend Subscription Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TMFSuspendSubscriptionRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/resume-subscription:
    post:
      tags:
        - serviceManagement
      operationId: createResumeSubscriptionOrder
      summary: Creates an Resume Subscription Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TMFResumeSubscriptionRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-subscription:
    post:
      tags:
        - serviceManagement
      operationId: createChangeSubscriptionOrder
      summary: Creates an Change Subscription Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-subscription:
    post:
      tags:
        - serviceManagement
      operationId: createUpdateSubscriptionOrder
      summary: Creates an Update Subscription Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TMFUpdateSubscriptionRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-sim:
    post:
      tags:
        - serviceManagement
      operationId: createChangeSimOrder
      summary: Creates an ChangeSim Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeSimRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-safecustody:
    post:
      tags:
        - serviceManagement
      operationId: createSafeCustodyOrder
      summary: Creates an SafeCustody Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateSafeCustodyOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-safecustody:
    post:
      tags:
        - serviceManagement
      operationId: createUpdateSafeCustodyOrder
      summary: Creates an UpdateSafeCustody Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateSafeCustodyOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/cancel-safecustody:
    post:
      tags:
        - serviceManagement
      operationId: createCancelSafeCustodyOrder
      summary: Creates a cancel safe custody Order
      description: This operation creates a cancel safe custody order.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CancelSafeCustodyOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/delete-safecustody:
    post:
      tags:
        - serviceManagement
      operationId: deleteSafeCustodyOrder
      summary: Creates a delete safe custody Order
      description: This operation creates a delete safe custody order.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeleteSafeCustodyOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/extend-safecustody:
    post:
      tags:
        - serviceManagement
      operationId: extendSafeCustodyOrder
      summary: Creates an extend safe custody Order
      description: This operation creates a delete safe custody order.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtendSafeCustodyOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-orchestrator/orders/skip-or-retry:
    post:
      tags:
        - orderManagement
      operationId: skipOrRetry
      summary: Creates an ChangeSim Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SkipRetryRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-orchestrator/orders/payment-callback:
    post:
      tags:
        - orderManagement
      operationId: paymentCallback
      summary: >-
        triggers the payment call back for an order whihc is waiting for the
        payment to collect
      description: This operation triggers the payment event of an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/OrderPaymentUpdateRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-orchestrator/orders/approve:
    post:
      tags:
        - orderManagement
      operationId: approvalCallback
      summary: >-
        triggers the approval call back for an order whihc is waiting for the
        approval
      description: This operation triggers the approval event of an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ApprovalCallbackRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-msisdn:
    post:
      tags:
        - serviceManagement
      operationId: createChangeMsisdnOrder
      summary: Creates a ChangeMsisdn Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeMsisdnOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/book-deposit:
    post:
      tags:
        - serviceManagement
      operationId: createBookDepositOrder
      summary: Creates a Book Deposit Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BookDepositOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/transfer-deposit:
    post:
      tags:
        - serviceManagement
      operationId: createTransferDepositOrder
      summary: Creates a Transfer Deposit Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferDepositOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/transfer-outstanding:
    post:
      tags:
        - accountManagement
      operationId: createTransferOutstandingOrder
      summary: Creates a Transfer Outstanding Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferOutstandingOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/book-service-fee:
    post:
      tags:
        - serviceManagement
      operationId: createBookServiceFeeOrder
      summary: Creates a createBookServiceFeeOrder Order
      description: This operation creates an Order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BookServiceFeeOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-profile:
    post:
      tags:
        - profileManagement
      operationId: createUpdateProfileOrder
      summary: Creates an UpdateProfile Order
      description: >-
        This operation creates an Order entity, and updates the basic details of
        a customer profile. all the basic parameters recieved from
        'querySubscriberProfile' operation can be updated using this API
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateProfileOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-account:
    post:
      tags:
        - accountManagement
      operationId: createUpdateAccountOrder
      summary: Creates an UpdateAccount Order
      description: >-
        This operation creates an Order entity, and updates the basic details of
        a billing account.all the basic parameters recieved from
        'querySubscriberAccount' operation can be updated using this API
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateAccountOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-service-credit-limit:
    post:
      tags:
        - serviceManagement
      operationId: createUpdateCreditLimitOrder
      summary: Creates an UpdateCreditLimit Order
      description: this operation can be used to update the credit limit of a service line
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateCreditLimitRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-spending-limit:
    post:
      tags:
        - serviceManagement
      operationId: createSpendingCreditLimitOrder
      summary: Creates an UpdateSpendingLimit Order
      description: this operation can be used to update the spending limit for a customer
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateSpendingLimitOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/voucher-recharge:
    post:
      tags:
        - serviceManagement
      operationId: createVoucherRechargeOrder
      summary: Creates an VoucherRecharge Order
      description: this operation can be used to create a voucher recharge order
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/VoucherRechargeRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/block-voucher:
    post:
      tags:
        - serviceManagement
      operationId: createBlockVoucherOrder
      summary: Creates an BlockVoucher Order
      description: this operation can be used to block a voucher
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BlockVoucherRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/unblock-voucher:
    post:
      tags:
        - serviceManagement
      operationId: createUnBlockVoucherOrder
      summary: Creates an UnBlockVoucher Order
      description: this operation can be used to un block a voucher
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UnblockVoucherRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/voucher-validity-extension:
    post:
      tags:
        - serviceManagement
      operationId: createExtendVoucherValidityOrder
      summary: Creates an ExtendVoucherValidity Order
      description: this operation can be used to extend the validity of a voucher
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtendVoucherValidityRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/balance-transfer:
    post:
      tags:
        - serviceManagement
      operationId: createBalanceTrasnferOrder
      summary: Creates a Balance Transfer Order
      description: >-
        This operation creates an Order which transfers balance from one service
        to another
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BalanceTransferOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/adjust-main-account:
    post:
      tags:
        - serviceManagement
      operationId: createAdjustMainAccountOrder
      summary: Creates an Adjust Main Account Order
      description: >-
        This operation creates an Order which will adjust the MA balance of a
        subscriber
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustMainAccountOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/extend-subscriber-validity:
    post:
      tags:
        - serviceManagement
      operationId: createExtendValidityOrder
      summary: Creates an ExtendValidity Order
      description: >-
        This operation creates an Order which will extend the main account
        validity of a subscriber
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExtendSubscriberValidityOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/make-payment:
    post:
      tags:
        - accountManagement
      operationId: createMakePaymentOrder
      summary: Creates an MakePayment Order
      description: This operation creates an Order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MakePaymentOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/payment-reversal:
    post:
      tags:
        - accountManagement
      operationId: createPaymentReversalOrder
      summary: Creates an Payment Reversal Order
      description: This operation creates an Order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PaymentReversalOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/credit-refund:
    post:
      tags:
        - accountManagement
      operationId: createCreditRefundOrder
      description: This operation creates an Order entity
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreditRefundOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-service:
    post:
      tags:
        - serviceManagement
      operationId: createUpdateServiceOrder
      summary: Creates an UpdateService Order
      description: >-
        This operation creates an Order entity, and updates the basic details of
        a service.all the basic parameters recieved from
        'querySubscriberService' operation can be updated using this API
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateServiceOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-language:
    post:
      tags:
        - serviceManagement
      operationId: createUpdateLanguageOrder
      summary: Creates an Update Language Order
      description: >-
        This operation creates an Order entity, and updates the language
        preference of a customer
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateLanguageOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/suspend-service:
    post:
      tags:
        - serviceManagement
      operationId: createSuspendServiceOrder
      summary: Creates a Suspend Service Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SuspendServiceOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-deal:
    post:
      tags:
        - serviceManagement
      operationId: createChangeDealOrder
      summary: Creates a Deal Change Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeDealOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-service-state:
    post:
      tags:
        - serviceManagement
      operationId: updateServiceStateOrder
      summary: Creates a Service State Change Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateServiceStateOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/lifecycle-sync:
    post:
      tags:
        - serviceManagement
      operationId: lifecycleSync
      summary: Creates a lifecycle sync order
      description: >-
        This operation can be used  to sync the OCS prepaid lifecycles changes
        with BSS
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/LifeCycleSyncOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/lifecycle-sync/termination:
    post:
      tags:
        - serviceManagement
      operationId: lifecycleSyncTermination
      summary: Creates a lifecycleSyncTermination sync order
      description: >-
        This operation can be used  to sync the OCS prepaid lifecycles changes
        with BSS
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/LifeCycleSyncTerminationOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/resume-service:
    post:
      tags:
        - serviceManagement
      operationId: createResumeServiceOrder
      summary: Creates a Resume Service Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ResumeServiceOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/activate-service:
    post:
      tags:
        - serviceManagement
      operationId: createActivateServiceOrder
      summary: >-
        Creates an Activate Service Order. this operation can be used to
        activate a prepaid service after the first call is made
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ActivateServiceOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/terminate-service:
    post:
      tags:
        - serviceManagement
      operationId: createTerminateServiceOrder
      summary: Creates a Terminate Service Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TerminateServiceOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/connection-migration:
    post:
      tags:
        - serviceManagement
      operationId: createConnectionMigrationOrder
      summary: Creates a Connection Migration Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ConnectionMigrationRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/transfer-of-service:
    post:
      tags:
        - serviceManagement
      operationId: createTransferofServiceOrder
      summary: Creates a Transfer of Service Order
      description: This operation creates an Order entity.
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferOfServiceRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-contract:
    post:
      tags:
        - serviceManagement
      operationId: createContractOrder
      summary: Creates an contract Order
      description: This operation can be used to create contract
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/createContractOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/cancel-contract:
    post:
      tags:
        - serviceManagement
      operationId: cancelContractOrder
      summary: Creates an contract cancellation Order
      description: This operation can be used to cancel contract
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/cancelContractOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-group:
    post:
      tags:
        - groupManagement
      operationId: createGroupeOrder
      summary: Creates a Create Group Order
      description: This operation can be used to create CUG group in BSS for the customer
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateGroupRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-group-plan:
    post:
      tags:
        - groupManagement
      operationId: createChangeGroupePlanOrder
      summary: Creates a Create Change Group Plan Order
      description: This operation can be used to change the plan of an existing group
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeGroupPlanRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-fnf:
    post:
      tags:
        - groupManagement
      operationId: createFNFOrder
      summary: Creates a Create FNF Order
      description: >-
        This operation can be used to create Friends and Family group in BSS for
        the customer
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateFNFOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/adjust-account:
    post:
      tags:
        - serviceManagement
      operationId: createAdjsutAccountOrder
      summary: Creates a create adjust account order
      description: This operation can be used to create an adjust account order
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AdjustAccountOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/raise-adjustment:
    post:
      tags:
        - accountManagement
      operationId: createRaiseAdjustmentOrder
      summary: Creates a raise adjustment order
      description: This operation can be used to create a raise adjustment order
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/RaiseAdjustmentOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-adjustment:
    post:
      tags:
        - accountManagement
      operationId: createAdjustmentOrder
      summary: Creates a createAdjustment order
      description: This operation can be used to create an adjustment order
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateAdjustmentOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/fund-transfer:
    post:
      tags:
        - accountManagement
      operationId: fundTransferOrder
      summary: Creates a fundTransfer order
      description: This operation can be used to create a fund transfer order
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FundTransferOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/fund-transfer-reversal:
    post:
      tags:
        - accountManagement
      operationId: fundTransferReversalOrder
      summary: Creates a fundTransfer reversal order
      description: This operation can be used to create a fund transfer order
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FundTransferReversalOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/add-fnf:
    post:
      tags:
        - groupManagement
      operationId: addFNFOrder
      summary: Creates an Add FNF Order
      description: This operation can be used to add members to an existing fnf group
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AddFNFOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-fnf:
    post:
      tags:
        - groupManagement
      operationId: changeFNFOrder
      summary: Creates an Change FNF Order
      description: >-
        This operation can be used to change the properties of an existing fnf
        group
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeFNFOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/delete-fnf:
    post:
      tags:
        - groupManagement
      operationId: deleteFNFOrder
      summary: Creates an Delete FNF Order
      description: >-
        This operation can be used to delete the members of an existing fnf
        group
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeleteFNFOrderRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/transfer-of-ownership:
    post:
      tags:
        - accountManagement
      operationId: createTransferOfOwnershiOrder
      summary: Creates a Transfer of ownership Order
      description: >-
        This operation allows a customer to change the ownership of an existing
        billing account by transfering it to a differnt profile, either existing
        or new one
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferOfOwnershipRef'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders:
    get:
      tags:
        - orderManagement
      summary: List or find CustomerOrder objects
      description: This operation list or find CustomerOrder entities
      operationId: listCustomerOrder
      parameters:
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: orderId
          in: query
          description: to filter the results by orderId
          schema:
            type: string
        - name: customerName
          in: query
          description: to filter the results by customerName
          schema:
            type: string
        - name: profileId
          in: query
          description: to filter the results by customer profileId
          schema:
            type: string
        - name: accountId
          in: query
          description: to filter the results by customer billing accountId
          schema:
            type: string
        - name: serviceId
          in: query
          description: to filter the results by customer service id
          schema:
            type: string
        - name: channel
          in: query
          description: to filter the results by sales channel
          schema:
            type: string
        - name: state
          in: query
          description: to filter the results by order state
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: string
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: string
        - name: showOrderStatusCount
          in: query
          description: order status count of completed failed pending orders
          schema:
            type: string
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueryOrderResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/download-create:
    get:
      tags:
        - orderManagement
      summary: List or find CustomerOrder objects
      description: This operation list or find CustomerOrder entities
      operationId: createDownloadId
      parameters:
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: fromDate
          in: query
          description: from date
          schema:
            type: string
          example: '2022-11-08'
        - name: toDate
          in: query
          description: to date
          schema:
            type: string
          example: '2022-11-09'
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderDownloadAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/download:
    get:
      tags:
        - orderManagement
      summary: List or find CustomerOrder objects
      description: This operation list or find CustomerOrder entities
      operationId: download
      parameters:
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: fromDate
          in: query
          description: from date
          schema:
            type: string
          example: '2022-11-08'
        - name: toDate
          in: query
          description: to date
          schema:
            type: string
          example: '2022-11-09'
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: string
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: string
        - name: downloadId
          in: query
          description: Download ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueryDownlaodOrderResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/meta-data/order-types:
    get:
      tags:
        - orderManagement
      summary: List available order types
      description: This operation list the order types supported by COM
      operationId: getOrderTypesMetaData
      parameters:
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          required: true
          in: header
          description: channel identifier
          schema:
            type: string
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueryOrderTypeMetaDataResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/{id}:
    get:
      tags:
        - orderManagement
      summary: Retrieves a CustmerOrder by ID
      description: This operation retrieves a CustmerOrder entity.
      operationId: retrieveCustomerOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the ProductOrder
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueryOrderByIdResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/{id}/payload:
    get:
      tags:
        - orderManagement
      summary: Retrieves a CustmerOrder Payload by ID
      description: This operation retrieves a CustmerOrder Payload.
      operationId: retrieveCustomerOrderPayload
      parameters:
        - name: id
          in: path
          description: Identifier of the ProductOrder
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueryOrderDataRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/{id}/sub-orders:
    get:
      tags:
        - orderManagement
      summary: list sub orders by Order ID
      description: This operation list the sub order entities.
      operationId: listSubOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the customerOrder
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuerySubOrderResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/{id}/sub-orders/{subOrderId}:
    get:
      tags:
        - orderManagement
      summary: list sub orders by Order ID
      description: This operation list the sub order entities.
      operationId: retrieveSubOrder
      parameters:
        - name: id
          in: path
          description: Identifier of the customerOrder
          required: true
          schema:
            type: string
        - name: subOrderId
          in: path
          description: Identifier of the subOrder
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuerySubOrderByIdResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-report/orders/{id}/sub-orders/{subOrderId}/stages:
    get:
      tags:
        - orderManagement
      summary: list sub orders by Order ID
      description: This operation list the sub order entities.
      operationId: listSubOrderStages
      parameters:
        - name: id
          in: path
          description: Identifier of the customerOrder
          required: true
          schema:
            type: string
        - name: subOrderId
          in: path
          description: Identifier of the subOrder
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuerySubOrderStagesResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /query-service/customer-info/services/{serviceId}:
    get:
      tags:
        - getBasicInfo
      summary: retrives customer basic details by service id
      description: This operation retrives customer basic details by service id
      operationId: querySubscriberService
      parameters:
        - name: serviceId
          in: path
          description: Identifier of the customer service
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: additional filters
          required: false
          schema:
            type: string
          example: profile,account
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuerySubscriberServiceResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /query-service/customer-info/accounts/{accountId}:
    get:
      tags:
        - getBasicInfo
      summary: retrives customer basic details by account id
      description: This operation retrives customer basic details by account id
      operationId: querySubscriberAccount
      parameters:
        - name: accountId
          in: path
          description: Identifier of the customer billing account
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: additional filters
          required: false
          schema:
            type: string
          example: profile
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuerySubscriberAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /query-service/customer-info/profiles/{profileId}:
    get:
      tags:
        - getBasicInfo
      summary: retrives customer basic details by profile id
      description: This operation retrives customer basic details by profile id
      operationId: querySubscriberProfile
      parameters:
        - name: profileId
          in: path
          description: Identifier of the customer profile
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QuerySubscriberProfileResponse'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /query-service/group-info:
    get:
      tags:
        - groupManagement
      summary: retrives the basic details of groups by service id
      description: This operation retrives group details by service id
      operationId: queryGroupInfo
      parameters:
        - name: serviceId
          in: query
          description: Identifier of the customer service
          required: true
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FetchGroupRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /query-service/fnf-info:
    get:
      tags:
        - groupManagement
      summary: retrives the basic details of a friends and family group
      description: This operation retrives basic details of a friends and family group
      operationId: queryFnfInfo
      parameters:
        - name: serviceId
          in: query
          description: Identifier of the customer service
          required: true
          schema:
            type: string
        - name: fnfSeqId
          in: query
          description: unique seq id for the fnf group. to fetch the group by its seq id
          required: false
          schema:
            type: string
        - name: fnfGroupId
          in: query
          description: unique  id for the fnf group. to fetch the group by its id
          required: false
          schema:
            type: string
        - name: fnfTariffPlan
          in: query
          description: >-
            unique pland id for the fnf group. to fetch the groups by its plan
            id
          required: false
          schema:
            type: string
        - name: showMembers
          in: query
          description: >-
            if this flag is true, then the group member list will be returned in
            response, else not.possible values - [true,false]
          required: false
          schema:
            type: string
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FetchFNFGroupRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /query-service/query-plan:
    get:
      tags:
        - getBasicInfo
      summary: retrives the subscription/plan details of a service
      description: This operation retrives subscription details of a service
      operationId: queryPlan
      parameters:
        - name: serviceId
          in: query
          description: Identifier of the customer service
          required: true
          schema:
            type: string
        - name: packageType
          in: query
          description: filter the results based on package type. 0 - addon, 1 - base plan
          required: true
          schema:
            type: string
            enum:
              - '0'
              - '1'
        - name: show_bucket_info
          in: query
          description: add bucket details based on the filer - true/false
          required: false
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
        - name: language
          in: query
          description: >-
            this filter can be used for getting the plan name and description in
            the prefered language
          required: false
          schema:
            type: string
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/QueryPlanResponseRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/manage-group:
    post:
      tags:
        - groupManagement
      summary: add or delete group members
      description: This operation retrives group details by service id
      operationId: manageGroup
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ManageGroupMemberRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/bar-service:
    post:
      tags:
        - serviceManagement
      summary: bar service in network
      description: This operation will fully bar the service in network
      operationId: barService
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BarServiceRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/unbar-service:
    post:
      tags:
        - serviceManagement
      summary: un bar service in network
      description: This operation will fully un bar the service in network
      operationId: unbarService
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: userid
          in: header
          description: loggined user id
          required: true
          schema:
            type: string
          example: '10'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UnBarServiceRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/manage-hlr-services:
    post:
      tags:
        - serviceManagement
      summary: manage hlr services
      description: This operation can be used to enable or disable hlr/hss services
      operationId: manageHlr
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ManageHlrServicesRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-bucket:
    post:
      tags:
        - serviceManagement
      summary: update bucket
      description: This operation can be used to update the bucket details
      operationId: updateBuket
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateBucketOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/device-blacklist-whitelist:
    post:
      tags:
        - serviceManagement
      summary: blacklist or whitelist a device
      description: This operation will blacklist or whitelist a device
      operationId: deviceBlacklistWhitelist
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceBlacklistWhitelistRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-identification:
    post:
      tags:
        - profileManagement
      summary: create identification for a customer
      description: This operation creates an order entity
      operationId: createIdentification
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateIdentificationOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-identification:
    post:
      tags:
        - profileManagement
      summary: update identification for a customer
      description: This operation creates an order entity
      operationId: updateIdentification
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateIdentificationOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/transfer-loyalty-points:
    post:
      tags:
        - serviceManagement
      summary: transfer loyalty points from one loyalty account to another
      description: This operation creates an order entity
      operationId: transferLoyaltyPoints
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TransferLoyaltyPointsOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/add-loyalty-points:
    post:
      tags:
        - serviceManagement
      summary: add loyalty points in to an existing loyalty account
      description: This operation creates an order entity
      operationId: addLoyaltyPoints
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AddLoyaltyPointsOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/deduct-loyalty-points:
    post:
      tags:
        - serviceManagement
      summary: deduct loyalty points from an existing loyalty account
      description: This operation creates an order entity
      operationId: deductLoyaltyPoints
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeductLoyaltyPointsOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-profile-address:
    post:
      tags:
        - profileManagement
      summary: update address for a customer
      description: This operation creates an order entity
      operationId: updateProfileAddress
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateProfileAddressOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-service-address:
    post:
      tags:
        - serviceManagement
      summary: update address for a customer
      description: This operation creates an order entity
      operationId: updateServiceAddress
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateServiceAddressOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/detach-contact:
    post:
      tags:
        - accountManagement
      summary: update contacts for a customer
      description: This operation creates an order entity
      operationId: updateContact
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DetachContactOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/attach-contact:
    post:
      tags:
        - accountManagement
      summary: create contacts for a customer
      description: This operation creates an order entity
      operationId: createContact
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/AttachContactOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-starterpack-kyc:
    post:
      tags:
        - profileManagement
      summary: update profile details and kyc details for a starter pack GSM service
      description: This operation creates an order entity
      operationId: updateStarterPackKYC
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateStarterPackKYCOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-account-address:
    post:
      tags:
        - accountManagement
      summary: update account address for a customer
      description: This operation creates an order entity
      operationId: updateAccountAddress
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateAccountAddressOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-bill-cycle:
    post:
      tags:
        - accountManagement
      summary: change bill cycle for a customer
      description: This operation creates an order entity
      operationId: changeBillCycle
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/BillCycleChangeOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/cancel-bill-cycle-change:
    post:
      tags:
        - accountManagement
      summary: cancels the bill cycle change request for a customer
      description: This operation creates an order entity
      operationId: cancelBillCycleChange
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CancelBillCycleChangeOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/change-risk-category:
    post:
      tags:
        - accountManagement
      summary: change risk category for a customer
      description: This operation creates an order entity
      operationId: changeRiskCategory
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ChangeRiskCategoryOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-account-credit-limit:
    post:
      tags:
        - accountManagement
      summary: update credit limit for a customer
      description: This operation creates an order entity
      operationId: updateCreditLimit
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateCreditLimitOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-agg-history:
    post:
      tags:
        - accountManagement
      summary: create aggregation history
      description: This operation creates an order entity
      operationId: createAggHistory
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateAggHistoryOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-agg-history:
    post:
      tags:
        - accountManagement
      summary: update aggregation history
      description: This operation creates an order entity
      operationId: updateAggHistory
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateAggHistoryOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/delete-identification:
    post:
      tags:
        - profileManagement
      summary: delete identification for a customer
      description: This operation creates an order entity
      operationId: deleteIdentification
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeleteIdentificationOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/create-document:
    post:
      tags:
        - profileManagement
      summary: create document for a customer
      description: This operation creates an order entity
      operationId: createDocument
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateDocumentOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-document:
    post:
      tags:
        - profileManagement
      summary: updates an existing document
      description: This operation creates an order entity
      operationId: updateDocument
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateDocumentOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/delete-document:
    post:
      tags:
        - profileManagement
      summary: deletes an existing document
      description: This operation creates an order entity
      operationId: deleteDocument
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeleteDocumentOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/update-payment-preference:
    post:
      tags:
        - profileManagement
      summary: update the payment preferences of a customer
      description: This operation creates an order entity
      operationId: updatePaymentPreferences
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdatePaymentPreferenceOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/number-recycle:
    post:
      tags:
        - serviceManagement
      summary: recycle of number
      description: This operation creates an order entity
      operationId: numberRecycle
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/NumberRecycleOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/purging-order:
    post:
      tags:
        - serviceManagement
      summary: purging order
      description: This operation creates an order entity
      operationId: purgingOrder
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PurgingOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/sim-diagnosis:
    post:
      tags:
        - serviceManagement
      summary: sim diagnosis order
      description: This operation creates an order entity
      operationId: simDiagnosisOrder
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SIMDiagnosisOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/a2p-sms:
    post:
      tags:
        - serviceManagement
      summary: A2P SMS order
      description: This operation creates an order entity
      operationId: a2psmsOrder
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/A2PSMSOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/p2a-sms:
    post:
      tags:
        - serviceManagement
      summary: P2A SMS order
      description: This operation creates an order entity
      operationId: p2asmsOrder
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/P2ASMSOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
  /order-service/orders/location-query:
    post:
      tags:
        - serviceManagement
      summary: location query order
      description: This operation creates an order entity
      operationId: locationQueryOrder
      parameters:
        - name: channel
          in: header
          description: Identifier of the requesting system
          required: true
          schema:
            type: string
          example: CRM
        - name: X-Trace-Id
          in: header
          description: unique request id
          required: true
          schema:
            type: string
          example: '123113234344354354'
        - name: username
          in: header
          description: loggined user name
          required: true
          schema:
            type: string
          example: crmadmin
        - name: entityId
          in: header
          description: entity id
          required: true
          schema:
            type: string
          example: '100'
      requestBody:
        description: The Order to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/LocationQueryOrderRef'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/OrderAcknowledgementRef'
        '400':
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Method Not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable Entity
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorUnProcessableEntity'
        '500':
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    QueryOrderRef:
      required:
        - createdDate
        - orderId
        - orderType
        - state
      type: object
      properties:
        orderId:
          type: string
          description: ID created on repository side (OM system)
        orderType:
          type: string
          description: Hyperlink to access the order
        name:
          type: string
          description: >-
            Date when the order is cancelled. This is used when order is
            cancelled. 
          format: date-time
        description:
          type: string
          description: Description of the product order
        externalId:
          type: string
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        profileId:
          type: string
          description: customer id
        serviceId:
          type: string
          description: service id/MSISDN
        accountId:
          type: string
          description: billing account id
        customerName:
          type: string
          description: customer name
        channel:
          type: string
          description: channel who raised the order
        state:
          type: string
          description: current state of the order
        stateReason:
          type: string
          description: reason for the current state
        createdDate:
          type: string
          description: Date when the order was completed
          format: date-time
        createdBy:
          type: string
          description: user who created the order
        lastModifiedDate:
          type: string
          description: Expected delivery date amended by the provider
          format: date-time
        lastModifiedBy:
          type: string
          description: >-
            Contact attached to the order to send back information regarding
            this order
        comment:
          type: string
          description: Description of the product order
      description: >-
        A Product Order is a type of order which  can  be used to place an order
        between a customer and a service provider or between a service provider
        and a partner and vice versa,
    QuerySubOrderRef:
      required:
        - createdDate
        - orderId
        - state
        - subOrderId
      type: object
      properties:
        orderId:
          type: string
          description: ID created on repository side (OM system)
        subOrderId:
          type: string
          description: Hyperlink to access the order
        serviceId:
          type: string
          description: ID created on repository side (OM system)
        internalServiceId:
          type: string
          description: ID created on repository side (OM system)
        state:
          type: string
          description: ID created on repository side (OM system)
        stateReason:
          type: string
          description: ID created on repository side (OM system)
        createdDate:
          type: string
          description: Date when the order was completed
          format: date-time
        createdBy:
          type: string
          description: ID created on repository side (OM system)
        lastModifiedDate:
          type: string
          description: Expected delivery date amended by the provider
          format: date-time
        lastModifiedBy:
          type: string
          description: >-
            Contact attached to the order to send back information regarding
            this order
      description: >-
        A Product Order is a type of order which  can  be used to place an order
        between a customer and a service provider or between a service provider
        and a partner and vice versa,
    QuerySubOrderStageRef:
      required:
        - createdDate
        - stageName
        - state
        - subOrderId
      type: object
      properties:
        subOrderId:
          type: string
          description: Hyperlink to access the order
        stageName:
          type: string
          description: ID created on repository side (OM system)
        description:
          type: string
          description: ID created on repository side (OM system)
        stageCode:
          type: string
          description: ID created on repository side (OM system)
        state:
          type: string
          description: ID created on repository side (OM system)
        stateReason:
          type: string
          description: ID created on repository side (OM system)
        createdDate:
          type: string
          description: Date when the order was completed
          format: date-time
        createdBy:
          type: string
          description: ID created on repository side (OM system)
        lastModifiedDate:
          type: string
          description: Expected delivery date amended by the provider
          format: date-time
        lastModifiedBy:
          type: string
          description: >-
            Contact attached to the order to send back information regarding
            this order
        skipAllowed:
          type: boolean
          description: >-
            Contact attached to the order to send back information regarding
            this order
        retryAllowed:
          type: boolean
          description: >-
            Contact attached to the order to send back information regarding
            this order
      description: >-
        A Product Order is a type of order which  can  be used to place an order
        between a customer and a service provider or between a service provider
        and a partner and vice versa,
    QueryOrderDataRef:
      type: object
      required:
        - _metadata
        - orderPayload
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        orderPayload:
          type: object
          description: >-
            this section will contain the payload json for the order which is
            submitted from channels. the json structure will change depending on
            the order type. COM will return whatever submitted during order
            capture time as it is
          example:
            orderPayload: '2323434324'
            orderType: Onboarding
            description: Product Order illustration sample
            externalId: PO-456
            requestedCompletionDate: '2021-09-02T07:06:15.515Z'
            requestedStartDate: '2021-09-02T07:06:15.515Z'
            profile:
              birthDate: 02-09-2001
              familyName: string
              givenName: string
              middleName: string
              nationality: '1'
              title: '1'
              partyCharacteristic:
                - name: profileType
                  valueType: string
                  value: '0'
                - name: subscriberCategory
                  valueType: string
                  value: '2'
                - name: subscriberSubCategory
                  valueType: string
                  value: '7'
              languageAbility:
                - languageCode: '1'
              individualIdentification:
                - attachment:
                    content: string
                    description: string
                    id: string
                    mimeType: string
                    name: string
                    url: string
                  id: string
                  identificationId: string
                  identificationType: string
                  issuingAuthority: string
                  issuingDate: '2021-09-02'
                  validFor:
                    endDateTime: '2021-09-02T07:06:15.515Z'
                    startDateTime: '2021-09-02T07:06:15.515Z'
              contactMedium:
                - characteristic:
                    contactType: smsNumber
                    phoneNumber: '1234567890'
                  mediumType: telephoneNumber
                - characteristic:
                    contactType: faxNumber
                    faxNumber: '9012345678'
                  mediumType: telephoneNumber
                - characteristic:
                    contactType: emailAddress
                    emailAddress: sai@123.com
                  mediumType: emailAddress
                - characteristic:
                    contactType: residentialAddress
                    addrLine1: house no 268
                    addrLine2: 1000 ADDIS ABABA
                    addrLine3: Kebele 1, 1302/29
                    addrLine4: Addis Ababa
                    addrLine5: Addis Ababa
                    addrLine6: Shoa
                    addrLine7: Achefer
                    addrLine8: '1000'
                    addrLine9: P.O. Box 1519
                    addrLine10: '8.9806'
                    addrLine11: '38.7578'
                  mediumType: address
              account:
                billcycleId: 1
                billingOnHold: 0
                chargingPattern: 1
                dispatchMode: 0
                dunningExclusion: 0
                entityId: 200
                itemizedbillRequired: 0
                languageId: 0
                name: test account
                remarks: string
                riskcategoryId: 0
                status: 0
                taxCode: 0
                taxExemptionCode: 0
                title: string
                unicodeName: string
                contactMedium:
                  - mediumType: address
                    characteristic:
                      city: string
                      contactType: string
                      country: string
                      emailAddress: string
                      faxNumber: string
                      phoneNumber: string
                      postCode: string
                      stateOrProvince: string
                      street1: string
                      street2: string
                serviceGroups:
                  - services:
                      - id: '9765432112'
                        name: GSM Service
                        status: '1'
                        chargingPatter: '1'
                        contactMedium:
                          - mediumType: address
                            characteristic:
                              contactType: residentialAddress
                              addrLine1: house no 268
                              addrLine2: 1000 ADDIS ABABA
                              addrLine3: Kebele 1, 1302/29
                              addrLine4: Addis Ababa
                              addrLine5: Addis Ababa
                              addrLine6: Shoa
                              addrLine7: Achefer
                              addrLine8: '1000'
                              addrLine9: P.O. Box 1519
                              addrLine10: '8.9806'
                              addrLine11: '38.7578'
                        characteristics:
                          - name: MSISDN
                            valueType: string
                            value: 415 279 7439
                          - name: ICCID
                            valueType: string
                            value: '321321'
                          - name: IMSI
                            valueType: string
                            value: '321321'
                        subscriptions:
                          - planId: '120'
                            planName: TMF25
                            planDesc: GSM Base Plan
                            planType: 0
                            upcVersion: '1'
                            activationDate: '2021-09-02T07:06:15.515Z'
                            expiryDate: '2021-09-02T07:06:15.515Z'
                            charges:
                              - upcChargeId: '1001'
                                upcChargeName: Base offer Fee
                                description: Base offer Fee
                                overridden: false
                                chargeRecurranceType: 1
                                chargeCategory: 0
                                chargeFrequency: 0
                                quantity: 1
                                rate: 10
                                chargeStartDate: '2021-09-02T07:06:15.515Z'
                                chargeEndDate: '2021-09-02T07:06:15.515Z'
                                amount: 0
                                chargeVersion: 0
                                prorationFlag: 0
    QueryMetaDataRef:
      type: object
      required:
        - requestId
        - channel
      properties:
        hasNext:
          type: boolean
          description: Application relevant detail, defined in the API or a common list.
        count:
          type: string
          description: Actual number of items returned in the response body
          example: 1
        totalCount:
          type: string
          description: >-
            total number of records in the system. this parameter will come only
            with the first page response
          example: 1
        requestId:
          type: string
          description: unique request id
          example: '132132323234454'
        channel:
          type: string
          description: channel identifier from which the request is initiated
          example: CRM
        totalFailedOrderCount:
          type: string
          description: total number of failed orders
          example: 1
        totalCompletedOrderCount:
          type: string
          description: total number of completed orders
          example: 1
        totalPendingOrderCount:
          type: string
          description: total number of pending orders
          example: 1
        totalInProgressOrderCount:
          type: string
          description: total number of in progress orders
          example: 1
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
    QueryOrderTypeMetaDataResponse:
      required:
        - _metadata
        - results
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QueryOrderTypeRef'
    QueryOrderTypeRef:
      required:
        - orderType
      type: object
      properties:
        orderType:
          type: string
          example: Onboarding
          description: order type
    QueryOrderResponse:
      required:
        - _metadata
        - results
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QueryOrderRef'
      description: >-
        An identified part of the order. A product order is decomposed into one
        or more order items.
    QueryOrderByIdResponse:
      required:
        - _metadata
        - results
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          maxItems: 1
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QueryOrderRef'
      description: >-
        An identified part of the order. A product order is decomposed into one
        or more order items.
    QuerySubOrderResponse:
      required:
        - _metadata
        - results
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QuerySubOrderRef'
      description: >-
        An identified part of the order. A product order is decomposed into one
        or more order items.
    QuerySubOrderByIdResponse:
      required:
        - _metadata
        - results
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          maxItems: 1
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QuerySubOrderRef'
      description: >-
        An identified part of the order. A product order is decomposed into one
        or more order items.
    QuerySubOrderStagesResponse:
      required:
        - _metadata
        - results
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QuerySubOrderStageRef'
      description: >-
        An identified part of the order. A product order is decomposed into one
        or more order items.
    ConnectionMigrationRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ConnectionMigration
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Connection Migration Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForConnnMigration'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
        profile:
          $ref: '#/components/schemas/ProfileRefForConMig'
          description: required when a new account creation is required
    ChangeSubscriptionRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ChangeSubscription
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Change Subscription Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementChangeSubscription'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    CreateGroupRef:
      type: object
      required:
        - orderType
        - groupManagement
      properties:
        orderType:
          type: string
          example: CreateGroupAccount
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        groupManagement:
          $ref: '#/components/schemas/GroupManagementRef'
        payment:
          $ref: '#/components/schemas/PaymentRef'
    BarServiceRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: BarService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: bar service in network
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForBarUnbar'
    DeviceBlacklistWhitelistRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: DeviceBlacklistWhitelist
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForBlacklistWhitelist'
    UpdateBucketOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateBucket
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForUpdateBucket'
    ManageHlrServicesRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ManageHlrServices
          description: unique identifier to identify the operation
        comment:
          type: string
          example: manage hlr services
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForManageHlr'
    UnBarServiceRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UnBarService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: un bar service in network
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForBarUnbar'
    CreateIdentificationOrderRef:
      type: object
      required:
        - orderType
        - identification
      properties:
        orderType:
          type: string
          example: CreateIdentification
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        identification:
          $ref: '#/components/schemas/IdentificationRef'
    UpdateIdentificationOrderRef:
      type: object
      required:
        - orderType
        - identification
      properties:
        orderType:
          type: string
          example: UpdateIdentification
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        identification:
          $ref: '#/components/schemas/IdentificationRef'
    CreateDocumentOrderRef:
      type: object
      required:
        - orderType
        - documentDetails
      properties:
        orderType:
          type: string
          example: CreateDocument
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        documentDetails:
          $ref: '#/components/schemas/DocumentDetailsRef'
    UpdateDocumentOrderRef:
      type: object
      required:
        - orderType
        - documentDetails
      properties:
        orderType:
          type: string
          example: UpdateDocument
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        documentDetails:
          $ref: '#/components/schemas/DocumentDetailsRefForUpdate'
    DeleteDocumentOrderRef:
      type: object
      required:
        - orderType
        - documentDetails
      properties:
        orderType:
          type: string
          example: DeleteDocument
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        documentDetails:
          $ref: '#/components/schemas/DeleteDocumentRef'
    DeleteIdentificationOrderRef:
      type: object
      required:
        - orderType
        - identification
      properties:
        orderType:
          type: string
          example: DeleteIdentification
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        identification:
          $ref: '#/components/schemas/DeleteIdentificationRef'
    UpdatePaymentPreferenceOrderRef:
      type: object
      required:
        - orderType
        - paymentPreference
      properties:
        orderType:
          type: string
          example: UpdatePaymentPreference
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        paymentPreference:
          $ref: '#/components/schemas/PaymentPreferenceRef'
    ManageGroupMemberRef:
      type: object
      required:
        - orderType
        - groupManagement
      properties:
        orderType:
          type: string
          example: ManageGroup
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        groupManagement:
          $ref: '#/components/schemas/GroupMemberManagementRef'
        payment:
          $ref: '#/components/schemas/PaymentRef'
    ChangeGroupPlanRef:
      type: object
      required:
        - orderType
        - groupManagement
      properties:
        orderType:
          type: string
          example: ChangeGroupPlan
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        groupManagement:
          $ref: '#/components/schemas/GroupManagementForChangePlanRef'
        payment:
          $ref: '#/components/schemas/PaymentRef'
    FetchGroupRef:
      type: object
      required:
        - _metadata
        - results
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          type: array
          items:
            $ref: '#/components/schemas/FetchGroupResponseRef'
    FetchGroupResponseRef:
      type: object
      required:
        - groupId
        - ownerMsisdn
        - groupSeqId
        - groupName
        - status
        - membersCount
        - groupMembers
      properties:
        groupId:
          type: string
          example: '9876543212'
          description: unique id of the group
        ownerMsisdn:
          type: string
          example: '9876543212'
          description: unique id of the service who is owning the group
        groupSeqId:
          type: string
          example: '121'
          description: unique seq id of the group
        groupName:
          type: string
          example: '9876543212'
          description: unique service id of the customer
        status:
          type: string
          example: '1'
          description: status of the group
        membersCount:
          type: string
          example: '1'
          description: no of members under this group
        groupMembers:
          type: array
          items:
            $ref: '#/components/schemas/GroupMemberRef'
          example:
            - service_id: '85580000011'
        createUser:
          type: string
          example: admin
          description: create user
        createDate:
          type: string
          format: date-time
          description: date on which the group has been created
    GroupMemberRef:
      type: object
      required:
        - serviceId
      properties:
        serviceId:
          type: string
          example: '21321323'
          description: uniquue service id of the member
    GroupManagementRef:
      type: object
      required:
        - serviceId
        - accountId
        - groupId
        - groupName
        - subscriptions
      properties:
        serviceId:
          type: string
          example: '9876543212'
          description: unique service id of the customer
        accountId:
          type: string
          example: '10056'
          description: billing account id under which the group should be created
        groupId:
          type: string
          example: GRP_110
          description: Unique group id
        groupName:
          type: string
          example: test group
          description: group name
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRef'
          description: list of plans which are to be added to the group
    GroupMemberManagementRef:
      type: object
      required:
        - serviceId
        - accountId
        - groupId
        - groupSeqId
        - groupAction
        - subscriptions
      properties:
        serviceId:
          type: string
          example: '9876543212'
          description: the member service id which is to be added or removed
        accountId:
          type: string
          example: '10056'
          description: billing account id under which the group should be created
        groupId:
          type: string
          example: GRP_110
          description: Unique group id
        groupName:
          type: string
          example: test group
          description: group name
        groupSeqId:
          type: string
          example: '112'
          description: unique seq id created in bss for this group
        groupAction:
          type: string
          example: '1'
          description: >-
            this parameter will identify what operation to be performed on the
            group. the supported operations are 1 - add member, 2 - delete
            member
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRef'
          description: list of plans which are to be added to the group
    GroupManagementForChangePlanRef:
      type: object
      required:
        - serviceId
        - accountId
        - groupId
        - groupName
        - groupSeqId
        - oldCart
        - newCart
      properties:
        serviceId:
          type: string
          example: '9876543212'
          description: unique service id of the customer
        accountId:
          type: string
          example: '10056'
          description: billing account id under which the group should be created
        groupId:
          type: string
          example: GRP_110
          description: Unique group id
        groupSeqId:
          type: string
          example: '1112'
          description: unique sequence id created in bss for the group
        groupName:
          type: string
          example: test group
          description: group name
        oldCart:
          $ref: '#/components/schemas/OldCartRef'
          description: this section will contain the current plan details of the group
        newCart:
          $ref: '#/components/schemas/NewCartRef'
          description: this section will contain the new plan details of the group
    TransferOfOwnershipRef:
      type: object
      required:
        - orderType
        - accountManagement
      properties:
        orderType:
          type: string
          example: TransferOfService
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        accountManagement:
          $ref: '#/components/schemas/AccountManagementForToa'
        profile:
          $ref: '#/components/schemas/ProfileRefTOA'
          description: >-
            new profile information. if the service need to be transfered to a
            new profile or new account, profile/account section should be filler
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    TransferOfServiceRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: TransferOfService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Transfer of Service Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForTOS'
        profile:
          $ref: '#/components/schemas/ProfileRefForTOS'
          description: >-
            new profile information. if the service need to be transfered to a
            new profile or new account, profile/account section should be filler
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    ChangeSimRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ChangeSim
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an ChangeSim Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementRef'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    ChangeMsisdnOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ChangeMsisdn
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a ChangeMsisdn Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForChangeMsisdn'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    UpdateLanguageOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateLanguage
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Update Language Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForUpdateLanguageRef'
    UpdateServiceOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an UpdateService Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForUpdateServiceRef'
    PaymentReversalOrderRef:
      type: object
      required:
        - orderType
        - payment
      properties:
        orderType:
          type: string
          example: PaymentReversal
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Payment Reversal Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        payment:
          $ref: '#/components/schemas/PaymentReversalRef'
    CreditRefundOrderRef:
      type: object
      required:
        - orderType
        - payment
      properties:
        orderType:
          type: string
          example: CreditRefund
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Credit Refnd Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        creditRefund:
          $ref: '#/components/schemas/CreditRefundRef'
    MakePaymentOrderRef:
      type: object
      required:
        - orderType
        - payment
      properties:
        orderType:
          type: string
          example: MakePayment
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an MakePayment Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        payment:
          $ref: '#/components/schemas/PaymentRef'
    ApprovalCallbackRef:
      type: object
      required:
        - orderId
        - approvalStatus
      properties:
        orderId:
          type: string
          example: '12332324234'
          description: unique order id
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        approvalStatus:
          type: string
          example: approved
          description: status of approval
          enum:
            - approved
            - in-progress
            - rejected
        comments:
          type: string
          description: comment if any
        approver:
          type: string
          example: admin
          description: name of the person who approves or rejects the request
    OrderPaymentUpdateRef:
      type: object
      required:
        - orderId
        - payment
        - deposit
      properties:
        orderId:
          type: string
          example: '12332324234'
          description: unique order id
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        payment:
          $ref: '#/components/schemas/PaymentRef'
        deposit:
          type: array
          items:
            $ref: '#/components/schemas/DepositRefForOrderCallback'
    ServiceManagementForConnnMigration:
      type: object
      required:
        - serviceId
        - destinationConnectionType
        - subscriptions
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        destinationConnectionType:
          type: string
          description: destination connection type. 0-Prepaid, 1-Postpaid, 2-hybrid
          example: '9876543212'
        osCreditBalTransfer:
          type: string
          description: >-
            specifies if outstanding balance transfer is required or not.
            applicable when creating new account
          example: '0'
          enum:
            - '0'
            - '1'
        depositTransfer:
          type: string
          description: >-
            specifies if deposit transfer is required or not. applicable when
            creating new account
          example: '0'
          enum:
            - '0'
            - '1'
        chargeFromFlag:
          type: string
          description: ''
          example: '0'
          enum:
            - '0'
            - '1'
        duplicatePlanDetails:
          type: string
          description: ''
          example: 'false'
          enum:
            - 'true'
            - 'false'
        creditLimit:
          type: string
          description: new credit limit value
          example: '1000'
        creditClass:
          type: string
          description: new credit class
          example: '9876543212'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRef'
          description: new subscription detaiils
    ServiceManagementForBarUnbar:
      type: object
      required:
        - serviceId
        - planId
      properties:
        serviceId:
          type: string
          description: the serviceId/msisdn to be barred
          example: '9876543212'
        planId:
          type: string
          description: plan id
          example: '1001'
    ServiceManagementForUpdateBucket:
      type: object
      required:
        - serviceId
        - bucketDetails
      properties:
        serviceId:
          type: string
          description: the serviceId/msisdn to be barred
          example: '9876543212'
        bucketDetails:
          $ref: '#/components/schemas/UpdateBucketRef'
    UpdateBucketRef:
      type: object
      required:
        - bucketId
        - amount
        - adjustAction
      properties:
        bucketId:
          type: string
          description: unique id of the bucket
          example: PS_MQ_Friendly_Buc
        amount:
          type: string
          description: amount to be added to the bucket
          example: '100'
        adjustAction:
          type: string
          description: action to be performed
          enum:
            - SET
          example: SET
    ServiceManagementForManageHlr:
      type: object
      required:
        - serviceId
        - hlrServices
      properties:
        serviceId:
          type: string
          description: the serviceId/msisdn to be barred
          example: '9876543212'
        hlrServices:
          type: array
          items:
            $ref: '#/components/schemas/HlrServiceRef'
    HlrServiceRef:
      type: object
      required:
        - name
        - status
      properties:
        name:
          type: string
          description: hlr service name
          example: mca
        status:
          type: string
          description: true - enable service, false - disable service
          example: 'true'
          enum:
            - 'true'
            - 'false'
    createContractOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: CreateContract
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an contract Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/serviceManagementCreateContract'
    cancelContractOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: CancelContract
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an contract cancellation Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/serviceManagementCancelContract'
    ServiceManagementForBlacklistWhitelist:
      type: object
      required:
        - serviceId
        - deviceId
        - status
      properties:
        serviceId:
          type: string
          description: the serviceId/msisdn to be barred
          example: '9876543212'
        deviceId:
          type: string
          description: device IMEI
          example: '233338989273728'
        status:
          type: string
          description: specified if blacklist of whitelist. 1 - blacklist, 2 - whitelist
          example: '1'
          enum:
            - '1'
            - '2'
        reason:
          type: string
          description: >-
            reason for blacklisting. mandatory when the status is 1. possiblle
            vales - 0026 - Fraud, 0016 - Duplicate, 0011 - Stolen, 0010 - Fake
            Device
          example: '0011'
          enum:
            - '0026'
            - '0016'
            - '0011'
            - '0010'
    ServiceManagementForTOS:
      type: object
      required:
        - serviceId
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        destinationProfileId:
          type: string
          description: >-
            existing profile id to which this account should be moved. if
            customer wishes to move the service to a new profile, then this tag
            can be ignored
          example: '100633'
        destinationAccountId:
          type: string
          description: >-
            existing account id to which this account should be moved. if
            customer wishes to move the service to a new account, then this tag
            can be ignored
          example: '50098'
        depositTransfer:
          type: string
          description: >-
            flag which tells if deposit transfer is required or not. 0 - not
            required, 1- required
          example: '0'
        osCreditBalTransfer:
          type: string
          description: >-
            flag which tells if outstanding credit balance transfer is required
            or not. 0 - not required, 1- required
          example: '0'
    AccountManagementForToa:
      type: object
      required:
        - accountId
        - profileId
        - destinationProfileId
      properties:
        accountId:
          type: string
          description: billing account id which needs to be transfered
          example: '560093'
        destinationProfileId:
          type: string
          description: >-
            existing profile id to which this account should be moved. if
            customer wishes to move the account to a new profile, then this tag
            can be ignored, and the profile section in this API should be filled
            with information to create the new profile
          example: '100633'
        profileId:
          type: string
          description: current profile id to which this billing account belongs
          example: '50098'
    ServiceManagementChangeSubscription:
      type: object
      required:
        - serviceId
        - oldCart
        - newCart
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        oldCart:
          $ref: '#/components/schemas/OldCartRef'
        newCart:
          $ref: '#/components/schemas/NewCartRef'
        expiryDate:
          type: string
          description: expiryDate of subscriber
          example: '2020-02-09T15:10:47.609Z'
    serviceManagementCreateContract:
      type: object
      required:
        - serviceId
        - contract
      properties:
        serviceId:
          type: string
          description: the serviceId/msisdn for which contract to be created
          example: '9876543212'
        contract:
          $ref: '#/components/schemas/CreateContractRef'
    OldCartRef:
      type: object
      required:
        - basePlanId
      properties:
        basePlanId:
          type: string
          example: '121'
          description: current base plan id of the service
    CompatbleIncompatibeAddonsRef:
      type: object
      required:
        - subscriptionId
        - planId
      properties:
        subscriptionId:
          type: string
          example: '121323'
          description: unique subscription of the addon plan
        planId:
          type: string
          example: '125'
          description: add on plan id
    NewCartRef:
      type: object
      required:
        - subscriptions
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRef'
    ServiceManagementForUpdateLanguageRef:
      type: object
      required:
        - serviceId
        - languageId
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        languageId:
          type: string
          example: '1'
          description: >-
            language id, 1 - English,2 - Amharic,3 - Somali,4 - Tigrinya,5 -
            Oromo
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
    ServiceManagementForUpdateServiceRef:
      type: object
      required:
        - serviceId
        - basicInfo
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        basicInfo:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberBasicInfoRef'
          example:
            - id: serviceName
              value: GSM Service
            - id: customerEmailId
              value: example@gmail.com
            - id: customerContactNumber
              value: '9876543210'
    UpdateProfileOrderRef:
      type: object
      required:
        - orderType
        - profileManagement
      properties:
        orderType:
          type: string
          example: UpdateProfile
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profileManagement:
          $ref: '#/components/schemas/ProfileManagementForUpdateProfileRef'
    ProfileManagementForUpdateProfileRef:
      type: object
      required:
        - profileId
        - basicInfo
      properties:
        profileId:
          type: string
          description: unique customer id
          example: '50067'
        basicInfo:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberBasicInfoRef'
          example:
            - id: familyName
              value: ABC Family
            - id: givenName
              value: Osama Bin Laden
            - id: nationality
              value: '1'
            - id: birthDate
              value: 02-11-2007
            - id: minorFlag
              value: '1'
            - id: annualTurnover
              value: '10000'
            - id: businessDescription
              value: test
            - id: noOfEmployees
              value: '4'
            - id: noOfVoiceLines
              value: '5'
            - id: industry
              value: '1'
    UpdateAccountOrderRef:
      type: object
      required:
        - orderType
        - accountManagement
      properties:
        orderType:
          type: string
          example: UpdateAccount
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an UpdateAccount Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        accountManagement:
          $ref: '#/components/schemas/AccountManagementForUpdateAccountRef'
    AccountManagementForUpdateAccountRef:
      type: object
      required:
        - accountId
        - basicInfo
      properties:
        accountId:
          type: string
          description: unique billing account id of the subscriber
          example: '5007643'
        basicInfo:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberBasicInfoRef'
          example:
            - id: billingOnHold
              value: 0
            - id: itemizedbillRequired
              value: 0
            - id: dunningExclusion
              value: 0
            - id: excelFileFlag
              value: 0
            - id: languageId
              value: '1'
            - id: name
              value: test account
            - id: title
              value: '1'
            - id: contactEmailId
              value: someone@examplemail.com
            - id: contactEmailId
              value: someone@examplemail.com
            - id: autoDebit
              value: 1
            - id: bankAccountNo
              value: '113124234234'
            - id: bankID
              value: '1221'
            - id: bankAccountName
              value: abc bank
            - id: majorSicCode
              value: '0'
            - id: sicCode
              value: '1'
            - id: writeOffFlag
              value: 0
    TerminateServiceOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: TerminateService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Terminate Service Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementSuspendRef'
    ResumeServiceOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ResumeService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Resume Service Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementSuspendRef'
    ActivateServiceOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ActivateService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Activate Service Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementActivateServiceRef'
    LifeCycleSyncTerminationOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: LifeCycleSyncTermination
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementLifecycleSyncTerminationRef'
    LifeCycleSyncOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: LifeCycleSync
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementLifecycleSyncRef'
    SuspendServiceOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: SuspendService
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Suspend Service Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementSuspendRef'
    ChangeDealOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ChangeDeal
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Suspend Service Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementDealRef'
    UpdateServiceStateOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateServiceState
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Service State Change Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceStateManagementRef'
    NumberRecycleOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: NumberRecycle
          description: unique identifier to identify the operation
        comment:
          type: string
          example: recycle of number
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementNumberRecycleRef'
    PurgingOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: PurgingOrder
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementPurgingRef'
    SIMDiagnosisOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: SIMDiagnosis
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementSIMDiagnosisOrderRef'
    A2PSMSOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: A2PSMS
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementA2PSMSOrderRef'
    P2ASMSOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: P2ASMS
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementP2ASMSOrderRef'
    LocationQueryOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: LocationQuery
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementLocationQueryOrderRef'
    ServiceManagementLifecycleSyncTerminationRef:
      type: object
      required:
        - serviceId
        - reasonCode
        - reasonDesc
        - currentState
      properties:
        serviceId:
          type: string
          example: '9876543211'
          description: unique service id/msisdn of the subscriber
        currentState:
          type: string
          example: Active
          description: current lifecycle state of the service
          enum:
            - Active
            - Suspend
        reasonCode:
          type: string
          example: '1'
          description: reason code for changing the service life cycle status
        reasonDesc:
          type: string
          description: reason for changing the service life cycle status
    ServiceManagementLifecycleSyncRef:
      type: object
      required:
        - serviceId
        - reasonCode
        - reasonDesc
        - currentState
        - newState
      properties:
        serviceId:
          type: string
          example: '9876543211'
          description: unique service id/msisdn of the subscriber
        currentState:
          type: string
          example: Active
          description: current lifecycle state of the service
        newState:
          type: string
          example: Suspend
          description: new lifecycle state of the service
        reasonCode:
          type: string
          example: '1'
          description: reason code for changing the service life cycle status
        reasonDesc:
          type: string
          example: Expired
          description: reason for changing the service life cycle status
          enum:
            - Expired
            - Disabled
            - Voluntary
    ServiceManagementSuspendRef:
      type: object
      required:
        - serviceId
        - reason
      properties:
        serviceId:
          type: string
          example: '9876543211'
          description: unique service id/msisdn of the subscriber
        reason:
          type: number
          example: '1'
          description: reason code for changing the service life cycle status
        remarks:
          type: string
          example: state change of the subscriber
          description: remarks for changing the service life cycle status
    ServiceManagementDealRef:
      type: object
      required:
        - serviceId
        - dealId
        - circleId
      properties:
        serviceId:
          type: string
          example: '9876543211'
          description: unique service id/msisdn of the subscriber
        dealId:
          type: string
          example: '821'
          description: deal id
        circleId:
          type: string
          example: '10'
          description: circle id of the subscriber
        remarks:
          type: string
          example: deal change of the subscriber
          description: remarks for changing the deal of a subscriber
    ServiceStateManagementRef:
      type: object
      required:
        - serviceId
        - cmpState
        - currentCmpState
        - billingState
        - isPlanChange
        - isDealChange
        - planId
        - dealId
        - reasonCode
      properties:
        serviceId:
          type: string
          example: '9876543211'
          description: unique service id/msisdn of the subscriber
        cmpState:
          type: number
          example: A
          description: CMP/OCS state of the subscriber
        currentCmpState:
          type: number
          example: TP
          description: current CMP/OCS state of the subscriber
        billingState:
          type: number
          example: '1'
          description: billing state of the subscriber
        isPlanChange:
          type: number
          example: '1'
          description: indicate plan change required or not; 1-yes,0-no
        isDealChange:
          type: number
          example: '1'
          description: indicate deal change required or not; 1-yes,0-no
        planId:
          type: string
          example: '100'
          description: base plan id of the subscriber
        dealId:
          type: string
          example: '200'
          description: deal id of the subscriber
        expiryDate:
          type: string
          example: '2025-02-10T12:00:00.000Z'
          description: base plan expiry
        reasonCode:
          type: number
          example: '1'
          description: reason code for changing the service life cycle status
        remarks:
          type: string
          example: state change of the subscriber
          description: remarks for changing the service life cycle status
        circleId:
          type: string
          example: '1'
          description: circle id of the subscriber
    ServiceManagementNumberRecycleRef:
      type: object
      required:
        - serviceId
      properties:
        serviceId:
          type: string
          example: '9876543211'
          description: unique service id/msisdn of the subscriber
    ServiceManagementPurgingRef:
      type: object
      required:
        - imsi
        - circleId
      properties:
        imsi:
          type: string
          example: '9876543211977574'
          description: unique imsi of the subscriber
        circleId:
          type: string
          example: '1'
          description: circle id of the subscriber
    ServiceManagementSIMDiagnosisOrderRef:
      type: object
      required:
        - serviceId
      properties:
        serviceId:
          type: string
          example: '919825010000'
          description: unique msisdn of the subscriber
        accountId:
          type: string
          example: '2346779'
          description: unique account id of the subscriber
        circleId:
          type: string
          example: '1'
          description: unique circle id of the subscriber
        filter:
          type: string
          example: accountDetails
          description: filter needed to fetch the information
    ServiceManagementA2PSMSOrderRef:
      type: object
      required:
        - serviceId
        - circleId
        - smsText
      properties:
        serviceId:
          type: string
          example: '919825010000'
          description: unique msisdn of the subscriber
        accountId:
          type: string
          example: '2346779'
          description: unique account id of the subscriber
        circleId:
          type: string
          example: '1'
          description: unique circle id of the subscriber
        smsText:
          type: string
          example: test message
          description: sms text
    ServiceManagementP2ASMSOrderRef:
      type: object
      required:
        - serviceId
        - circleId
        - smsText
        - shortCode
      properties:
        serviceId:
          type: string
          example: '919825010000'
          description: unique msisdn of the subscriber
        accountId:
          type: string
          example: '2346779'
          description: unique account id of the subscriber
        circleId:
          type: string
          example: '1'
          description: unique circle id of the subscriber
        smsText:
          type: string
          example: test message
          description: sms text
        shortCode:
          type: string
          example: '56007'
          description: short code
    ServiceManagementLocationQueryOrderRef:
      type: object
      required:
        - serviceId
        - accountId
        - circleId
      properties:
        serviceId:
          type: string
          example: 919825010000,919825010001,919825010002
          description: unique msisdn/msisdn list of the subscriber
        accountId:
          type: string
          example: '2346779'
          description: unique account id of the subscriber
        circleId:
          type: string
          example: '1'
          description: unique circle id of the subscriber
    TransferDepositOrderRef:
      type: object
      required:
        - orderType
        - deposit
      properties:
        orderType:
          type: string
          example: TransferDeposit
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Transfer Deposit Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        deposit:
          $ref: '#/components/schemas/TransferDepositRef'
    BookDepositOrderRef:
      type: object
      required:
        - orderType
        - deposit
      properties:
        orderType:
          type: string
          example: BookDeposit
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Book Deposit Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        deposit:
          $ref: '#/components/schemas/BookDepositRef'
    BookDepositRef:
      type: object
      required:
        - serviceId
        - depositAmount
        - depositType
        - bookingId
        - paymentDetails
      properties:
        serviceId:
          type: string
          example: '2687819882'
          description: Service ID/MSISDN of the subscriber
        depositAmount:
          type: string
          example: '100'
          description: Amount deposited
        bookingId:
          type: string
          example: '1'
          description: >-
            Category of the deposit. Possible Values - 1-Deposit 2-Security
            Deposit
        depositType:
          type: string
          example: '1'
          description: Type of deposit
        currencyCode:
          type: string
          example: USD
          description: Currency in which the payment was registered
        amountPaid:
          type: string
          example: '100'
          description: Actual amount paid by the subscriber
        comment:
          type: string
          example: service deposit
          description: Comments entered during the booking
        status:
          type: string
          example: '0'
          description: deposit status. possible values - 0
        paymentDetails:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetailRefBookDeposit'
    TransferDepositRef:
      type: object
      required:
        - serviceId
        - accountId
        - destinationServiceId
        - amount
        - isTerminationSettlement
        - transferType
        - depositId
      properties:
        serviceId:
          type: string
          example: '2687819882'
          description: Service ID/MSISDN of the subscriber
        accountId:
          type: string
          example: '1000897'
          description: billing account id
        profileId:
          type: string
          example: '5008776'
          description: billing profile id
        amount:
          type: string
          example: '100'
          description: amount to be transfered
        currencyCode:
          type: string
          example: USD
          description: currency code
        transferType:
          type: string
          example: '1'
          description: Type of transfer
        isRefund:
          type: string
          example: '0'
          description: specifies if the operation is part of refund or not
          enum:
            - '0'
            - '1'
        destinationServiceId:
          type: string
          example: '85524007490'
          description: destination service id
        destinationAccountId:
          type: string
          example: '10000465'
          description: destination account id
        destinationProfileId:
          type: string
          example: '500000815'
          description: specifies if the operation is part of refund or not
        comment:
          type: string
          example: service deposit
          description: Comments entered during the booking
        depositId:
          type: string
          example: '1'
          description: deposit id generated during the booking
        isTerminationSettlement:
          type: string
          example: '1'
          description: specifies the termination settlement; 1-true, 0-false
    PaymentDetailRefBookDeposit:
      type: object
      required:
        - paymentMode
      properties:
        paymentMode:
          type: string
          description: >-
            mode of payment. possible values -
            [1-CC,2-DC,3-Cheque,4-DD,6-Cash,7-tax-certificate]
          example: '1'
    TransferOutstandingOrderRef:
      type: object
      required:
        - orderType
        - outstanding
      properties:
        orderType:
          type: string
          example: TransferOutstanding
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        outstanding:
          $ref: '#/components/schemas/TransferOutstandingRef'
    TransferOutstandingRef:
      type: object
      required:
        - sourceAccountId
        - destinationAccountId
      properties:
        sourceAccountId:
          type: string
          example: '1000897'
          description: source billing account id
        destinationAccountId:
          type: string
          example: '10000465'
          description: destination billing account id
        comment:
          type: string
          example: transfer account outstanding
          description: Comments entered during the transfer
    ServiceManagementRef:
      required:
        - serviceId
        - currentImsi
        - newImsi
        - currentIccid
        - newIccid
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        currentImsi:
          type: string
          example: '9656453215343434'
          description: current imsi
        newImsi:
          type: string
          example: '965645321512121'
          description: new imsi
        currentIccid:
          type: string
          example: '96564532153232'
          description: iccid of the curent sim
        newIccid:
          type: string
          example: '9656453215'
          description: iccid of the new sim
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
    ServiceManagementForChangeMsisdn:
      required:
        - serviceId
        - newMsisdn
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        newMsisdn:
          type: string
          example: '9656453215'
          description: new msisdn
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
    CreateSafeCustodyOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: CreateSafeCustody
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an SafeCustody Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementCreateSafeCustody'
    UpdateSafeCustodyOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateSafeCustody
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an UpdateSafeCustody Order
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementUpdateSafeCustody'
    ExtendSafeCustodyOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ExtendSafeCustody
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an extend safe custody Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementExtendSafeCustody'
    DeleteSafeCustodyOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: DeleteSafeCustody
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a delete safe custody Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementDeleteSafeCustody'
    CancelSafeCustodyOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: CancelSafeCustody
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a cancel safe custody Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementCancelSafeCustody'
    ServiceManagementCreateSafeCustody:
      required:
        - serviceId
        - safeCustody
        - subscriptions
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        safeCustody:
          $ref: '#/components/schemas/CreateSafeCustodyRef'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRef'
    ServiceManagementExtendSafeCustody:
      required:
        - serviceId
        - safeCustody
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        safeCustody:
          $ref: '#/components/schemas/ExtendSafeCustodyRef'
    ServiceManagementDeleteSafeCustody:
      required:
        - serviceId
        - safeCustody
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        safeCustody:
          $ref: '#/components/schemas/DeleteSafeCustodyRef'
    ServiceManagementCancelSafeCustody:
      required:
        - serviceId
        - safeCustody
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        safeCustody:
          $ref: '#/components/schemas/CancelSafeCustodyRef'
    ServiceManagementUpdateSafeCustody:
      required:
        - serviceId
        - safeCustody
      properties:
        serviceId:
          type: string
          example: '9656453215'
          description: Unique id of the service
        safeCustody:
          $ref: '#/components/schemas/UpdateSafeCustodyRef'
    DeleteSafeCustodyRef:
      required:
        - safeCustodyId
      properties:
        safeCustodyId:
          type: string
          example: '123'
          description: unique id created in billing system for the safeCustodyId
    ExtendSafeCustodyRef:
      required:
        - safeCustodyId
        - endDate
      properties:
        safeCustodyId:
          type: string
          example: '123'
          description: unique id created in billing system for the safeCustodyId
        endDate:
          type: string
          format: date-time
          description: new end date for the safe custody
    CancelSafeCustodyRef:
      required:
        - safeCustodyId
      properties:
        safeCustodyId:
          type: string
          example: '123'
          description: unique id created in billing system for the safeCustodyId
    CreateSafeCustodyRef:
      required:
        - startDate
        - endDate
        - suspensionChargeApply
      properties:
        suspensionChargeApply:
          type: string
          example: '1'
          description: >-
            indicates if suspension charges are applicable or not for enabling
            safe custody. possible values - [1 - enable, 0 - disable]
        startDate:
          type: string
          format: date-time
          description: safe custody end date time
        endDate:
          type: string
          format: date-time
          description: safe custody start date time
    UpdateSafeCustodyRef:
      required:
        - safeCustodyId
        - reasonCode
        - suspensionChargeApply
      properties:
        safeCustodyId:
          type: string
          example: '123'
          description: unique id created in billing system for the safeCustodyId
        startDate:
          type: string
          format: date-time
          description: safe custody start date time
        endDate:
          type: string
          format: date-time
          description: safe custody end date time
        suspensionChargeApply:
          type: string
          example: '1'
          description: >-
            indicates if suspension charges are applicable or not for enabling
            safe custody. possible values - [1 - enable, 0 - disable]
        reasonCode:
          type: string
          example: '1'
          description: reason for cancelling safe custody
    StarterPackOrderRef:
      type: object
      required:
        - orderType
        - starterPack
      properties:
        orderType:
          type: string
          example: StarterPackProvisionig
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        starterPack:
          $ref: '#/components/schemas/StarterPackRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    OnboardingOrderRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: Onboarding
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profile:
          $ref: '#/components/schemas/ProfileRef'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        approvalDetails:
          $ref: '#/components/schemas/ApprovalRef'
    CreateProfileAccountRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: CreateProfileAccount
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profile:
          $ref: '#/components/schemas/CreateProfileRef'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        approvalDetails:
          $ref: '#/components/schemas/ApprovalRef'
    AddServiceRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: AddService
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profile:
          $ref: '#/components/schemas/ProfileRefForAddService'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    CreateAccountOrderRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: CreateAccount
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a createAccount Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profile:
          $ref: '#/components/schemas/ProfileRefForCreateAccount'
    CreateProfileOrderRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: CreateProfile
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profile:
          $ref: '#/components/schemas/ProfileRefForCreateNewProfile'
    UpdateStarterPackKYCOrderRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: UpdateStarterPackKYC
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        customerInfo:
          $ref: '#/components/schemas/CustomerInforRefForStarterPack'
    AddServiceToNewAccountRef:
      type: object
      required:
        - orderType
        - profile
      properties:
        orderType:
          type: string
          example: AddServiceToNewAccount
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        profile:
          $ref: '#/components/schemas/ProfileRefForAddServiceToNewAccount'
        payment:
          $ref: '#/components/schemas/UpfrontPaymentRef'
    UpdateProfileAddressOrderRef:
      type: object
      required:
        - orderType
        - address
      properties:
        orderType:
          type: string
          example: UpdateProfileAddress
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        address:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAddressRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    UpdateServiceAddressOrderRef:
      type: object
      required:
        - orderType
        - address
      properties:
        orderType:
          type: string
          example: UpdateServiceAddress
          description: unique identifier to identify the operation
        comment:
          type: string
          example: update address for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        address:
          type: array
          items:
            $ref: '#/components/schemas/UpdateServiceAddressRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    AttachContactOrderRef:
      type: object
      required:
        - orderType
        - contact
      properties:
        orderType:
          type: string
          example: AttachContact
          description: unique identifier to identify the operation
        comment:
          type: string
          example: create contacts for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        contact:
          $ref: '#/components/schemas/AttachContactRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    DetachContactOrderRef:
      type: object
      required:
        - orderType
        - contact
      properties:
        orderType:
          type: string
          example: DetachContact
          description: unique identifier to identify the operation
        comment:
          type: string
          example: update contacts for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        contact:
          $ref: '#/components/schemas/DetachContactWrapperRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    DetachContactWrapperRef:
      type: object
      properties:
        profileId:
          type: string
          example: '50000876'
          description: >-
            billing profile id. mandatory if the contacts are adding/updating on
            the profile level
        accountId:
          type: string
          example: '1000782'
          description: >-
            billing account id. mandatory if the contacts are adding/updating on
            the billing account level
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/DetachContactRef'
    AttachContactRef:
      type: object
      properties:
        profileId:
          type: string
          example: '50000876'
          description: >-
            billing profile id. mandatory if the contacts are adding/updating on
            the profile level
        accountId:
          type: string
          example: '1000782'
          description: >-
            billing account id. mandatory if the contacts are adding/updating on
            the billing account level
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/AccountContactRef'
    TransferLoyaltyPointsOrderRef:
      type: object
      required:
        - orderType
        - loyaltyManagement
      properties:
        orderType:
          type: string
          example: TransferLoyaltyPoints
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        loyaltyManagement:
          $ref: '#/components/schemas/LoyaltyManagementForTransferLoyaltyPointsRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    AddLoyaltyPointsOrderRef:
      type: object
      required:
        - orderType
        - loyaltyManagement
      properties:
        orderType:
          type: string
          example: AddLoyaltyPoints
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        loyaltyManagement:
          $ref: '#/components/schemas/LoyaltyManagementRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    DeductLoyaltyPointsOrderRef:
      type: object
      required:
        - orderType
        - loyaltyManagement
      properties:
        orderType:
          type: string
          example: DeductLoyaltyPoints
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        loyaltyManagement:
          $ref: '#/components/schemas/LoyaltyManagementRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    UpdateAccountAddressOrderRef:
      type: object
      required:
        - orderType
        - address
      properties:
        orderType:
          type: string
          example: UpdateAccountAddress
          description: unique identifier to identify the operation
        comment:
          type: string
          example: update account address for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        address:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAddressRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    BillCycleChangeOrderRef:
      type: object
      required:
        - orderType
        - accountManagement
      properties:
        orderType:
          type: string
          example: ChangeBillCycle
          description: unique identifier to identify the operation
        comment:
          type: string
          example: change bill cycle for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        accountManagement:
          $ref: '#/components/schemas/BillCycleChangeRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    CancelBillCycleChangeOrderRef:
      type: object
      required:
        - orderType
        - accountManagement
      properties:
        orderType:
          type: string
          example: CancelBillCycleChange
          description: unique identifier to identify the operation
        comment:
          type: string
          example: cancels the bill cycle change request for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        accountManagement:
          $ref: '#/components/schemas/CancelBillCycleChangeRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    ChangeRiskCategoryOrderRef:
      type: object
      required:
        - orderType
        - accountManagement
      properties:
        orderType:
          type: string
          example: ChangeRiskCategory
          description: unique identifier to identify the operation
        comment:
          type: string
          example: change risk category for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        accountManagement:
          $ref: '#/components/schemas/ChangeRiskCategoryRef'
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
    serviceGroupsRef:
      required:
        - services
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRef'
    RelatedChannelRef:
      required:
        - name
      properties:
        id:
          type: string
          example: '1'
          description: ''
        role:
          type: string
          example: Used channel for order capture
          description: ''
        name:
          type: string
          example: CRM
          description: ''
    RelatedPartyRef:
      type: object
      required:
        - id
        - role
        - name
      properties:
        id:
          type: string
          example: 456-dd-df45
          description: Unique identifier of a related entity.
        name:
          type: string
          example: Joe Doe
          description: Name of the related entity.
        role:
          type: string
          example: Seller
          enum:
            - Customer
            - Seller
          description: Role played by the related party
    RelatedPartyRefForProfile:
      type: object
      required:
        - role
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Unique identifier of a related entity. mandatory when attaching a
            contact already present in the system
        name:
          type: string
          example: Joe Doe
          description: Name of the guardian
        role:
          type: string
          example: G
          enum:
            - G
            - parentProfile
          description: Role played by the related party
        emailAddress:
          type: string
          example: joedoe@gmail.com
          description: contact email id of the guradian
        phoneNumber:
          type: string
          example: '9876543212'
          description: contact number for the guardian
        alternatePhoneNumber:
          type: string
          example: '98765409875'
          description: alternate contact number for the guardian
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        '@type':
          type: string
        '@referredType':
          type: string
    BillCycleChangeRef:
      type: object
      required:
        - accountId
        - billCycleDay
        - newBillCycleId
      properties:
        accountId:
          type: string
          example: '343435355'
          description: billing account id
        oldBillCycleId:
          type: string
          example: '1'
          description: current bill cycle id
        newBillCycleId:
          type: string
          example: '2'
          description: new bill cycle id
        billCycleDay:
          type: string
          example: BC-1
          description: new bill cycle day
    CancelBillCycleChangeRef:
      type: object
      required:
        - accountId
        - billCycleChangeSeqId
      properties:
        accountId:
          type: string
          example: '343435355'
          description: billing account id
        billCycleChangeSeqId:
          type: string
          example: '1'
          description: >-
            unique id created in billing system for the bill cycle change
            request
    ChangeRiskCategoryRef:
      type: object
      required:
        - accountId
        - newRiskCategory
        - dunningSchedule
      properties:
        accountId:
          type: string
          example: '343435355'
          description: billing account id
        oldRiskCategory:
          type: string
          example: '1'
          description: old risk category
        dunningSchedule:
          type: string
          example: '40'
          description: dunning schedule
        newRiskCategory:
          type: string
          example: '2'
          description: new risk category
        comment:
          type: string
          example: risk category change
          description: comment if any
    CustomerInforRefForStarterPack:
      type: object
      required:
        - serviceId
        - givenName
        - nationality
        - title
        - individualIdentification
        - contactMedium
      properties:
        serviceId:
          type: string
          description: service id/msisdn
          example: '9765654321'
        profileId:
          type: string
          description: >-
            Billing Profile id.Mandetory when adding the starterpack to existing
            Billing profile
          example: '50067'
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        middleName:
          type: string
          example: string
          description: customer middle name
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '0'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permenantAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
        relatedParty:
          $ref: '#/components/schemas/RelatedPartyRefForProfile'
    ProfileRefForCreateNewProfile:
      type: object
      required:
        - birthDate
        - familyName
        - givenName
        - nationality
        - title
        - individualIdentification
        - contactMedium
      properties:
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        gender:
          type: string
          example: '1'
          description: gender. 1-Male, 2-Female, 3-Others
          enum:
            - '1'
            - '2'
            - '3'
        middleName:
          type: string
          example: string
          description: customer middle name
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '1'
            - name: annualTurnover
              valueType: string
              value: '10000'
            - name: businessDescription
              valueType: string
              value: test
            - name: noOfEmployees
              valueType: string
              value: '4'
            - name: noOfVoiceLines
              valueType: string
              value: '5'
            - name: industry
              valueType: string
              value: '1'
            - name: sector
              valueType: string
              value: Sector 1
            - name: majorSICCode
              valueType: string
              value: '1'
            - name: registrationNumber
              valueType: string
              value: '879797'
            - name: vatNumber
              valueType: string
              value: '87687686'
            - name: tinNumber
              valueType: string
              value: '2312312'
            - name: safaricomPartner
              valueType: string
              value: 'true'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permanentAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: socialMediaAddress
                socialMediaAddress: instagram
              mediumType: socialMediaAddress
            - characteristic:
                contactType: companyContactNumber
                companyContactNumber: '9012345678'
              mediumType: telephoneNumber
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRefForProfile'
          example:
            - id: '1001'
              name: Joe Doe
              role: parentProfile
            - role: G
              name: Mathew John
              phoneNumber: '21321312414'
              emailAddress: mathew@gmail.com
              alternatePhoneNumber: '9654321234'
    ProfileRef:
      type: object
      required:
        - birthDate
        - familyName
        - givenName
        - nationality
        - title
        - entityId
        - individualIdentification
        - contactMedium
        - account
      properties:
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        middleName:
          type: string
          example: string
          description: customer middle name
        gender:
          type: string
          example: '1'
          description: gender. 1-Male, 2-Female, 3-Others
          enum:
            - '1'
            - '2'
            - '3'
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        entityId:
          type: string
          example: '200'
          description: entity id
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: accountType
              valueType: string
              value: '1'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '0'
            - name: annualTurnover
              valueType: string
              value: '10000'
            - name: businessDescription
              valueType: string
              value: test
            - name: noOfEmployees
              valueType: string
              value: '4'
            - name: noOfVoiceLines
              valueType: string
              value: '5'
            - name: industry
              valueType: string
              value: '1'
            - name: sector
              valueType: string
              value: Sector 1
            - name: majorSICCode
              valueType: string
              value: '1'
            - name: registrationNumber
              valueType: string
              value: '879797'
            - name: vatNumber
              valueType: string
              value: '87687686'
            - name: tinNumber
              valueType: string
              value: '2312312'
            - name: safaricomPartner
              valueType: string
              value: 'true'
            - name: eCode
              valueType: string
              value: E001
            - name: statementEnabled
              valueType: string
              value: 'true'
            - name: corporateName
              valueType: string
              value: ''
            - name: corporateParentGroup
              valueType: string
              value: ''
            - name: corporateClass
              valueType: string
              value: ''
            - name: costCenter
              valueType: string
              value: 'true'
            - name: panNumber
              valueType: string
              value: ''
            - name: industryType
              valueType: string
              value: ''
            - name: noOfEmp
              valueType: string
              value: '10'
            - name: annualTurnOver
              valueType: string
              value: ''
            - name: billingAvg
              valueType: string
              value: '100'
            - name: custUniqueCode
              valueType: string
              value: ''
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permanentAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: socialMediaAddress
                socialMediaAddress: instagram
              mediumType: socialMediaAddress
            - characteristic:
                contactType: companyContactNumber
                companyContactNumber: '9012345678'
              mediumType: telephoneNumber
        relatedParty:
          $ref: '#/components/schemas/RelatedPartyRefForProfile'
        account:
          $ref: '#/components/schemas/BillingAccountRef'
    CreateProfileRef:
      type: object
      required:
        - birthDate
        - familyName
        - givenName
        - nationality
        - title
        - entityId
        - individualIdentification
        - contactMedium
        - account
      properties:
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        middleName:
          type: string
          example: string
          description: customer middle name
        gender:
          type: string
          example: '1'
          description: gender. 1-Male, 2-Female, 3-Others
          enum:
            - '1'
            - '2'
            - '3'
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        entityId:
          type: string
          example: '200'
          description: entity id
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: accountType
              valueType: string
              value: '1'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '0'
            - name: annualTurnover
              valueType: string
              value: '10000'
            - name: businessDescription
              valueType: string
              value: test
            - name: noOfEmployees
              valueType: string
              value: '4'
            - name: noOfVoiceLines
              valueType: string
              value: '5'
            - name: industry
              valueType: string
              value: '1'
            - name: sector
              valueType: string
              value: Sector 1
            - name: majorSICCode
              valueType: string
              value: '1'
            - name: registrationNumber
              valueType: string
              value: '879797'
            - name: vatNumber
              valueType: string
              value: '87687686'
            - name: tinNumber
              valueType: string
              value: '2312312'
            - name: safaricomPartner
              valueType: string
              value: 'true'
            - name: eCode
              valueType: string
              value: E001
            - name: statementEnabled
              valueType: string
              value: 'true'
            - name: corporateName
              valueType: string
              value: ''
            - name: corporateParentGroup
              valueType: string
              value: ''
            - name: corporateClass
              valueType: string
              value: ''
            - name: costCenter
              valueType: string
              value: 'true'
            - name: panNumber
              valueType: string
              value: ''
            - name: industryType
              valueType: string
              value: ''
            - name: noOfEmp
              valueType: string
              value: '10'
            - name: annualTurnOver
              valueType: string
              value: ''
            - name: billingAvg
              valueType: string
              value: '100'
            - name: custUniqueCode
              valueType: string
              value: ''
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permanentAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: socialMediaAddress
                socialMediaAddress: instagram
              mediumType: socialMediaAddress
            - characteristic:
                contactType: companyContactNumber
                companyContactNumber: '9012345678'
              mediumType: telephoneNumber
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRefForProfile'
        account:
          $ref: '#/components/schemas/CreateBillingAccountRef'
    CreateSubProfileRef:
      type: object
      required:
        - birthDate
        - familyName
        - givenName
        - nationality
        - title
        - entityId
        - individualIdentification
        - contactMedium
        - account
      properties:
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        middleName:
          type: string
          example: string
          description: customer middle name
        gender:
          type: string
          example: '1'
          description: gender. 1-Male, 2-Female, 3-Others
          enum:
            - '1'
            - '2'
            - '3'
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        entityId:
          type: string
          example: '200'
          description: entity id
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '0'
            - name: annualTurnover
              valueType: string
              value: '10000'
            - name: businessDescription
              valueType: string
              value: test
            - name: noOfEmployees
              valueType: string
              value: '4'
            - name: noOfVoiceLines
              valueType: string
              value: '5'
            - name: industry
              valueType: string
              value: '1'
            - name: sector
              valueType: string
              value: Sector 1
            - name: majorSICCode
              valueType: string
              value: '1'
            - name: registrationNumber
              valueType: string
              value: '879797'
            - name: vatNumber
              valueType: string
              value: '87687686'
            - name: tinNumber
              valueType: string
              value: '2312312'
            - name: safaricomPartner
              valueType: string
              value: 'true'
            - name: statementEnabled
              valueType: string
              value: 'true'
            - name: corporateName
              valueType: string
              value: ''
            - name: corporateParentGroup
              valueType: string
              value: ''
            - name: corporateClass
              valueType: string
              value: ''
            - name: costCenter
              valueType: string
              value: 'true'
            - name: panNumber
              valueType: string
              value: ''
            - name: industryType
              valueType: string
              value: ''
            - name: noOfEmp
              valueType: string
              value: '10'
            - name: annualTurnOver
              valueType: string
              value: ''
            - name: billingAvg
              valueType: string
              value: '100'
            - name: custUniqueCode
              valueType: string
              value: ''
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permanentAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: socialMediaAddress
                socialMediaAddress: instagram
              mediumType: socialMediaAddress
            - characteristic:
                contactType: companyContactNumber
                companyContactNumber: '9012345678'
              mediumType: telephoneNumber
        relatedParty:
          $ref: '#/components/schemas/RelatedPartyRefForProfile'
        account:
          $ref: '#/components/schemas/CreateBillingAccountRef'
    ProfileRefForConMig:
      type: object
      required:
        - profileId
        - account
      properties:
        profileId:
          type: string
          example: '113232444'
          description: customer profile id.
        account:
          $ref: '#/components/schemas/BillingAccountRefForTOS'
    ProfileRefForTOS:
      type: object
      required:
        - birthDate
        - familyName
        - givenName
        - middleName
        - nationality
        - title
        - individualIdentification
        - contactMedium
        - account
      properties:
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        gender:
          type: string
          example: '1'
          description: gender. 1-Male, 2-Female, 3-Others
          enum:
            - '1'
            - '2'
            - '3'
        middleName:
          type: string
          example: string
          description: customer middle name
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '1'
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permanentAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
        account:
          $ref: '#/components/schemas/BillingAccountRefForTOS'
    ProfileRefForAddService:
      type: object
      required:
        - profileId
        - account
      properties:
        profileId:
          type: string
          example: '5600876'
          description: unique customer id in bss
        account:
          $ref: '#/components/schemas/BillingAccountRefForAddService'
    ProfileRefForAddServiceToNewAccount:
      type: object
      required:
        - profileId
        - account
      properties:
        profileId:
          type: string
          example: '5600876'
          description: unique customer id in bss
        account:
          $ref: '#/components/schemas/BillingAccountRef'
    ProfileRefForCreateAccount:
      type: object
      required:
        - profileId
        - account
      properties:
        profileId:
          type: string
          example: '5600876'
          description: unique customer id in bss
        account:
          $ref: '#/components/schemas/BillingAccountRefForCreateNewAccount'
    ProfileRefTOA:
      type: object
      required:
        - birthDate
        - familyName
        - givenName
        - middleName
        - nationality
        - title
        - individualIdentification
        - contactMedium
      properties:
        birthDate:
          type: string
          format: dd-MM-yyyy
          example: 10-11-1990
          description: ''
        gender:
          type: string
          example: '1'
          description: gender. 1-Male, 2-Female, 3-Others
          enum:
            - '1'
            - '2'
            - '3'
        familyName:
          type: string
          example: string
          description: customer last name
        givenName:
          type: string
          example: string
          description: customer first name
        middleName:
          type: string
          example: string
          description: customer middle name
        nationality:
          type: string
          example: '1'
          description: customer nationality. 1-African,2-Chinese,3-British,4-Indian
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
        title:
          type: string
          example: '1'
          description: salutation. 1-Mr,2-Mrs,3-Ms
          enum:
            - '1'
            - '2'
            - '3'
        partyCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: profileType
              valueType: string
              value: '0'
            - name: subscriberCategory
              valueType: string
              value: '2'
            - name: subscriberSubCategory
              valueType: string
              value: '7'
            - name: biometricId
              valueType: string
              value: '32132434324'
            - name: minorFlag
              valueType: string
              value: '0'
        languageAbility:
          type: array
          items:
            $ref: '#/components/schemas/LanguageAbilityRef'
          example:
            - languageCode: '1'
        individualIdentification:
          type: array
          items:
            $ref: '#/components/schemas/IndividualIdentificationRef'
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - characteristic:
                contactType: smsNumber
                phoneNumber: '1234567890'
              mediumType: telephoneNumber
            - characteristic:
                contactType: faxNumber
                faxNumber: '9012345678'
              mediumType: telephoneNumber
            - characteristic:
                contactType: emailAddress
                emailAddress: sai@123.com
              mediumType: emailAddress
            - characteristic:
                contactType: permanentAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
            - characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
              mediumType: address
    CharacteristicRef:
      type: object
      required:
        - name
        - valueType
        - value
      properties:
        name:
          type: string
          example: expiryDate
          description: ''
        valueType:
          type: string
          example: string
          description: ''
        value:
          type: string
          example: '2025-02-10T12:00:00.000Z'
          description: ''
    LanguageAbilityRef:
      type: object
      required:
        - languageCode
      properties:
        languageCode:
          type: string
          example: string
          description: ''
        languageName:
          type: string
          example: string
          description: ''
    AttachmentRef:
      type: object
      required:
        - kycReferenceId
        - description
        - name
      properties:
        content:
          type: string
          example: string
          description: ''
        description:
          type: string
          example: string
          description: ''
        id:
          type: string
          example: string
          description: ''
        mimeType:
          type: string
          example: string
          description: ''
        name:
          type: string
          example: string
          description: ''
        url:
          type: string
          example: string
          description: ''
        kycReferenceId:
          type: string
          description: kyc reference id
    ValidForRef:
      type: object
      required:
        - endDateTime
        - startDateTime
      properties:
        endDateTime:
          type: string
          format: date-time
          description: End of the time period, using IETC-RFC-3339 format
        startDateTime:
          type: string
          format: date-time
          description: >-
            Start of the time period, using IETC-RFC-3339 format. If you define
            a start, you must also define an end
    IndividualIdentificationRef:
      type: object
      required:
        - identificationId
        - identificationType
        - issuingAuthority
        - issuingDate
        - validFor
      properties:
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentRef'
        id:
          type: string
          example: string
          description: unique id of the object. mandatory while updating this entity
        identificationId:
          type: string
          example: string
          description: identification number
        identificationType:
          type: string
          example: '102'
          description: >-
            type of identification. 101 - Residence Identification Card,102 -
            Driver license,103 - Ethiopian Origin Identification Card,104 -
            Diplomatic Identity Card,105 - Residence Permit,106 - Birth
            Certificate,107 - Passport
          enum:
            - '101'
            - '102'
            - '103'
            - '104'
            - '105'
            - '106'
            - '107'
        issuingAuthority:
          type: string
          example: string
          description: issuer id
        issuingDate:
          type: string
          format: date
          description: issued date
        modifyUser:
          type: string
          description: modify user. mandatory when updating this entity
        modifyDate:
          type: string
          format: date-time
          description: modify date. mandatory when updating this entity
        validFor:
          $ref: '#/components/schemas/ValidForRef'
    IdentificationRef:
      type: object
      required:
        - idExpiryDate
        - identificationNumber
        - identificationType
        - subscriberId
        - subscriberLevel
      properties:
        idExpiryDate:
          type: string
          format: date-time
          description: expiry date
        idIssueDate:
          type: string
          format: date-time
          description: issue date
        identificationId:
          type: string
          example: string
          description: >-
            id for the identification object. mandatory when updating an
            identification object
        identificationNumber:
          type: string
          example: string
          description: id number
        identificationType:
          type: string
          example: '102'
          description: >-
            type of identification. 101 - Residence Identification Card,102 -
            Driver license,103 - Ethiopian Origin Identification Card,104 -
            Diplomatic Identity Card,105 - Residence Permit,106 - Birth
            Certificate,107 - passport
          enum:
            - '101'
            - '102'
            - '103'
            - '104'
            - '105'
            - '106'
            - '107'
        subscriberId:
          type: string
          description: subscriber id to which this id to be attached
        subscriberLevel:
          type: string
          description: subscriber level
        issuerId:
          type: string
          description: id of the issuer
        documentDetails:
          type: array
          items:
            $ref: '#/components/schemas/FileDetailsRef'
    DeleteIdentificationRef:
      type: object
      required:
        - subscriberId
        - subscriberLevel
      properties:
        identificationId:
          type: string
          example: '123'
          description: >-
            id of the identification entity which needs to be removed.mandatory
            if identification type and identification number are not passing in
            the request
        identificationType:
          type: string
          example: '102'
          description: >-
            type of identification. 101 - Residence Identification Card,102 -
            Driver license,103 - Ethiopian Origin Identification Card,104 -
            Diplomatic Identity Card,105 - Residence Permit,106 - Birth
            Certificate,107 - passport. mandatory if identification id is not
            passing in the request
          enum:
            - '101'
            - '102'
            - '103'
            - '104'
            - '105'
            - '106'
            - '107'
        identificationNumber:
          type: string
          example: string
          description: >-
            id number. mandatory if identification id is not passing in the
            request
        subscriberId:
          type: string
          example: '677656'
          description: subscriber id to which this id is attached
        subscriberLevel:
          type: string
          example: '0'
          description: subscriber level 0-profile
    DocumentDetailsRef:
      type: object
      required:
        - documentName
        - documentType
        - subscriberId
        - subscriberLevel
        - isIdDocument
      properties:
        kycReferenceId:
          type: string
          example: '876543233'
          description: >-
            kyc reference id. mandatory if the request is initiated from eKYC
            channel
        documentPath:
          type: string
          example: /home/saturn/dl_john.pdf
          description: absolute file path
        documentName:
          type: string
          example: DL document
          description: document name
        documentDescription:
          type: string
          example: DL document
          description: document description
        documentType:
          type: string
          example: '200'
          description: >-
            type of document. 200 - Financial statements, 201 - Bank statments,
            202 - other documents
          enum:
            - '200'
            - '201'
            - '202'
        ftpId:
          type: string
          example: '1'
          description: ftp id
        subscriberId:
          type: string
          example: '566098'
          description: subscriber id
        subscriberLevel:
          type: string
          example: '0'
          description: >-
            subscriber level. allowed values - [0 - profile, 1 - account, 2 -
            service]
        identificationNumber:
          type: string
          example: '0'
          description: >-
            unique identification number.mandatory when 'isIdDocument' tag is
            true
        identificationType:
          type: string
          example: '104'
          description: identification type. mandatory when 'isIdDocument' tag is true
        identificationId:
          type: string
          example: '1'
          description: sequence id of the identification record stored in bss
        isIdDocument:
          type: string
          description: specifies whether this document is an identification document or not
          example: 'true'
          enum:
            - 'true'
            - 'false'
    DocumentDetailsRefForUpdate:
      type: object
      required:
        - kycReferenceId
        - subscriberId
        - subscriberLevel
        - isIdDocument
      properties:
        kycReferenceId:
          type: string
          description: kyc reference id
          example: '1323213123'
        modifiedUser:
          type: string
          description: modified user
          example: admin
        subscriberId:
          type: string
          description: subscriber id
          example: '213213123'
        isIdDocument:
          type: string
          description: specifies whether this document is an identification document or not
          example: 'true'
          enum:
            - 'true'
            - 'false'
        subscriberLevel:
          type: string
          description: >-
            subscriber level. allowed values - [0 - profile, 1 - account, 2 -
            service]
          example: '0'
    FileDetailsRef:
      type: object
      required:
        - kycReferenceId
        - documentName
        - documentPath
      properties:
        kycReferenceId:
          type: string
          description: kyc reference id
        documentPath:
          type: string
          description: absolute file path
        documentName:
          type: string
          description: document name
        documentDescription:
          type: string
          description: document description
    DeleteDocumentRef:
      type: object
      required:
        - kycReferenceId
        - subscriberId
        - subscriberLevel
        - isIdDocument
      properties:
        kycReferenceId:
          type: string
          description: kyc reference id
        subscriberId:
          type: string
          description: subscriber id
        subscriberLevel:
          type: string
          description: >-
            subscriber level. allowed values - [0 - profile, 1 - account, 2 -
            service]
        documentId:
          type: string
          description: id of the document entity which needs to be deleted
        isIdDocument:
          type: string
          description: specifies whether this document is an identification document or not
          example: 'true'
          enum:
            - 'true'
            - 'false'
    PaymentPreferenceRef:
      type: object
      required:
        - subscriberId
        - subscriberLevel
        - preferences
      properties:
        subscriberId:
          type: string
          description: subscriber id to which this id to be attached
        subscriberLevel:
          type: string
          description: subscriber level
        preferences:
          type: array
          items:
            $ref: '#/components/schemas/PaymentPreferencesRef'
    PaymentPreferencesRef:
      type: object
      required:
        - paymentPreferenceId
        - paymentPreferenceName
      properties:
        paymentPreferenceId:
          type: string
          description: payment preference id. 1 - Cash, 2 - Bank
          enum:
            - '1'
            - '2'
        paymentPreferenceName:
          type: string
          description: payment preference name
    ContactMediumRef:
      type: object
      required:
        - mediumType
        - characteristic
      properties:
        mediumType:
          type: string
          example: address
          description: type of contact medium
          enum:
            - telephoneNumber
            - emailAddress
            - address
            - socialMediaAddress
        characteristic:
          $ref: '#/components/schemas/MediumCharacteristicRef'
    MediumCharacteristicRef:
      type: object
      required:
        - contactType
        - emailAddress
        - faxNumber
        - phoneNumber
        - socialMediaAddress
        - companyContactNumber
        - addrLine1
        - addrLine2
        - addrLine3
        - addrLine4
        - addrLine5
        - addrLine6
        - addrLine7
        - addrLine8
        - addrLine9
        - addrLine10
        - addrLine11
      properties:
        contactType:
          type: string
          example: permanentAddress
          description: this parameter specifies the type of contact information
          enum:
            - faxNumber
            - emailAddress
            - permanentAddress
            - residentialAddress
            - socialMediaAddress
            - companyContactNumber
            - smsNumber
        emailAddress:
          type: string
          example: someone@gamail.com
          description: >-
            email address for communication. this is mandatory when the
            contactType having value emailAddress
        faxNumber:
          type: string
          example: '+41432169'
          description: >-
            fax number for communication. this is mandatory when the contactType
            having value faxNumber
        phoneNumber:
          type: string
          example: string
          description: >-
            phone number for communication. this is mandatory when the
            contactType having value smsNumber
        socialMediaAddress:
          type: string
          example: string
          description: >-
            phone number for communication. this is mandatory when the
            contactType having value socialMediaAddress
        companyContactNumber:
          type: string
          example: '9012345678'
          description: >-
            phone number for communication. this is mandatory when the
            contactType having value companyContactNumber
        addrLine1:
          type: string
          example: house no 268
          description: >-
            street line one. this is mandatory when the contactType having value
            permanentAddress or residentialAddress
        addrLine2:
          type: string
          example: 1000 ADDIS ABABA
          description: >-
            street line two. this is mandatory when the contactType having value
            permanentAddress or residentialAddress
        addrLine3:
          type: string
          example: Kebele 1, 1302/29
          description: >-
            this parameter can be used to send the ward(kabele) name. this is
            mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine4:
          type: string
          example: Addis Ababa
          description: >-
            this parameter can be used to send the city name. this is mandatory
            when the contactType having value permanentAddress or
            residentialAddress
        addrLine5:
          type: string
          example: Addis Ababa
          description: >-
            this parameter can be used to send the region name. this is
            mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine6:
          type: string
          example: Shoa
          description: >-
            this parameter can be used to send the state or province name. this
            is mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine7:
          type: string
          example: Achefer
          description: >-
            this parameter can be used to send the district (woreda) name. this
            is mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine8:
          type: string
          example: '1000'
          description: >-
            this parameter can be used to send the postal code. this is
            mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine9:
          type: string
          example: P.O. Box 1519
          description: >-
            this parameter can be used to send the PO Box number. this is
            mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine10:
          type: string
          example: '8.9806'
          description: >-
            this parameter can be used to send the latitude address. this is
            mandatory when the contactType having value permanentAddress or
            residentialAddress
        addrLine11:
          type: string
          example: '38.7578'
          description: >-
            this parameter can be used to send the longitude address. this is
            mandatory when the contactType having value permanentAddress or
            residentialAddress
    BillingAccountRefForCreateNewAccount:
      required:
        - billingRegion
        - chargingPattern
        - name
        - preferredCurrency
      properties:
        billcycleId:
          type: string
          example: 1
          description: Bill cycle attached to the subscriber account
        billingOnHold:
          type: integer
          example: 0
          description: 1 - enable billing on hold, 0 - disable billing on hold
          enum:
            - 0
            - 1
        keyAccountManager:
          type: string
          example: ''
          description: person who manages the account
        chargingPattern:
          type: integer
          example: 1
          enum:
            - 1
            - 2
          description: defines the charging pattern for the account. 1-Postpaid, 2-Prepaid
        dispatchMode:
          type: integer
          example: 0
          description: mode of dispatching the invoice. 0-NA , 1-Email , 2-Post
          enum:
            - 0
            - 1
            - 2
        dunningExclusion:
          type: integer
          example: 0
          description: specifies whether to exclude from dunning or not.
          enum:
            - 0
            - 1
        emailNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        smsNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        taxApplicable:
          type: integer
          example: 0
          description: >-
            specifies if tax applicable or not. 0 - not applicable, 1 -
            applicable
          enum:
            - 0
            - 1
        entityId:
          type: string
          example: 200
          description: mvno id
        itemizedbillRequired:
          type: integer
          example: 0
          description: >-
            If itemized bill is required for this account or not.1- required, 0-
            not required
          enum:
            - 0
            - 1
        languageId:
          type: string
          example: '1'
          description: >-
            language id, 1 - English,2 - Amharic,3 - Somali,4 - Tigrinya,5 -
            Oromo
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        name:
          type: string
          example: test account
          description: account name
        excelFileFlag:
          type: integer
          example: 0
          description: excel invoice is required or not. 0 - not required, 1 - required
          enum:
            - 0
            - 1
        autoDebit:
          type: integer
          description: >-
            auto debit enabled or not. 1 - enable auto debit. 0 - disable auto
            debit
          example: 1
          enum:
            - 0
            - 1
        bankAccountNo:
          type: string
          description: >-
            bank account number from which the money to be debited in case the
            autdebit is enabled
          example: '113124234234'
        bankID:
          type: string
          description: bank id
          example: '1221'
        bankAccountName:
          type: string
          description: account name
          example: abc
        bankAccountType:
          type: string
          description: Bank Account Type (Savings, Current etc)
          example: Current
        branchName:
          type: string
          description: bank branch name
          example: south branch
        remarks:
          type: string
          example: string
          description: remarks/comments to add if any
        riskcategoryId:
          type: number
          example: '0'
          description: ''
        status:
          type: number
          example: '0'
          description: Status of the account.
        taxCode:
          type: string
          example: 0
          description: tax code
        taxExemptionCode:
          type: string
          example: 0
          description: tax exemption code
        title:
          type: string
          example: string
          description: account title
        unicodeName:
          type: string
          example: string
          description: account name in other language
        majorSicCode:
          type: string
          example: '1'
          description: majorSicCode
        sicCode:
          type: string
          example: '1'
          description: sicCode
        creditLimit:
          type: string
          example: '10'
          description: credit limit
        contactEmailId:
          type: string
          example: someone@examplemail.com
          description: contact email id
        smsNumbers:
          type: string
          example: '34325434545'
          description: sms numbers
        billingRegion:
          type: string
          description: billingRegion
        preferredCurrency:
          type: string
          description: preferredCurrency
        dunningId:
          type: string
          description: dunning schedule
          example: '0'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/AccountContactRef'
          description: contact attachments
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - mediumType: address
              characteristic:
                contactType: billingAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
    BillingAccountRef:
      required:
        - chargingPattern
        - name
        - preferredCurrency
        - serviceGroups
      properties:
        billcycleId:
          type: string
          example: 1
          description: Bill cycle attached to the subscriber account
        billingOnHold:
          type: integer
          example: 0
          description: 1 - enable billing on hold, 0 - disable billing on hold
          enum:
            - 0
            - 1
        keyAccountManager:
          type: string
          example: ''
          description: person who manages the account
        chargingPattern:
          type: integer
          example: 1
          enum:
            - 1
            - 2
          description: defines the charging pattern for the account. 1-postpaid, 2-prepaid
        autoDebit:
          type: integer
          description: >-
            auto debit enabled or not. 1 - enable auto debit. 0 - disable auto
            debit
          example: 1
          enum:
            - 0
            - 1
        bankAccountNo:
          type: string
          description: >-
            bank account number from which the money to be debited in case the
            autdebit is enabled
          example: '113124234234'
        bankID:
          type: string
          description: bank id
          example: '1221'
        bankAccountName:
          type: string
          description: account name
          example: abc
        bankAccountType:
          type: string
          description: Bank Account Type (Savings, Current etc)
          example: Current
        branchName:
          type: string
          description: bank branch name
          example: south branch
        dispatchMode:
          type: integer
          example: 0
          description: mode of dispatching the invoice. 0-NA , 1-Email , 2-Post
          enum:
            - 0
            - 1
            - 2
        dunningExclusion:
          type: integer
          example: 0
          description: specifies whether to exclude from dunning or not.
          enum:
            - 0
            - 1
        emailNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        smsNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        taxApplicable:
          type: integer
          example: 0
          description: >-
            specifies if tax applicable or not. 0 - not applicable, 1 -
            applicable
          enum:
            - 0
            - 1
        entityId:
          type: string
          example: 200
          description: mvno id
        itemizedbillRequired:
          type: integer
          example: 0
          description: >-
            If itemized bill is required for this account or not.1- required, 0-
            not required
          enum:
            - 0
            - 1
        excelFileFlag:
          type: integer
          example: 0
          description: excel invoice is required or not. 0 - not required, 1 - required
          enum:
            - 0
            - 1
        languageId:
          type: string
          example: '1'
          description: >-
            language id, 1 - English,2 - Amharic,3 - Somali,4 - Tigrinya,5 -
            Oromo
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        name:
          type: string
          example: test account
          description: account name
        remarks:
          type: string
          example: string
          description: remarks/comments to add if any
        riskcategoryId:
          type: number
          example: '0'
          description: ''
        status:
          type: number
          example: '0'
          description: Status of the account.
        taxCode:
          type: string
          example: 0
          description: tax code
        taxExemptionCode:
          type: string
          example: 0
          description: tax exemption code
        title:
          type: string
          example: string
          description: account title
        unicodeName:
          type: string
          example: string
          description: account name in other language
        majorSicCode:
          type: string
          example: '1'
          description: majorSicCode
        sicCode:
          type: string
          example: '1'
          description: sicCode
        creditLimit:
          type: string
          example: '10'
          description: credit limit
        contactEmailId:
          type: string
          example: someone@examplemail.com
          description: contact email id
        smsNumbers:
          type: string
          example: '34325434545'
          description: sms numbers
        billingRegion:
          type: string
          description: billingRegion
        preferredCurrency:
          type: string
          description: preferredCurrency
        dunningId:
          type: string
          description: dunning schedule
          example: '0'
        prgCode:
          type: string
          description: prg code
          example: P100
        lac:
          type: string
          description: account number
          example: '2345678'
        gstRegistrationType:
          type: string
          description: gst registration type
          example: ''
        gstNumber:
          type: string
          description: gst number
          example: ''
        gstCustomerType:
          type: string
          description: gst customer type
          example: ''
        writeOffFlag:
          type: string
          description: write off flag
          example: ''
        billFromStateCode:
          type: string
          description: bill from state code
          example: KA
        billToStateCode:
          type: string
          description: bill from state code
          example: AD
        pos:
          type: string
          description: point of sale
          example: '100'
        circleId:
          type: string
          description: circle id
          example: '100'
        gstState:
          type: string
          description: gst state
          example: ''
        deliveryMode:
          type: string
          description: delivery mode
          example: ''
        creditLimitType:
          type: string
          description: credit limit type
          example: ''
        creditSegment:
          type: string
          description: credit segment
          example: ''
        lacType:
          type: string
          description: lac type
          example: ''
        isSharing:
          type: string
          description: isSharing
          example: 'true'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/AccountContactRef'
          description: contact attachments
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - mediumType: address
              characteristic:
                contactType: billingAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
        serviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/serviceGroupsRef'
    CreateBillingAccountRef:
      required:
        - chargingPattern
        - name
        - preferredCurrency
        - billCycleDay
      properties:
        billcycleId:
          type: string
          example: 1
          description: Bill cycle id attached to the subscriber account
        billCycleDay:
          type: string
          example: '01'
          description: Bill cycle day attached to the subscriber account
        billingOnHold:
          type: integer
          example: 0
          description: 1 - enable billing on hold, 0 - disable billing on hold
          enum:
            - 0
            - 1
        keyAccountManager:
          type: string
          example: ''
          description: person who manages the account
        chargingPattern:
          type: integer
          example: 1
          enum:
            - 1
            - 2
          description: defines the charging pattern for the account. 1-postpaid, 2-prepaid
        autoDebit:
          type: integer
          description: >-
            auto debit enabled or not. 1 - enable auto debit. 0 - disable auto
            debit
          example: 1
          enum:
            - 0
            - 1
        bankAccountNo:
          type: string
          description: >-
            bank account number from which the money to be debited in case the
            autdebit is enabled
          example: '113124234234'
        bankID:
          type: string
          description: bank id
          example: '1221'
        bankAccountName:
          type: string
          description: account name
          example: abc
        bankAccountType:
          type: string
          description: Bank Account Type (Savings, Current etc)
          example: Current
        branchName:
          type: string
          description: bank branch name
          example: south branch
        dispatchMode:
          type: integer
          example: 0
          description: mode of dispatching the invoice. 0-NA , 1-Email , 2-Post
          enum:
            - 0
            - 1
            - 2
        dunningExclusion:
          type: integer
          example: 0
          description: specifies whether to exclude from dunning or not.
          enum:
            - 0
            - 1
        emailNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        smsNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        taxApplicable:
          type: integer
          example: 0
          description: >-
            specifies if tax applicable or not. 0 - not applicable, 1 -
            applicable
          enum:
            - 0
            - 1
        entityId:
          type: string
          example: 200
          description: mvno id
        itemizedbillRequired:
          type: integer
          example: 0
          description: >-
            If itemized bill is required for this account or not.1- required, 0-
            not required
          enum:
            - 0
            - 1
        excelFileFlag:
          type: integer
          example: 0
          description: excel invoice is required or not. 0 - not required, 1 - required
          enum:
            - 0
            - 1
        languageId:
          type: string
          example: '1'
          description: >-
            language id, 1 - English,2 - Amharic,3 - Somali,4 - Tigrinya,5 -
            Oromo
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        name:
          type: string
          example: test account
          description: account name
        remarks:
          type: string
          example: string
          description: remarks/comments to add if any
        riskcategoryId:
          type: number
          example: '0'
          description: ''
        status:
          type: number
          example: '0'
          description: Status of the account.
        taxCode:
          type: string
          example: 0
          description: tax code
        taxExemptionCode:
          type: string
          example: 0
          description: tax exemption code
        title:
          type: string
          example: string
          description: account title
        unicodeName:
          type: string
          example: string
          description: account name in other language
        majorSicCode:
          type: string
          example: '1'
          description: majorSicCode
        sicCode:
          type: string
          example: '1'
          description: sicCode
        creditLimit:
          type: string
          example: '10'
          description: credit limit
        contactEmailId:
          type: string
          example: someone@examplemail.com
          description: contact email id
        smsNumbers:
          type: string
          example: '34325434545'
          description: sms numbers
        billingRegion:
          type: string
          description: billingRegion
        preferredCurrency:
          type: string
          description: preferredCurrency
        dunningId:
          type: string
          description: dunning schedule
          example: '0'
        prgCode:
          type: string
          description: prg code
          example: P100
        lac:
          type: string
          description: account number
          example: '2345678'
        gstRegistrationType:
          type: string
          description: gst registration type
          example: ''
        gstNumber:
          type: string
          description: gst number
          example: ''
        gstCustomerType:
          type: string
          description: gst customer type
          example: ''
        writeOffFlag:
          type: string
          description: write off flag
          example: ''
        billFromStateCode:
          type: string
          description: bill from state code
          example: KA
        billToStateCode:
          type: string
          description: bill from state code
          example: AD
        pos:
          type: string
          description: point of sale
          example: '100'
        circleId:
          type: string
          description: circle id
          example: '100'
        gstState:
          type: string
          description: gst state
          example: ''
        deliveryMode:
          type: string
          description: delivery mode
          example: ''
        creditLimitType:
          type: string
          description: credit limit type
          example: ''
        creditSegment:
          type: string
          description: credit segment
          example: ''
        lacType:
          type: string
          description: lac type
          example: ''
        isSharing:
          type: string
          description: isSharing
          example: 'true'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/AccountContactRef'
          description: contact attachments
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - mediumType: address
              characteristic:
                contactType: billingAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
    AccountContactRef:
      type: object
      required:
        - contactId
        - status
      properties:
        contactId:
          type: string
          example: '1'
          description: contact id
        contactType:
          type: string
          example: '1'
          description: contact type
        status:
          type: string
          example: A
          description: status, A - to activate contact, D -  to deactivate contact
          enum:
            - A
            - D
    DetachContactRef:
      type: object
      required:
        - contactId
        - contactType
        - status
      properties:
        contactId:
          type: string
          example: '1'
          description: contact id
        contactType:
          type: string
          example: '1'
          description: contact type
        status:
          type: string
          example: D
          description: status, A - to activate contact, D -  to deactivate contact
          enum:
            - A
            - D
    BillingAccountRefForAddService:
      type: object
      required:
        - accountId
        - serviceGroups
      properties:
        accountId:
          type: string
          example: '100756'
          description: >-
            id of the billing account under which the service to be added. if
            the account is prepaid, then 'PREPAID_ACCOUNT' can be the value for
            this parameter
        serviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/serviceGroupsRef'
    BillingAccountRefForTOS:
      type: object
      required:
        - chargingPattern
        - name
        - preferredCurrency
        - title
        - serviceGroups
      properties:
        billcycleId:
          type: string
          example: 1
          description: Bill cycle attached to the subscriber account
        keyAccountManager:
          type: string
          example: ''
          description: person who manages the account
        billingOnHold:
          type: integer
          example: 0
          description: 1 - enable billing on hold, 0 - disable billing on hold
          enum:
            - 0
            - 1
        chargingPattern:
          type: integer
          example: 1
          enum:
            - 1
            - 2
          description: defines the charging pattern for the account. 1-postpaid, 2-prepaid
        dispatchMode:
          type: integer
          example: 0
          description: mode of dispatching the invoice. 0-NA , 1-Email , 2-Post
          enum:
            - 0
            - 1
            - 2
        dunningExclusion:
          type: integer
          example: 0
          description: specifies whether to exclude from dunning or not.
          enum:
            - 0
            - 1
        emailNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        smsNotificationAllowed:
          type: integer
          example: 0
          description: >-
            specifies email notification is required or not. 0 - not required, 1
            - required
          enum:
            - 0
            - 1
        taxApplicable:
          type: integer
          example: 0
          description: >-
            specifies if tax applicable or not. 0 - not applicable, 1 -
            applicable
          enum:
            - 0
            - 1
        entityId:
          type: string
          example: 200
          description: mvno id
        itemizedbillRequired:
          type: integer
          example: 0
          description: >-
            If itemized bill is required for this account or not.1- required, 0-
            not required
          enum:
            - 0
            - 1
        autoDebit:
          type: integer
          description: >-
            auto debit enabled or not. 1 - enable auto debit. 0 - disable auto
            debit
          example: 1
          enum:
            - 0
            - 1
        bankAccountNo:
          type: string
          description: >-
            bank account number from which the money to be debited in case the
            autdebit is enabled
          example: '113124234234'
        bankID:
          type: string
          description: bank id
          example: '1221'
        bankAccountName:
          type: string
          description: account name
          example: abc
        bankAccountType:
          type: string
          description: Bank Account Type (Savings, Current etc)
          example: Current
        branchName:
          type: string
          description: bank branch name
          example: south branch
        languageId:
          type: string
          example: '1'
          description: >-
            language id, 1 - English,2 - Amharic,3 - Somali,4 - Tigrinya,5 -
            Oromo
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        excelFileFlag:
          type: integer
          example: 0
          description: excel invoice is required or not. 0 - not required, 1 - required
          enum:
            - 0
            - 1
        name:
          type: string
          example: test account
          description: account name
        remarks:
          type: string
          example: string
          description: remarks/comments to add if any
        riskcategoryId:
          type: number
          example: '0'
          description: ''
        status:
          type: number
          example: '0'
          description: Status of the account.
        taxCode:
          type: string
          example: 0
          description: tax code
        taxExemptionCode:
          type: string
          example: 0
          description: tax exemption code
        title:
          type: string
          example: string
          description: account title
        unicodeName:
          type: string
          example: string
          description: account name in other language
        majorSicCode:
          type: string
          example: '1'
          description: majorSicCode
        sicCode:
          type: string
          example: '1'
          description: sicCode
        dunningId:
          type: string
          description: dunning schedule
          example: '0'
        creditLimit:
          type: string
          example: '10'
          description: credit limit
        contactEmailId:
          type: string
          example: someone@examplemail.com
          description: contact email id
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/AccountContactRef'
          description: contact attachments
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - mediumType: address
              characteristic:
                contactType: billingAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
    OrderItemRefForGifting:
      type: object
      required:
        - action
        - service
        - product
        - productOffering
        - itemCharacteristic
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Identifier of the line item (generally it is a sequence number 1, 2,
            3, ...)
        action:
          type: string
          example: add
          description: >-
            action to be performed on the product. [add - for adding the product
            item , delete - for deleting the product item]. expected value for
            gifting usecase is add
        itemCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: beneficiary
              valueType: string
              value: '97655566767'
            - name: note
              valueType: string
              value: this is a gift
        service:
          $ref: '#/components/schemas/TMFServiceRef'
        billingAccount:
          $ref: '#/components/schemas/TMFAccountRef'
        itemTerm:
          type: array
          items:
            $ref: '#/components/schemas/OrderTermRef'
        itemPrice:
          type: array
          items:
            $ref: '#/components/schemas/TMFItemPriceRef'
          description: list of prices associated with this order item
        product:
          $ref: '#/components/schemas/TMFProductRef'
        productOffering:
          $ref: '#/components/schemas/TMFProductOrderingRef'
        orderItemRelationShip:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRelationShipRef'
          example:
            - id: '1'
              relationshipType: reliesOn
    OrderItemRef:
      type: object
      required:
        - action
        - service
        - product
        - productOffering
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Identifier of the line item (generally it is a sequence number 1, 2,
            3, ...)
        action:
          type: string
          example: add
          description: >-
            action to be performed on the product. [add - for adding the product
            item , delete - for deleting the product item]
        itemCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
        service:
          $ref: '#/components/schemas/TMFServiceRef'
        billingAccount:
          $ref: '#/components/schemas/TMFAccountRef'
        itemTerm:
          type: array
          items:
            $ref: '#/components/schemas/OrderTermRef'
        itemPrice:
          type: array
          items:
            $ref: '#/components/schemas/TMFItemPriceRef'
          description: list of prices associated with this order item
        product:
          $ref: '#/components/schemas/TMFProductRef'
        productOffering:
          $ref: '#/components/schemas/TMFProductOrderingRef'
        orderItemRelationShip:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRelationShipRef'
          example:
            - id: '1'
              relationshipType: reliesOn
    OrderItemRelationShipRef:
      type: object
      required:
        - id
        - relationshipType
      properties:
        id:
          type: string
          example: '1'
          description: Identifier of the order item on which this item is related to
        relationshipType:
          type: string
          example: reliesOn
          description: defines the type of relation ship. possible value - reliesOn
    TMFOrderItemRefCancelSub:
      type: object
      required:
        - id
        - action
        - itemCharacteristic
        - service
        - productOffering
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Identifier of the line item (generally it is a sequence number 1, 1,
            3, ...)
        action:
          type: string
          example: delete
          description: >-
            action to be performed on the product. [add - for adding the product
            item , delete - for deleting the product item]
        reasonCode:
          type: string
          example: '1'
          description: cancellation reason
        itemCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: SUBSCRIPTION_ID
              valueType: string
              value: '121323'
        service:
          $ref: '#/components/schemas/TMFServiceRef'
        billingAccount:
          $ref: '#/components/schemas/TMFAccountRef'
        productOffering:
          $ref: '#/components/schemas/TMFProductOrderingRef'
    TMFOrderItemRefSuspendSub:
      type: object
      required:
        - id
        - action
        - itemCharacteristic
        - service
        - productOffering
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Identifier of the line item (generally it is a sequence number 1, 1,
            3, ...)
        action:
          type: string
          example: suspend
          description: >-
            action to be performed on the product. [add - for adding the product
            item , delete - for deleting the product item]
        itemCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: SUBSCRIPTION_ID
              valueType: string
              value: '121323'
            - name: CFSS_NAME
              valueType: string
              value: CFSS_CLIP
        service:
          $ref: '#/components/schemas/TMFServiceRef'
        billingAccount:
          $ref: '#/components/schemas/TMFAccountRef'
        productOffering:
          $ref: '#/components/schemas/TMFProductOrderingRef'
    TMFOrderItemRefUpdateSub:
      type: object
      required:
        - id
        - action
        - itemCharacteristic
        - service
        - productOffering
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Identifier of the line item (generally it is a sequence number 1, 1,
            3, ...)
        action:
          type: string
          example: update
          description: >-
            action to be performed on the product. [add - for adding the product
            item , delete - for deleting the product item]
        itemCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: SUBSCRIPTION_ID
              valueType: string
              value: '121323'
            - name: SUBSCRIPTION_STATUS
              valueType: string
              value: '2'
            - name: EFFECTIVE_DATE
              valueType: string
              value: 10/25/2021 00:34:11
        service:
          $ref: '#/components/schemas/TMFServiceRef'
        billingAccount:
          $ref: '#/components/schemas/TMFAccountRef'
        productOffering:
          $ref: '#/components/schemas/TMFProductOrderingRef'
    TMFOrderItemRefResumeSub:
      type: object
      required:
        - id
        - action
        - itemCharacteristic
        - service
        - productOffering
      properties:
        id:
          type: string
          example: '1'
          description: >-
            Identifier of the line item (generally it is a sequence number 1, 1,
            3, ...)
        action:
          type: string
          example: resume
          description: >-
            action to be performed on the product. [add - for adding the product
            item , delete - for deleting the product item]
        itemCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: SUBSCRIPTION_ID
              valueType: string
              value: '121323'
            - name: CFSS_NAME
              valueType: string
              value: CFSS_CLIP
        service:
          $ref: '#/components/schemas/TMFServiceRef'
        billingAccount:
          $ref: '#/components/schemas/TMFAccountRef'
        productOffering:
          $ref: '#/components/schemas/TMFProductOrderingRef'
    TMFSubscriptionGiftingRef:
      type: object
      required:
        - orderType
        - orderItem
      properties:
        orderType:
          type: string
          example: Gifting
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: >-
            Requested delivery date from the requestor perspective. format -
            yyyy-MM-dd'T'HH:mm:ss'Z'
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date. format -
            yyyy-MM-dd'T'HH:mm:ss'Z'
        channel:
          type: array
          items:
            $ref: '#/components/schemas/RelatedChannelRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRef'
          example:
            - id: 456-dd-df45
              name: Joe Doe
              role: Seller
            - id: '12132313'
              name: Arturo
              role: Customer
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRefForGifting'
        payment:
          $ref: '#/components/schemas/TMFPaymentRef'
    TMFAddSubscriptionRef:
      type: object
      required:
        - orderType
        - orderItem
      properties:
        orderType:
          type: string
          example: AddSubscription
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Add Subscription Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: >-
            Requested delivery date from the requestor perspective. format -
            yyyy-MM-dd'T'HH:mm:ss'Z'
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date. format -
            yyyy-MM-dd'T'HH:mm:ss'Z'
        channel:
          type: array
          items:
            $ref: '#/components/schemas/RelatedChannelRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRef'
          example:
            - id: 456-dd-df45
              name: Joe Doe
              role: Seller
            - id: '12132313'
              name: Arturo
              role: Customer
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRef'
        payment:
          $ref: '#/components/schemas/TMFPaymentRef'
    TMFCancelSubscriptionRef:
      type: object
      required:
        - orderType
        - orderItem
      properties:
        orderType:
          type: string
          example: CancelSubscription
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Cancel Subscription Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        channel:
          type: array
          items:
            $ref: '#/components/schemas/RelatedChannelRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRef'
          example:
            - id: 456-dd-df45
              name: Joe Doe
              role: Seller
            - id: '12132313'
              name: Arturo
              role: Customer
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/TMFOrderItemRefCancelSub'
        payment:
          $ref: '#/components/schemas/TMFPaymentRef'
          description: to post any payments associated with the order
    TMFSuspendSubscriptionRef:
      type: object
      required:
        - orderType
        - orderItem
      properties:
        orderType:
          type: string
          example: SuspendSubscription
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Suspend Subscription Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        channel:
          type: array
          items:
            $ref: '#/components/schemas/RelatedChannelRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRef'
          example:
            - id: 456-dd-df45
              name: Joe Doe
              role: Seller
            - id: '12132313'
              name: Arturo
              role: Customer
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/TMFOrderItemRefSuspendSub'
        payment:
          $ref: '#/components/schemas/TMFPaymentRef'
          description: to post any payments associated with the order
    TMFUpdateSubscriptionRef:
      type: object
      required:
        - orderType
        - orderItem
      properties:
        orderType:
          type: string
          example: UpdateSubscription
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Update Subscription Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        channel:
          type: array
          items:
            $ref: '#/components/schemas/RelatedChannelRef'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/TMFOrderItemRefUpdateSub'
    TMFResumeSubscriptionRef:
      type: object
      required:
        - orderType
        - orderItem
      properties:
        orderType:
          type: string
          example: ResumeSubscription
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Resume Subscription Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        channel:
          type: array
          items:
            $ref: '#/components/schemas/RelatedChannelRef'
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRef'
          example:
            - id: 456-dd-df45
              name: Joe Doe
              role: Seller
            - id: '12132313'
              name: Arturo
              role: Customer
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/TMFOrderItemRefResumeSub'
        payment:
          $ref: '#/components/schemas/TMFPaymentRef'
          description: to post any payments associated with the order
    TMFServiceRef:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: '9765432112'
          description: Unique service id. this can be the msisdn if the service is GSM
        name:
          type: string
          example: GSM Service
          description: 'Service name '
    TMFAccountRef:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: '453435'
          description: Unique account id
        name:
          type: string
          example: GSM Service
          description: account name
    TMFProductOrderingRef:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: plan id
          example: '1001'
        name:
          type: string
          description: plan name
          example: TMF 25
    TMFItemPriceRef:
      type: object
      required:
        - name
        - priceType
        - price
        - productOfferingPrice
      properties:
        name:
          type: string
          description: price name
          example: offer fee
        priceType:
          type: string
          description: >-
            A category that describes the price, such as recurring, discount,
            allowance, penalty, and so forth
          example: recurring
        recurringChargePeriod:
          type: string
          description: Could be month, week
          example: month
        price:
          $ref: '#/components/schemas/PriceRef'
        productOfferingPrice:
          $ref: '#/components/schemas/TMFProductOfferingPriceRef'
          description: >-
            reference to upc product offering entity curresponds to this price
            item
    TMFProductOfferingPriceRef:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: product offering price id as per upc definition
          example: '12'
    TMFPaymentRef:
      type: object
      required:
        - upfrontPayment
        - paymentRecieved
        - amount
      properties:
        id:
          type: string
          description: >-
            id generated in payment management system for the payment done
            against this order
          example: '121'
        name:
          type: string
          description: description of the payment
          example: Cash payment for GSM Voice Addon
        type:
          type: string
          description: 'type of payment, eg: CashPayment,CardPayment etc'
          example: CashPayment
        upfrontPayment:
          type: string
          enum:
            - 'true'
            - 'false'
          example: 'true'
          description: Flag that defines upfront payment
        paymentReceived:
          type: string
          enum:
            - 'true'
            - 'false'
          example: 'true'
          description: Flag that identifies if the payment is already collected or not
        amount:
          type: string
          example: '60.0'
          description: Actual amount paid by the subscriber.
    TMFProductRef:
      type: object
      required:
        - productSpecification
      properties:
        productCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
    ServiceRef:
      type: object
      required:
        - name
        - chargingPattern
        - subcriptions
      properties:
        serviceId:
          type: string
          example: '9765432112'
          description: Unique service id. this can be the msisdn if the service is GSM
        name:
          type: string
          example: GSM Service
          description: 'Service name '
        languageId:
          type: string
          example: '1'
          description: >-
            language id, 1 - English,2 - Amharic,3 - Somali,4 - Tigrinya,5 -
            Oromo
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
        isSimPaired:
          type: boolean
          example: 'false'
          description: >-
            this parameter tells whether the sim selected is paired to the
            msisdn or not. this tag is mandatory if the service is of type GSM
        status:
          type: string
          example: '1'
          description: Service Status
        serviceType:
          type: string
          example: Master
          description: type of service.(Master, Service etc)
        networkServiceId:
          type: string
          example: '1'
          description: This is the network type which says M2M,WDS,IIOT,ESIM
        chargingPattern:
          type: string
          example: '1'
          description: >-
            Connection type of the service connection. 1-Postpaid, 2-Prepaid,
            3-Hybrid 
        ocsDeliveryChannel:
          type: string
          example: ''
          description: ocs delivery channel
        creditLimit:
          type: string
          example: '100'
          description: credit limit
        circleId:
          type: string
          example: '100'
          description: circle id
        endCustName:
          type: string
          example: Bernad
          description: end customer name
        contactMedium:
          type: array
          items:
            $ref: '#/components/schemas/ContactMediumRef'
          example:
            - mediumType: address
              characteristic:
                contactType: residentialAddress
                addrLine1: house no 268
                addrLine2: 1000 ADDIS ABABA
                addrLine3: Kebele 1, 1302/29
                addrLine4: Addis Ababa
                addrLine5: Addis Ababa
                addrLine6: Shoa
                addrLine7: Achefer
                addrLine8: '1000'
                addrLine9: P.O. Box 1519
                addrLine10: '8.9806'
                addrLine11: '38.7578'
        deposit:
          type: array
          items:
            $ref: '#/components/schemas/DepositRef'
        contract:
          $ref: '#/components/schemas/ContractRef'
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRef'
          example:
            - name: ICCID
              valueType: string
              value: '321321'
            - name: IMSI
              valueType: string
              value: '321321'
            - name: IMEI
              valueType: string
              value: '321321'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRef'
    UpdateAddressRef:
      type: object
      required:
        - subscriberId
        - addressId
        - addressType
      properties:
        subscriberId:
          type: string
          description: >-
            this can be the profile id/account id/service id depending on the
            level to which the address is attached
          example: '1231313'
        addressType:
          type: string
          description: >-
            type of address. 0-Permanent, 1-Residential, 2-Billing,
            3-Installation, 4-VAT
          example: '1'
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        addrLine1:
          type: string
          example: house no 268
          description: 'street line one. '
        addrLine2:
          type: string
          example: 1000 ADDIS ABABA
          description: 'street line two. '
        addrLine3:
          type: string
          example: Kebele 1, 1302/29
          description: 'this parameter can be used to send the ward(kabele) name. '
        addrLine4:
          type: string
          example: Addis Ababa
          description: 'this parameter can be used to send the city name. '
        addrLine5:
          type: string
          example: Addis Ababa
          description: 'this parameter can be used to send the region name. '
        addrLine6:
          type: string
          example: Shoa
          description: 'this parameter can be used to send the state or province name. '
        addrLine7:
          type: string
          example: Achefer
          description: 'this parameter can be used to send the district (woreda) name. '
        addrLine8:
          type: string
          example: '1000'
          description: this parameter can be used to send the postal code.
        addrLine9:
          type: string
          example: P.O. Box 1519
          description: 'this parameter can be used to send the PO Box number. '
        addrLine10:
          type: string
          example: '8.9806'
          description: this parameter can be used to send the latitude address.
        addrLine11:
          type: string
          example: '38.7578'
          description: 'this parameter can be used to send the longitude address. '
        addressId:
          type: string
          description: unique id created in bss for this address entity
          example: '1'
    UpdateServiceAddressRef:
      type: object
      required:
        - subscriberId
        - addressId
        - serviceSeqId
      properties:
        subscriberId:
          type: string
          description: subscriber service id
          example: '976543214'
        serviceSeqId:
          type: string
          description: serviceSeqId
          example: '456432'
        addressType:
          type: string
          description: >-
            type of address. 0-Permanent, 1-Residential, 2-Billing,
            3-Installation, 4-VAT
          example: '1'
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        addrLine1:
          type: string
          example: house no 268
          description: 'street line one. '
        addrLine2:
          type: string
          example: 1000 ADDIS ABABA
          description: 'street line two. '
        addrLine3:
          type: string
          example: Kebele 1, 1302/29
          description: 'this parameter can be used to send the ward(kabele) name. '
        addrLine4:
          type: string
          example: Addis Ababa
          description: 'this parameter can be used to send the city name. '
        addrLine5:
          type: string
          example: Addis Ababa
          description: 'this parameter can be used to send the region name. '
        addrLine6:
          type: string
          example: Shoa
          description: 'this parameter can be used to send the state or province name. '
        addrLine7:
          type: string
          example: Achefer
          description: 'this parameter can be used to send the district (woreda) name. '
        addrLine8:
          type: string
          example: '1000'
          description: this parameter can be used to send the postal code.
        addrLine9:
          type: string
          example: P.O. Box 1519
          description: 'this parameter can be used to send the PO Box number. '
        addrLine10:
          type: string
          example: '8.9806'
          description: this parameter can be used to send the latitude address.
        addrLine11:
          type: string
          example: '38.7578'
          description: 'this parameter can be used to send the longitude address. '
        addressId:
          type: string
          description: unique id created in bss for this address entity
          example: '1'
    CFSRef:
      type: object
      required:
        - name
        - serviceType
        - serviceClass
        - transportType
        - serviceCategory
      properties:
        serviceType:
          type: string
          example: '1'
          description: ''
        serviceClass:
          type: string
          example: '2'
          description: ''
        transportType:
          type: string
          example: '9'
          description: ''
        serviceCategory:
          type: string
          example: '8'
          description: ''
        characteristics:
          type: array
          items:
            $ref: '#/components/schemas/CFSChracteristicRef'
        validFor:
          $ref: '#/components/schemas/ValidForRef'
    CFSChracteristicRef:
      type: object
      required:
        - name
        - value
      properties:
        dataType:
          type: string
          example: string
          description: ''
        isAttribute:
          type: string
          example: '0'
          description: ''
        defaultValue:
          type: string
          example: National
          description: ''
        isMandatory:
          type: string
          example: '0'
          description: ''
        isPriceImpacting:
          type: string
          example: '0'
          description: ''
        isOrderEntryAttribute:
          type: string
          example: '1'
          description: ''
        startDate:
          type: string
          description: ''
          format: date
        name:
          type: string
          example: Coverage
          description: name of the characteristic
        value:
          type: string
          example: International
          description: value of the characteristic
    OrderTermRef:
      type: object
      required:
        - description
        - name
        - duration
      properties:
        description:
          type: string
          example: 2 Year Contract
          description: ''
        name:
          type: string
          example: 2 Year Contract
          description: ''
        duration:
          $ref: '#/components/schemas/DurationRef'
    SubscriptionRef:
      type: object
      required:
        - planId
        - planName
        - planType
      properties:
        planId:
          type: string
          example: '120'
          description: ''
        planName:
          type: string
          example: TMF25
          description: ''
        planDesc:
          type: string
          example: GSM Base Plan
          description: ''
        planType:
          type: string
          example: 0
          description: 0-base plan 1- addon
        expiryDate:
          type: string
          example: '2025-02-10T12:00:00.000Z'
          format: date-time
          description: plan expiry date
        upcVersion:
          type: string
          example: '1'
          description: ''
        activationDate:
          type: string
          format: date-time
          description: ''
        autoRenewal:
          type: string
          example: '0'
          description: >-
            identifies whether the plan is auto renewable or onetime 0 - onetime
            subscription, 1 - renewable subscriptions
          enum:
            - '0'
            - '1'
        charges:
          type: array
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRef'
        cfss:
          type: array
          items:
            $ref: '#/components/schemas/CFSRef'
          example:
            - id: '122'
              name: CFSS_VOICE
              serviceType: '1'
              serviceClass: '2'
              transportType: '9'
              serviceCategory: '8'
              characteristics:
                - dataType: Boolean
                  isAttribute: '0'
                  defaultValue: 'true'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '0'
                  startDate: '2021-09-07'
                  name: Coverage
                  value: International
        prs:
          type: array
          items:
            $ref: '#/components/schemas/CFSRef'
          example:
            - id: '76'
              name: PRS_SIM
              href: http://10.0.0.91:8190/UPC/SOMServices/76
              serviceType: '3'
              serviceClass: '2'
              transportType: '5'
              serviceCategory: '4'
              characteristics:
                - dataType: String
                  isAttribute: '0'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '1'
                  startDate: '2021-09-07'
                  name: IMSI
                  value: '23434324234235325'
                - dataType: String
                  isAttribute: '0'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '1'
                  startDate: '2021-09-07'
                  name: ICCID
                  value: '232432432432432'
        lrs:
          type: array
          items:
            $ref: '#/components/schemas/CFSRef'
          example:
            - id: '86'
              name: LRS_MSISDN
              href: http://10.0.0.91:8190/UPC/SOMServices/86
              serviceType: '4'
              serviceClass: '1'
              transportType: '5'
              serviceCategory: '4'
              characteristics:
                - dataType: String
                  isAttribute: '0'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '1'
                  startDate: '2021-09-07'
                  name: MSISDN
                  value: '21321321312'
    SubscriptionRefQueryPlan:
      type: object
      required:
        - planId
        - planName
        - planType
        - planDesc
        - subscriptionId
        - status
        - activationDate
        - expiryDate
      properties:
        planId:
          type: string
          example: '120'
          description: ''
        planName:
          type: string
          example: TMF25
          description: ''
        planDesc:
          type: string
          example: GSM Base Plan
          description: ''
        planType:
          type: string
          example: 0
          description: 0-base plan 1- addon
        upcVersion:
          type: string
          example: '1'
          description: version in upc for the plan currespodnding to this subscription
        activationDate:
          type: string
          format: date-time
          description: date at which this entity is activate
        expiryDate:
          type: string
          format: date-time
          description: expiry date of this entity
        effectiveDate:
          type: string
          format: date-time
        renewalDate:
          type: string
          format: date-time
          description: subscription renewal date
        lastChargedDate:
          type: string
          format: date-time
          description: date at which the last recharge has been done
        activaionChannel:
          type: string
          example: '5'
        autoRenewal:
          type: string
          example: '0'
          description: >-
            identifies whether the plan is auto renewable or onetime 0 - onetime
            subscription, 1 - renewable subscriptions
          enum:
            - '0'
            - '1'
        packageType:
          type: string
          example: '0'
          description: >-
            identifies the type of package.  0 - IN packs, 1-VAS packs, 2- HLR
            service
          enum:
            - '0'
            - '1'
            - '2'
        subscriptionId:
          type: string
          example: '34324324'
          description: unique id created at billing systems for this subscription
        validity:
          type: string
          example: '30'
          description: subscription validity
        lastAmountCharged:
          type: string
          example: '0.0'
          description: last amount charged for the subscription
        bPartyMsisdn:
          type: string
          example: '9654321232'
          description: >-
            bparty msisdn number. if the subscription is gifted, this will be
            the msisdn of the customer who has gifted
        status:
          type: string
          example: A
          description: >-
            status of this subscription. possible values are [A- active, G -
            Grace, S - Suspend, D - Terminate ]
        charges:
          type: array
          items:
            $ref: '#/components/schemas/BillingChargeRefQueryPlan'
        benefits:
          type: array
          items:
            $ref: '#/components/schemas/BillingBenefitRefQueryPlan'
    ProductSpecificationRef:
      type: object
      required:
        - version
      properties:
        id:
          type: string
          example: '14307'
          description: ''
        name:
          type: string
          example: Mobile Telephony
          description: ''
        version:
          type: string
          example: '1'
          description: ''
        poType:
          type: string
          example: Base
          enum:
            - Base,Addon
          description: identifies whether the plan is addon or base plan
        autoRenewal:
          type: string
          example: '0'
          description: >-
            identifies whether the plan is auto renewable or onetime 0 - onetime
            subscription, 1 - renewable subscriptions
          enum:
            - '0'
            - '1'
        cfss:
          type: array
          items:
            $ref: '#/components/schemas/CFSRef'
          example:
            - name: CFSS_VOICE
              serviceType: '1'
              serviceClass: '2'
              transportType: '9'
              serviceCategory: '8'
              characteristics:
                - dataType: String
                  isAttribute: '0'
                  defaultValue: 'true'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '0'
                  startDate: '2021-09-07'
                  name: Coverage
                  value: International
        prs:
          type: array
          items:
            $ref: '#/components/schemas/CFSRef'
          example:
            - name: PRS_SIM
              href: http://10.0.0.91:8190/UPC/SOMServices/76
              serviceType: '3'
              serviceClass: '2'
              transportType: '5'
              serviceCategory: '4'
              characteristics:
                - dataType: String
                  isAttribute: '0'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '1'
                  startDate: '2021-09-07'
                  name: IMSI
                  value: '23434324234235325'
                - dataType: String
                  isAttribute: '0'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '1'
                  startDate: '2021-09-07'
                  name: ICCID
                  value: '232432432432432'
        lrs:
          type: array
          items:
            $ref: '#/components/schemas/CFSRef'
          example:
            - name: LRS_MSISDN
              href: http://10.0.0.91:8190/UPC/SOMServices/86
              serviceType: '4'
              serviceClass: '1'
              transportType: '5'
              serviceCategory: '4'
              characteristics:
                - dataType: String
                  isAttribute: '0'
                  isMandatory: '1'
                  isPriceImpacting: '0'
                  isOrderEntryAttribute: '1'
                  startDate: '2021-09-07'
                  name: MSISDN
                  value: '21321321312'
    ProductOfferingPriceRef:
      type: object
      required:
        - upcChargeId
        - upcChargeName
        - chargeRecurranceType
        - chargeCategory
        - chargeDesc
        - amount
        - chargeFrequency
        - chargeEndDate
        - chargeVersion
        - quantity
        - rate
      properties:
        upcChargeId:
          type: string
          example: '1001'
          description: id of this charge entity in product catalogue
        upcChargeName:
          type: string
          example: Base offer Fee
          description: name of this charge
        chargeDesc:
          type: string
          example: Base offer Fee
          description: ''
        overridden:
          type: number
          example: '0'
          description: >-
            specifies whether charge amount is overriden or not. 1 - enable
            overriding, 0 - no price overriding
        chargeRecurranceType:
          type: string
          example: '1'
          description: Charge recurrance [0- One Time- 1 - Recurring]
        chargeCategory:
          type: string
          example: '0'
          description: >-
            Charge Category [0-Arrear, 1-Rental, 2-Advance Rental,
            3-installation charges, 4- Deposit, 5 -Discounts, 10-Others,
            44-group penalty]
        chargeNameOl:
          type: string
          description: charge name in other language
        discountDescription:
          type: number
          description: discount description
        discountLevel:
          type: string
          description: discount level
        discountName:
          type: string
          description: name of discount
        discountType:
          type: string
          description: type of discount
        discountValue:
          type: number
          description: discount value
        nextChargeDate:
          type: string
          format: date-time
          description: next charge date
        chargeFrequency:
          type: string
          example: '0'
          description: 0- Daily 1- Weekly 2- Monthly
          enum:
            - '0'
            - '1'
            - '2'
        chargeType:
          type: string
          description: charge type
        chargeFactor:
          type: string
          example: '0'
        chargeGlCode:
          type: string
          example: '0'
        chargeValidity:
          type: string
          example: '0'
        quantity:
          type: string
          example: '1'
          description: charge quantity
        rate:
          type: number
          example: '10'
          description: rate per unit
        chargeStartDate:
          type: string
          format: date-time
          description: start date for the charge
        chargeEndDate:
          type: string
          format: date-time
          description: end date for the charge
        amount:
          type: number
          description: charge amount
        chargeVersion:
          type: number
          description: version of this charge in product catalouge
        isProrata:
          type: number
          example: '0'
          description: >-
            defines whether proration is enabled or not. 0 - proration disabled.
            1 - enabled
        noOfCycles:
          type: number
          example: '0'
        overriddenCharge:
          type: number
          example: '0'
        overriddenCycle:
          type: number
          example: '0'
        overriddenKey:
          type: number
          example: '0'
        overriddenType:
          type: string
          example: '0'
        possibleOverride:
          type: string
          example: '0'
        prorationFlag:
          type: string
          example: '0000'
          description: >-
            4 bit flag which controlls the proration. 1st Bit : prorata on
            activation, 2nd Bit : prorata on suspension,3rd bit : prorata on
            change plan,4th bit : prorata on termination
    BillingChargeRefQueryPlan:
      type: object
      required:
        - upcChargeId
        - upcChargeName
        - chargeRecurranceType
        - chargeCategory
        - chargeDesc
        - amount
        - chargeFrequency
        - chargeEndDate
        - chargeVersion
        - quantity
        - rate
      properties:
        upcChargeId:
          type: string
          example: '1001'
          description: id of this charge entity in product catalogue
        upcChargeName:
          type: string
          example: Base offer Fee
          description: name of this charge
        chargeDesc:
          type: string
          example: Base offer Fee
          description: ''
        overridden:
          type: string
          example: '0'
          description: >-
            flag which tells the whether the charge amount has been overridden
            or not
        chargeRecurranceType:
          type: string
          example: '1'
          description: Charge recurrance [0- One Time- 1 - Recurring]
        chargeCategory:
          type: string
          example: '0'
          description: >-
            Charge Category [0-Arrear, 1-Rental, 2-Advance Rental,
            3-installation charges, 4- Deposit, 5 -Discounts, 10-Others,
            44-group penalty]
        chargeFrequency:
          type: string
          example: '0'
          description: 0- Daily 1- Weekly 2- Monthly
          enum:
            - '0'
            - '1'
            - '2'
        chargeFactor:
          type: string
          example: '0'
        chargeGlCode:
          type: string
          example: '0'
        chargeValidity:
          type: string
          example: '0'
        quantity:
          type: string
          example: '1'
          description: charge quantity
        rate:
          type: number
          example: '10'
          description: rate per unit
        chargeStartDate:
          type: string
          format: date-time
          description: start date for the charge
        chargeEndDate:
          type: string
          format: date-time
          description: end date for the charge
        createDate:
          type: string
          format: date-time
          description: create date
        chargeType:
          type: string
          description: charge type
        lastModifiedDate:
          type: string
          format: date-time
          description: last modified date
        createUser:
          type: string
          example: admin
          description: name of the user who created this entity
        amount:
          type: number
          description: charge amount
        chargeVersion:
          type: number
          description: version of this charge in product catalouge
        chargeNameOl:
          type: string
          description: charge name in other language
        discountDescription:
          type: number
          description: discount description
        discountLevel:
          type: string
          description: discount level
        discountName:
          type: string
          description: name of discount
        discountType:
          type: string
          description: type of discount
        discountValue:
          type: number
          description: discount value
        nextChargeDate:
          type: string
          format: date-time
          description: next charge date
        isProrata:
          type: number
          example: '0'
          description: >-
            defines whether proration is enabled or not. 0 - proration disabled.
            1 - enabled
        noOfCycles:
          type: number
          example: '0'
        overriddenCharge:
          type: number
          example: '0'
        overriddenCycle:
          type: number
          example: '0'
        overriddenKey:
          type: number
          example: '0'
        overriddenType:
          type: string
          example: '0'
        possibleOverride:
          type: string
          example: '0'
        prorationFlag:
          type: string
          example: '0000'
          description: >-
            4 bit flag which controlls the proration. 1st Bit : prorata on
            activation, 2nd Bit : prorata on suspension,3rd bit : prorata on
            change plan,4th bit : prorata on termination
    BillingBenefitRefQueryPlan:
      type: object
      required:
        - bucketName
        - bucketId
        - initialValue
        - currentValue
        - unitType
        - effectiveDate
        - expiryDate
      properties:
        bucketName:
          type: string
          example: April 5 Voice Bucket
          description: bucket name
        bucketId:
          type: string
          example: '144'
          description: bucket id
        initialValue:
          type: string
          example: '2500.0'
          description: initial value of the bucket
        currentValue:
          type: string
          example: '2442.0'
          description: current value of the bucket
        unitType:
          type: string
          example: Time
          description: bucket unit type
        effectiveDate:
          type: string
          example: 04/06/2021 17:03:27
          description: bucket effective date
        expiryDate:
          type: string
          example: 06/06/2021 17:03:27
          description: bucket expiry date
    PriceRef:
      type: object
      required:
        - totalAmount
      properties:
        totalAmount:
          $ref: '#/components/schemas/AmountRef'
    AmountRef:
      required:
        - value
      properties:
        unit:
          type: string
          example: EUR
          description: ''
        value:
          type: string
          example: '55'
          description: ''
    DepositRef:
      type: object
      required:
        - bookingId
        - status
        - depositAmount
      properties:
        comment:
          type: string
          example: deposit
          description: ''
        currencyCode:
          type: string
          example: USD
          description: Currency used for deposit
        bookingId:
          type: string
          example: '1'
          description: ''
        status:
          type: string
          example: '1'
          description: ''
        depositAmount:
          type: string
          example: '30.00'
          description: ''
    DepositRefForOrderCallback:
      type: object
      required:
        - serviceId
        - bookingId
        - status
        - actualAmount
        - depositAmount
        - paymentDetails
      properties:
        serviceId:
          type: string
          example: '8765432186'
          description: unique service id to which the deposit to be attached
        comment:
          type: string
          example: deposit
          description: ''
        currencyCode:
          type: string
          example: USD
          description: Currency used for deposit
        bookingId:
          type: string
          example: '1'
          description: ''
        status:
          type: string
          example: '1'
          description: ''
        actualAmount:
          type: string
          example: '50.00'
          description: actual amount paid for deposit
        depositAmount:
          type: string
          example: '30.00'
          description: ''
        paymentDetails:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetailRefBookDeposit'
    DurationRef:
      type: object
      required:
        - amount
        - units
      properties:
        amount:
          type: string
          example: '2'
          description: ''
        units:
          type: string
          example: Year/Month
          description: ''
    OrderPaymentRef:
      type: object
      required:
        - amount
        - collectionSourceType
        - collectionId
        - currencyCode
        - totalAmount
        - transactionId
        - paymentDetail
      properties:
        amount:
          type: string
          example: '22.0'
          description: Actual amount paid by the subscriber.
        collectionSourceType:
          type: string
          example: NORMAL
          description: Source collector if any
        collectionId:
          type: string
          example: '12'
          description: Source collector user id
        comment:
          type: string
          example: order payment
          description: ''
        currencyCode:
          type: string
          example: USD
          description: Currency code in which the payment was registered. Eg:USD, INR etc.
        totalAmount:
          type: string
          example: '22.00'
          description: Total amount paid by the subscriber.
        transactionId:
          type: string
          example: '13213234234'
          description: external transaction_id if any (for card/digital payments)
        paymentDetail:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetailRef'
    UpfrontPaymentRef:
      type: object
      required:
        - upfrontPayment
        - amount
      properties:
        upfrontPayment:
          type: string
          enum:
            - 'true'
            - 'false'
          example: 'true'
          description: Flag that defines upfront payment
        amount:
          type: string
          example: '60.0'
          description: Actual amount paid by the subscriber.
        comment:
          type: string
          example: order payment
          description: ''
    ApprovalRef:
      type: object
      required:
        - approvalReqd
      properties:
        approvalReqd:
          type: string
          example: 'true'
          description: specfies if approval required or not
          enum:
            - 'true'
            - 'false'
    PaymentReversalRef:
      type: object
      description: >-
        Either paymentId or transactionId is mandatory to cancel/reverse a
        payment
      required:
        - accountId
        - voidType
      properties:
        accountId:
          type: string
          example: '35435435'
          description: billing account id againt which the payment has been booked
        voidType:
          type: string
          example: '1'
          description: 0-revesal payment|1-cancel payment
        paymentId:
          type: string
          example: '1001'
          description: >-
            id of the payment record. this id can be passed to cancel a part of
            the payment made under a particular transaction.
        transactionId:
          type: string
          example: '13213234234'
          description: >-
            external transaction id associated with payment transaction. passing
            this parameter in request will cause the whole transaction to get
            cancelled/reversed
        comment:
          type: string
          example: payment-reversal
          description: comment
    CreditRefundRef:
      type: object
      description: credit refund
      required:
        - accountId
        - approvalStatus
        - chargeCode
        - printDisable
        - refundType
        - refundRequested
      properties:
        accountId:
          type: string
          example: '35435435'
          description: billing account id againt which we do credit refund
        approvalStatus:
          type: string
          example: '1'
          description: approval status
        approveDate:
          type: string
          example: '2022-09-15T15:59:39.001Z'
          description: approve date
        chargeCode:
          type: string
          example: '13213234234'
          description: charge code
        comment:
          type: string
          example: credit-refund
          description: comment
        createUser:
          type: string
          example: admin
          description: create user
        fromDate:
          type: string
          example: '2022-09-15T15:59:39.001Z'
          description: from date
        toDate:
          type: string
          example: payment-reversal
          description: to date
        printDisable:
          type: string
          example: '0'
          description: print disable
        refundDate:
          type: string
          example: '2022-09-17T15:59:39.001Z'
          description: refund date
        refundRequested:
          type: string
          example: '1000'
          description: comment
        refundType:
          type: string
          example: '1'
          description: refund type; 1- cash
        serviceId:
          type: string
          example: '7876661623'
          description: servce id
        serviceSeqId:
          type: string
          example: '241096'
          description: service seq id
    PaymentRef:
      type: object
      required:
        - accountId
        - amount
        - comment
        - currencyCode
        - transactionId
        - totalAmount
        - paymentDetail
      properties:
        accountId:
          type: string
          example: '35435435'
          description: >-
            billing account id against the payment should be recorded. this
            parameter is non mandatory if the payment object is being passed as
            part of any purchase order
        amount:
          type: string
          example: '60.0'
          description: Actual amount paid by the subscriber.
        totalAmount:
          type: string
          example: '60.0'
          description: total amount paid
        collectionSourceType:
          type: string
          example: NORMAL
          description: Source collector if any
        collectionId:
          type: string
          example: '12'
          description: Source collector user id
        comment:
          type: string
          example: order payment
          description: ''
        currencyCode:
          type: string
          example: USD
          description: Currency code in which the payment was registered. Eg:USD, INR etc.
        invoiceIds:
          type: string
          example: '1001'
          description: >-
            The invoice ID for which the payment should be registered. Multiple
            comma-separated invoice Id’s can be given if the payment is done for
            multiple invoices
        invoiceAmounts:
          type: string
          example: '11'
          description: >-
            The invoice amount to be considered for payment adjusting from the
            total paid amount
        collectionDate:
          type: string
          format: date-time
          description: date at which payment is collected
        paymentDate:
          type: string
          format: date-time
          description: date at which payment is done
        transactionId:
          type: string
          example: '13213234234'
          description: external transaction_id if any (for card/digital payments)
        source:
          type: string
          example: CMP
          description: source account or channel
        paymentDetail:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetailRef'
    PaymentDetailRef:
      type: object
      required:
        - paymentMode
        - amountPaid
      properties:
        paymentMode:
          type: string
          example: '1'
          description: >-
            Mode in which the payment is done.possible values -
            [1-CC,2-DC,3-Cheque,4-DD,6-Cash,7-tax-certificate]
        referenceExternalId:
          type: string
          example: '4604'
          description: external reference number if any
        amountPaid:
          type: string
          example: '11.0'
          description: amount paid through this mode
        cardNumber:
          type: string
          example: '4453'
          description: card Number Mandatory for payment Mode 1|2
        chequeNo:
          type: string
          example: '1321323232'
          description: cheque Number. Mandatory for payment mode 3
        ddNo:
          type: string
          example: '232324343434'
          description: DD Number Mandatory for payment mode 4
        chequeDate:
          type: string
          format: date-time
          description: cheque date. Mandatory for payment mode 3
        certificateNumber:
          type: string
          example: '21424234234324'
          description: certificate Number Mandatory for payment Mode 7
        bankId:
          type: string
          example: SIB001
          description: bank id
        bankAccountNo:
          type: string
          example: '21424234234324'
          description: bank account number
    ModeDetailRef:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          example: token
          description: payment gateway token
        value:
          type: string
          example: cus_Dw3ki2DzVqciKV
          description: token value
    QuerySubscriberProfileResponse:
      required:
        - _metadata
        - profile
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        profile:
          $ref: '#/components/schemas/QuerySubscriberProfileRef'
    QuerySubscriberAccountResponse:
      required:
        - _metadata
        - account
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        profile:
          $ref: '#/components/schemas/QuerySubscriberProfileRef'
        account:
          $ref: '#/components/schemas/QuerySubscriberAccountRef'
    QuerySubscriberServiceResponse:
      required:
        - _metadata
        - service
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        profile:
          $ref: '#/components/schemas/QuerySubscriberProfileRef'
        account:
          $ref: '#/components/schemas/QuerySubscriberAccountRef'
        service:
          $ref: '#/components/schemas/QuerySubscriberServiceRef'
    QuerySubscriberProfileRef:
      required:
        - basicInfo
      properties:
        basicInfo:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberBasicInfoRef'
          example:
            - id: id
              value: '1232323'
            - id: birthDate
              value: 09-03-1995
            - id: familyName
              value: dasd
            - id: givenName
              value: ChethanNew
            - id: middleName
              value: sa
            - id: nationality
              value: '1'
            - id: gender
              value: '1'
            - id: title
              value: '1'
            - id: subscriberCategory
              value: '2'
            - id: subscriberSubCategory
              value: '2'
            - id: profileType
              value: '1'
            - id: biometricId
              value: '32132434324'
            - id: minorFlag
              value: '0'
            - id: annualTurnover
              value: '10000'
            - id: businessDescription
              value: test
            - id: noOfEmployees
              value: '4'
            - id: noOfVoiceLines
              value: '5'
            - id: industry
              value: '1'
            - id: sector
              value: Sector 1
            - id: majorSICCode
              value: '1'
            - id: registrationNumber
              value: '879797'
            - id: vatNumber
              value: '87687686'
            - id: tinNumber
              value: '2312312'
            - id: safaricomPartner
              value: 'true'
    StatusRef:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          description: status value
          example: '1'
    QuerySubscriberAccountRef:
      required:
        - basicInfo
      properties:
        basicInfo:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberBasicInfoRef'
          example:
            - id: accountSeqId
              value: 4
            - id: accountId
              value: 6dbss7
            - id: title
              value: string
            - id: name
              value: gsmAccount1
            - id: status
              value: 0
            - id: profileId
              value: 10022
            - id: taxCode
              value: 1
            - id: taxExemptionCode
              value: 1
            - id: riskcategoryId
              value: 1
            - id: dunningExclusion
              value: 0
            - id: dispatchMode
              value: 2
            - id: languageId
              value: 2
            - id: itemizedbillRequired
              value: 0
            - id: chargingPattern
              value: '1'
            - id: createDate
              value: '2021-09-13T12:31:35.000Z'
            - id: lastModifiedDate
              value: '2021-09-13T12:31:35.000Z'
            - id: createUser
              value: '100'
            - id: lastModifiedUser
              value: '100'
            - id: creditLimit
              value: string
            - id: preferredCurrency
              value: string
            - id: billingRegion
              value: string
            - id: contactEmailId
              value: abc@gmail.com
            - id: smsNumbers
              value: '9876543210'
            - id: billcycleId
              value: '22'
            - id: unicodeName
              value: string
            - id: dunningId
              value: '218'
            - id: majorSicCode
              value: '0'
            - id: sicCode
              value: '0'
            - id: notificationEmailId
              value: notificationEmail@gmail.com
            - id: outstandingBalance
              value: '500'
            - id: creditBalance
              value: '500'
            - id: lastInvoiceAmount
              value: '400'
            - id: lastInvoiceTotalAmount
              value: '900'
            - id: totalInvoice
              value: '1000'
            - id: totalPayment
              value: '1000'
            - id: totalDeposit
              value: '500'
            - id: lastBillId
              value: '13254'
            - id: lastBillRun
              value: '2021-10-07T09:47:05.540Z'
            - id: nextBillDate
              value: '2021-10-07T09:47:05.540Z'
            - id: toBillDate
              value: '2021-10-07T09:47:05.540Z'
            - id: billCycleId
              value: '1'
            - id: depositBalance
              value: '100'
            - id: lastPaymentDate
              value: '2021-10-07T09:47:05.540Z'
            - id: billDate
              value: '2021-10-07T09:47:05.540Z'
            - id: billDueDate
              value: '2021-10-07T09:47:05.540Z'
            - id: lastPaymentAmount
              value: '100'
            - id: ocsCreditLimit
              value: '10000'
    BalanceDetailsRef:
      type: object
      properties:
        outstandingBalance:
          type: string
          description: outstanding balance
          example: '500'
        creditBalance:
          type: string
          description: credit Balance
          example: '500'
        lastInvoiceAmount:
          type: string
          description: last Invoice Amount
          example: '400'
        lastInvoiceTotalAmount:
          type: string
          description: last InvoiceTotal Amount
          example: '100'
        totalInvoice:
          type: string
          description: totalInvoice
          example: '1000'
        totalPayment:
          type: string
          description: totalPayment
          example: '1000'
        totalDeposit:
          type: string
          description: totalDeposit
          example: '500'
        lastBillId:
          type: string
          description: lastBillId
          example: '13254'
        lastBillRun:
          type: string
          format: date-time
          description: last bill run date
        nextBillDate:
          type: string
          format: date-time
          description: next bill date
        toBillDate:
          type: string
          format: date-time
          description: toBillDate
        billCycleId:
          type: string
          example: '1'
          description: billCycleId
        depositBalance:
          type: string
          example: '100'
          description: depositBalance
        lastPaymentDate:
          type: string
          format: date-time
          description: lastPaymentDate
        billDate:
          type: string
          format: date-time
          description: billDate
        billDueDate:
          type: string
          format: date-time
          description: billDate
        lastPaymentAmount:
          type: string
          example: '100'
          description: lastPaymentAmount
    QuerySubscriberServiceRef:
      required:
        - basicInfo
      properties:
        basicInfo:
          type: array
          items:
            $ref: '#/components/schemas/SubscriberBasicInfoRef'
          example:
            - id: serviceSeqId
              value: '10'
            - id: serviceId
              value: SA-10
            - id: name
              value: poornima
            - id: accountSeqId
              value: '7'
            - id: accountId
              value: 6dbss7
            - id: profileId
              value: '10001'
            - id: networkServiceId
              value: '1'
            - id: chargingPattern
              value: '1'
            - id: createDate
              value: '2021-05-17T17:06:01.000'
            - id: activationDate
              value: '2021-05-17T17:06:00.667'
            - id: terminationDate
              value: '2021-05-17T17:06:00.667'
            - id: restorationDate
              value: '2021-05-17T17:06:00.667'
            - id: status
              value: '0'
            - id: languageId
              value: '1'
            - id: entityId
              value: '200'
            - id: createUser
              value: COM
            - id: lastmodifiedUser
              value: COM
            - id: comments
              value: '1'
            - id: basePlanId
              value: '1'
            - id: basePlanName
              value: ITalk100
            - id: ocsAccountSeqId
              value: '101'
            - id: ocsServiceSeqId
              value: '102'
            - id: ocsMaBalance
              value: '200'
            - id: ocsStatus
              value: A
            - id: ocsExpirtyDate
              value: '2021-05-17T17:06:00.667'
            - id: ocsActivationDate
              value: '2021-05-17T17:06:00.667'
            - id: billCap
              value: '6.0'
            - id: billCapUsage
              value: '6.0'
    BillingAddressRef:
      type: object
      properties:
        addressLineOne:
          type: string
          description: addressLineOne
        addressLineTwo:
          type: string
          description: addressLineTwo
        addressLineThree:
          type: string
          description: addressLineThree
        city:
          type: string
          description: city
        state:
          type: string
          description: state
        country:
          type: string
          description: country
        zipcode:
          type: string
          description: zipcode
        altAddressLineOne:
          type: string
          description: altAddressLineOne
        altAddressLineTwo:
          type: string
          description: altAddressLineTwo
        altAddressLineThree:
          type: string
          description: altAddressLineThree
        altCity:
          type: string
          description: altCity
        altState:
          type: string
        altCountry:
          type: string
          description: altCountry
        altZipcode:
          type: string
          description: altZipcode
        emailid:
          type: string
          description: emailid
        mobileNumber:
          type: string
          description: mobileNumber
        faxNumber:
          type: string
          description: faxNumber
        alternateMobileNumber:
          type: string
          description: alternateMobileNumber
        phoneNumber:
          type: string
          description: phoneNumber
    SubscriberBasicInfoRef:
      required:
        - id
        - value
      properties:
        id:
          type: string
          example: profileId
          description: parameter identifier
        value:
          type: string
          example: '112232'
          description: parameter value
    OrderAcknowledgementRef:
      type: object
      required:
        - orderId
      properties:
        orderId:
          type: string
          example: '89746373872321983'
          description: Unique order id generated by COM
        requestId:
          type: string
          example: '1232134242343'
          description: unique request id
    OrderDownloadAcknowledgementRef:
      type: object
      required:
        - downloadId
      properties:
        downloadId:
          type: string
          example: '89746373872321983'
          description: Unique download id generated by COM
        requestId:
          type: string
          example: '1232134242343'
          description: unique request id
    UpdateCreditLimitRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateServiceCreditLimit
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an UpdateCreditLimit Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForCreditLimitUpdate'
        approvalDetails:
          $ref: '#/components/schemas/ApprovalRef'
    UpdateCreditLimitOrderRef:
      type: object
      required:
        - orderType
        - accountManagement
      properties:
        orderType:
          type: string
          example: UpdateCreditLimit
          description: unique identifier to identify the operation
        comment:
          type: string
          example: update credit limit for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        accountManagement:
          $ref: '#/components/schemas/AccountManagementForCreditLimitUpdate'
        approvalDetails:
          $ref: '#/components/schemas/ApprovalRef'
    CreateAggHistoryOrderRef:
      type: object
      required:
        - orderType
        - operation
      properties:
        orderType:
          type: string
          example: CreateAggHistory
          description: unique identifier to identify the operation
        comment:
          type: string
          example: update credit limit for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        operation:
          type: string
          example: '1'
          description: 1-paymentReversal; 2-waiver
        paymentReversal:
          $ref: '#/components/schemas/PaymentReversalForAggHistory'
        waiver:
          $ref: '#/components/schemas/WaiverForAggHistory'
    UpdateAggHistoryOrderRef:
      type: object
      required:
        - orderType
        - operation
        - seqId
      properties:
        orderType:
          type: string
          example: UpdateAggHistory
          description: unique identifier to identify the operation
        comment:
          type: string
          example: update credit limit for a customer
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        operation:
          type: string
          example: '1'
          description: 1-paymentReversal; 2-waiver
        seqId:
          type: string
          example: '1'
          description: sequence id generated while creating aggregation history data
        paymentReversal:
          $ref: '#/components/schemas/PaymentReversalForAggHistory'
        waiver:
          $ref: '#/components/schemas/WaiverForAggHistory'
    ServiceManagementForCreditLimitUpdate:
      type: object
      required:
        - serviceId
        - creditLimitInfo
      properties:
        serviceId:
          type: string
          example: '9865432156'
          description: unique service id
        creditLimitInfo:
          $ref: '#/components/schemas/CreditLimitInfoRef'
    AccountManagementForCreditLimitUpdate:
      type: object
      required:
        - accountId
        - creditLimitInfo
      properties:
        accountId:
          type: string
          example: '2408765'
          description: unique identifier to identify the operation
        creditLimitInfo:
          $ref: '#/components/schemas/CreditLimitInfoRef'
    CreditLimitInfoRef:
      type: object
      required:
        - creditLimit
        - creditLimitType
        - operationType
      properties:
        creditLimit:
          type: string
          example: '100'
          description: new credit limit to be updated
        creditClass:
          type: string
          example: B
          description: new credit class to be updated
        comment:
          type: string
          example: updating credit limit
          description: any comments to be updated
        creditLimitType:
          type: string
          example: '1'
          description: type of this spending limit. 1- Permanent 2-Temporary
        operationType:
          type: string
          example: '2'
          description: operation to be performed on this entity. 1-set, 2-delta
        reasonDesc:
          type: string
          example: credit limit update
          description: reason description
    SpendingLimitConsumptionRef:
      type: object
      required:
        - consumptionLimit
        - spendingLimitType
      properties:
        oldConsumptionLimit:
          type: string
          example: '100'
          description: current spending limit
        consumptionLimit:
          type: string
          example: '120'
          description: new consumption limit
        unit:
          type: string
          example: MB
          description: unit of this consumption
        spendingLimitType:
          type: string
          example: '1'
          description: type of this spending limit. 1-Permanent, 2-Temporary
        operationType:
          type: string
          example: '2'
          description: operation to be performed on this entity. 1-set, 2-delta
    SpendingLimitInfoRef:
      type: object
      required:
        - consumption
      properties:
        consumption:
          type: array
          items:
            $ref: '#/components/schemas/SpendingLimitConsumptionRef'
    UpdateSpendingLimitOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: UpdateSpendingLimit
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an UpdateSpendingLimit Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForUpdateSpendingLimit'
    PaymentReversalForAggHistory:
      type: object
      required:
        - amount
        - paymentDate
        - paymentReceiptId
        - paymentReferenceNo
        - reasonCode
      properties:
        amount:
          type: string
          example: '100'
          description: the amount for payment reversal
        paymentDate:
          type: string
          example: '2023-04-24T10:39:04.603Z'
          description: payment date of the historical Receipt ID
        paymentReceiptId:
          type: string
          example: '1'
          description: obtained from historical backup DB
        paymentReferenceNo:
          type: string
          example: '1'
          description: payment reference number of the historical Receipt ID
        reasonCode:
          type: string
          example: '1'
          description: reason code
        status:
          type: string
          example: '1'
          description: status of transaction
    WaiverForAggHistory:
      type: object
      required:
        - invoiceNumber
        - legacyInvoiceNumberAmount
        - reasonCode
        - summarizedInvoiceNumber
        - waiverAmount
        - status
      properties:
        invoiceNumber:
          type: string
          example: '12345'
          description: obtained from historical backup DB
        legacyInvoiceNumberAmount:
          type: string
          example: '100'
          description: this is taken for audit
        reasonCode:
          type: string
          example: '1'
          description: reason code specific to invoice waiver
        summarizedInvoiceNumber:
          type: string
          example: '1'
          description: available in production db
        waiverAmount:
          type: string
          example: '100'
          description: the amount for waiver
        status:
          type: string
          example: '1'
          description: status of the transaction
    UnblockVoucherRef:
      type: object
      required:
        - orderType
        - voucher
      properties:
        orderType:
          type: string
          example: UnblockVoucher
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        voucher:
          $ref: '#/components/schemas/VoucherRef'
    ExtendVoucherValidityRef:
      type: object
      required:
        - orderType
        - voucher
      properties:
        orderType:
          type: string
          example: VoucherValidityExtension
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        voucher:
          $ref: '#/components/schemas/VoucherExpiryRef'
    VoucherRechargeRef:
      type: object
      required:
        - orderType
        - voucher
      properties:
        orderType:
          type: string
          example: VoucherRecharge
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        voucher:
          $ref: '#/components/schemas/VoucherRef'
    BlockVoucherRef:
      type: object
      required:
        - orderType
        - voucher
      properties:
        orderType:
          type: string
          example: BlockVoucher
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        voucher:
          $ref: '#/components/schemas/VoucherRef'
    VoucherExpiryRef:
      type: object
      required:
        - voucherNumber
        - expiryDate
      properties:
        voucherNumber:
          type: string
          example: '9654523977323232'
          description: unique voucher id
        expiryDate:
          type: string
          format: date-time
          description: voucher expiry date
    VoucherRef:
      type: object
      required:
        - serviceId
        - voucherNumber
      properties:
        serviceId:
          type: string
          example: '9765432111'
          description: msisdn
        voucherNumber:
          type: string
          example: '9654523977323232'
          description: unique voucher id
    ExtendSubscriberValidityRef:
      type: object
      required:
        - offsetUnit
        - offsetValue
      properties:
        offsetUnit:
          type: string
          example: 'Y'
          description: >-
            specifies the offset unit. 1 - extend the validity by day, 2 -
            extends the validity by hour
          enum:
            - '1'
            - '2'
        offsetValue:
          type: string
          example: '30'
          description: offset to be extended from current expiry date
    AdjustMainAccountRef:
      type: object
      required:
        - amount
        - negativeCredit
        - adjustmentType
        - adjustAction
      properties:
        amount:
          type: string
          example: '10'
          description: amount to be adjusted
        negativeCredit:
          type: string
          example: 'Y'
          description: specifies if negative credit is allowed or not
          enum:
            - 'Y'
            - 'N'
        reason:
          type: string
          example: adjustment
          description: reason for adjustment
        adjustmentType:
          type: string
          example: MA
          description: type of adjustment
          enum:
            - MA
        adjustAction:
          type: string
          example: INCR
          description: >-
            speifies whether the amount should be added to or deducted from the
            current MA balance
          enum:
            - INCR
            - DECR
    BalanceTransferRef:
      type: object
      required:
        - bParty
        - transferType
        - denomination
      properties:
        bParty:
          type: string
          example: '9654523977'
          description: bparty msisdn to which the balance to be transfered
        transferType:
          type: string
          example: '1'
          description: transfer type
        denomination:
          type: string
          example: '20'
          description: amount to be transfered
    ServiceManagementForExtendSubscriberValidity:
      type: object
      required:
        - serviceId
        - validity
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        validity:
          $ref: '#/components/schemas/ExtendSubscriberValidityRef'
    ServiceManagementForUpdateSpendingLimit:
      type: object
      required:
        - serviceId
        - spendingLimit
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        spendingLimit:
          $ref: '#/components/schemas/SpendingLimitInfoRef'
    ServiceManagementForAdjustMainAccount:
      type: object
      required:
        - serviceId
        - adjustment
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        adjustment:
          $ref: '#/components/schemas/AdjustMainAccountRef'
    ServiceManagementForBalanceTransfer:
      type: object
      required:
        - serviceId
        - balanceTransfer
      properties:
        serviceId:
          type: string
          description: unique serviceId/msisdn of the subscriber
          example: '9876543212'
        balanceTransfer:
          $ref: '#/components/schemas/BalanceTransferRef'
    ExtendSubscriberValidityOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: ExtendSubscriberValidity
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForExtendSubscriberValidity'
    AdjustMainAccountOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: AdjustMainAccount
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Adjust Main Account Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForAdjustMainAccount'
    BalanceTransferOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: BalanceTransfer
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForBalanceTransfer'
    ContractRef:
      type: object
      required:
        - contractType
        - contractDesc
        - contractName
        - expiryDate
        - contractPlanId
        - linkedPlanId
        - totalContractAmount
        - contractCharges
      properties:
        contractType:
          type: string
          description: type of contract, 2 - Service contract
          example: '2'
        contractDesc:
          type: string
          description: contract description
          example: 2 yr contract
        contractName:
          type: string
          description: contract name
          example: service contract
        activationDate:
          type: string
          description: contract activation date
          example: date-time
        expiryDate:
          type: string
          description: 'expiry date of the contract '
          format: date-time
        contractPlanId:
          type: string
          description: contractPlanId
        linkedPlanId:
          type: string
          description: linkedPlanId
        totalContractAmount:
          type: string
          description: totalContractAmount
        contractCharges:
          type: array
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRef'
    FNFRef:
      type: object
      required:
        - serviceId
        - accountType
        - fnfTariffPlan
        - fnfGroupId
        - fnfGroupType
        - fnfMembers
      properties:
        serviceId:
          description: unique service identifier
          type: string
          example: '987654321'
        accountType:
          type: string
          description: type of fnf account. possible value is 'subscriber'
          example: subscriber
        fnfTariffPlan:
          type: string
          description: tariff plan id of the fnf group
          example: FnF_group_a
        fnfGroupId:
          type: string
          description: id of the fnf group
          example: group1
        fnfGroupType:
          type: string
          description: 'type of group. possible values - ''1: formal subscriber group'''
          example: '1'
        fnfMembers:
          type: array
          items:
            $ref: '#/components/schemas/FNFMembersRef'
          description: list of members to be added to this group
    FNFMembersRef:
      type: object
      required:
        - fnfMemberId
        - fnfSerialNo
        - fnfType
      properties:
        fnfMemberId:
          description: unique msisdn/sevice id of the member
          type: string
          example: '98765432321'
        fnfSerialNo:
          type: string
          description: seq number of this item in the list
          example: subscriber
        fnfType:
          type: string
          description: 'type of fnf group. possible values - ''1: formal subscriber group'' '
          example: '1'
    CreateFNFOrderRef:
      type: object
      required:
        - orderType
        - fnf
      properties:
        orderType:
          type: string
          example: CreateFnf
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a Create FNF Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        fnf:
          $ref: '#/components/schemas/FNFRef'
    AdjustAccountOrderRef:
      type: object
      required:
        - orderType
        - adjustAccount
      properties:
        orderType:
          type: string
          example: AdjustAccount
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a create adjust account order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        adjustAccount:
          $ref: '#/components/schemas/AdjustAccountRef'
    RaiseAdjustmentOrderRef:
      type: object
      required:
        - orderType
        - adjustment
      properties:
        orderType:
          type: string
          example: RaiseAdjustment
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a raise adjustment order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        adjustment:
          $ref: '#/components/schemas/RaiseAdjustmentRef'
    CreateAdjustmentOrderRef:
      type: object
      required:
        - orderType
        - adjustment
      properties:
        orderType:
          type: string
          example: CreateAdjustment
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a createAdjustment order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        adjustment:
          $ref: '#/components/schemas/CreateAdjustmentRef'
    FundTransferOrderRef:
      type: object
      required:
        - orderType
        - fundTransfer
      properties:
        orderType:
          type: string
          example: FundTransfer
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        fundTransfer:
          $ref: '#/components/schemas/FundTransferRef'
    FundTransferReversalOrderRef:
      type: object
      required:
        - orderType
        - fundTransferReversal
      properties:
        orderType:
          type: string
          example: FundTransferReversal
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        fundTransferReversal:
          $ref: '#/components/schemas/FundTransferReversalRef'
    AddFNFOrderRef:
      type: object
      required:
        - orderType
        - fnf
      properties:
        orderType:
          type: string
          example: AddFnf
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        fnf:
          $ref: '#/components/schemas/AddFNFRef'
    ChangeFNFOrderRef:
      type: object
      required:
        - orderType
        - fnf
      properties:
        orderType:
          type: string
          example: ChangeFnf
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Change FNF Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        fnf:
          $ref: '#/components/schemas/ChangeFNFRef'
    DeleteFNFOrderRef:
      type: object
      required:
        - orderType
        - fnf
      properties:
        orderType:
          type: string
          example: DeleteFnf
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates an Delete FNF Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        fnf:
          $ref: '#/components/schemas/DeleteFNFRef'
    UpdateAutoRenewalOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: StopAutoRenewal
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForStopAutoRenewalSubscription'
    UpdateSubscriptionChargeOrderRef:
      type: object
      required:
        - orderType
        - serviceManagement
      properties:
        orderType:
          type: string
          example: OverrideSubscriptionCharges
          description: unique identifier to identify the operation
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        authentication:
          $ref: '#/components/schemas/UserAuthRef'
        serviceManagement:
          $ref: '#/components/schemas/ServiceManagementForUpdateSubscription'
    ServiceManagementForStopAutoRenewalSubscription:
      type: object
      required:
        - serviceId
        - subscriptions
      properties:
        serviceId:
          type: string
          description: unique service id/msisdn
          example: '9765432112'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRefAutoRenewal'
    ServiceManagementForUpdateSubscription:
      type: object
      required:
        - serviceId
        - subscriptions
      properties:
        serviceId:
          type: string
          description: unique service id/msisdn
          example: '9765432112'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRefForUpdateSubscription'
    SubscriptionRefAutoRenewal:
      type: object
      required:
        - subscriptionId
        - planId
        - autoRenewal
      properties:
        subscriptionId:
          type: string
          description: unique subscription id
          example: '1232'
        autoRenewal:
          type: string
          description: >-
            defines the auto renewal nature of the subscription. 0 - onetime
            subscription (stop auto renewal)
          example: '0'
          enum:
            - '0'
        planId:
          type: string
          description: plan id
          example: '101'
        planName:
          type: string
          description: plan name
          example: italk100
    SubscriptionRefForUpdateSubscription:
      type: object
      required:
        - subscriptionId
        - charges
      properties:
        subscriptionId:
          type: string
          description: unique subscription id
          example: '1232'
        planId:
          type: string
          description: plan id
          example: '101'
        planName:
          type: string
          description: plan name
          example: italk100
        charges:
          type: array
          items:
            $ref: '#/components/schemas/ChargesRefForUpdateSubscriptionCharge'
          description: charges to be overridden
    ChargesRefForUpdateSubscriptionCharge:
      type: object
      required:
        - chargeId
        - amount
        - overridden
        - noOfCycles
        - overriddenCharge
        - overriddenCycle
        - overriddenKey
        - overriddenType
      properties:
        chargeId:
          type: string
          description: unique charge id
          example: '12'
        upcChargeId:
          type: string
          description: charge id defined for this entity in product catalogue
          example: '7'
        amount:
          type: string
          description: new charge amount
          example: '102'
        overridden:
          type: string
          description: ''
          example: '1'
        noOfCycles:
          type: string
          description: ''
          example: '6'
        overriddenCharge:
          type: string
          description: ''
          example: '10'
        overriddenCycle:
          type: string
          description: unique charge id
          example: '6'
        overriddenKey:
          type: string
          description: unique charge id
          example: '100'
        overriddenType:
          type: string
          description: ''
          example: F
    BookServiceFeeOrderRef:
      type: object
      required:
        - orderType
        - serviceFee
      properties:
        orderType:
          type: string
          example: BookServiceFee
          description: unique identifier to identify the operation
        comment:
          type: string
          example: Creates a createBookServiceFeeOrder Order
          description: ''
        description:
          type: string
          example: Product Order illustration sample
          description: ''
        externalId:
          type: string
          example: PO-456
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
        requestedCompletionDate:
          type: string
          format: date-time
          description: Requested delivery date from the requestor perspective
        requestedStartDate:
          type: string
          format: date-time
          description: >-
            Order fulfillment start date wished by the requestor. This is used
            when, for any reason, requestor cannot allow seller to begin to
            operationally begin the fulfillment before a date.
        serviceFee:
          type: array
          items:
            $ref: '#/components/schemas/ServiceFeeRef'
    ServiceFeeRef:
      type: object
      required:
        - serviceSeqId
        - chargeAmount
        - fromDate
        - toDate
        - chargeCode
        - feeCategory
      properties:
        serviceSeqId:
          type: string
          example: '121323'
          description: unique service identifier
        chargeAmount:
          type: string
          example: '100'
          description: charge amount
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        chargeCode:
          type: string
          description: charge code
        feeCategory:
          type: string
          description: category of service fee
    AddFNFRef:
      type: object
      required:
        - serviceId
        - fnfGroupId
        - fnfMembers
      properties:
        serviceId:
          description: unique service identifier
          type: string
          example: '987654321'
        accountType:
          type: string
          description: type of fnf account. possible value is 'subscriber'
          example: subscriber
        fnfTariffPlan:
          type: string
          description: tariff plan id of the fnf group
          example: FnF_group_a
        fnfGroupId:
          type: string
          description: id of the fnf group
          example: group1
        fnfGroupType:
          type: string
          description: 'type of group. possible values - ''1: formal subscriber group'''
          example: '1'
        fnfMembers:
          type: array
          items:
            $ref: '#/components/schemas/FNFMembersRef'
          description: list of members to be added to this group
    ChangeFNFRef:
      type: object
      required:
        - serviceId
        - fnfGroupId
        - fnfMembers
        - fnfSeqId
        - chargeForUpdate
      properties:
        serviceId:
          description: unique service identifier
          type: string
          example: '987654321'
        accountType:
          type: string
          description: type of fnf account. possible value is 'subscriber'
          example: subscriber
        fnfTariffPlan:
          type: string
          description: tariff plan id of the fnf group
          example: FnF_group_a
        fnfGroupId:
          type: string
          description: id of the fnf group
          example: group1
        fnfGroupType:
          type: string
          description: 'type of group. possible values - ''1: formal subscriber group'''
          example: '1'
        fnfSeqId:
          type: string
          description: unique seq number of the group
          example: '1'
        chargeForUpdate:
          type: string
          description: >-
            specifies if customer needs to be charged for the update or not.
            possible values - Y or N
          example: 'N'
        fnfMembers:
          type: array
          items:
            $ref: '#/components/schemas/ChangeFNFMembersRef'
          description: list of members to be modified
    DeleteFNFRef:
      type: object
      required:
        - serviceId
        - fnfGroupId
        - fnfMembers
        - fnfSeqId
        - chargeForUpdate
        - deleteAll
      properties:
        serviceId:
          description: unique service identifier
          type: string
          example: '987654321'
        accountType:
          type: string
          description: type of fnf account. possible value is 'subscriber'
          example: subscriber
        fnfTariffPlan:
          type: string
          description: tariff plan id of the fnf group
          example: FnF_group_a
        fnfGroupId:
          type: string
          description: id of the fnf group
          example: group1
        fnfGroupType:
          type: string
          description: 'type of group. possible values - ''1: formal subscriber group'''
          example: '1'
        fnfSeqId:
          type: string
          description: unique seq number of the group
          example: '1'
        chargeForUpdate:
          type: string
          description: >-
            specifies if customer needs to be charged for the update or not.
            possible values - Y or N
          example: 'N'
        deleteAll:
          type: string
          description: >-
            if this flag is Y, the all memebers will be deleted from the group.
            possible values - Y or N
          example: 'N'
        fnfMembers:
          type: array
          items:
            $ref: '#/components/schemas/FNFMembersRef'
          description: list of members to be deleted
    ChangeFNFMembersRef:
      type: object
      required:
        - oldFnfMemberId
        - newFnfMemberId
        - fnfSerialNo
        - fnfType
      properties:
        oldFnfMemberId:
          description: unique msisdn/sevice id of the member to be removed from this slot
          type: string
          example: '98765432321'
        newFnfMemberId:
          description: unique msisdn/sevice id of the member to be added to this slot
          type: string
          example: '9087654321'
        fnfSerialNo:
          type: string
          description: seq number of this item in the list
          example: subscriber
        fnfType:
          type: string
          description: 'type of fnf group. possible values - ''1: formal subscriber group'''
          example: '1'
    FetchFNFGroupRef:
      type: object
      required:
        - _metadata
        - results
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/FetchFNFRef'
    QueryPlanResponseRef:
      type: object
      required:
        - _metadata
        - results
      properties:
        _metadata:
          $ref: '#/components/schemas/QueryMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionRefQueryPlan'
    FetchFNFRef:
      type: object
      required:
        - serviceId
        - accountType
        - fnfTariffPlan
        - fnfGroupId
        - fnfGroupType
      properties:
        serviceId:
          description: unique service identifier
          type: string
          example: '987654321'
        accountType:
          type: string
          description: type of fnf account. possible value is 'subscriber'
          example: subscriber
        fnfTariffPlan:
          type: string
          description: tariff plan id of the fnf group
          example: FnF_group_a
        fnfGroupId:
          type: string
          description: id of the fnf group
          example: group1
        fnfGroupType:
          type: string
          description: 'type of group. possible values - ''1: formal subscriber group'''
          example: '1'
        fnfSeqId:
          type: string
          description: unique seq number of the group
          example: '1'
        fnfMembers:
          type: array
          items:
            $ref: '#/components/schemas/FNFMembersRef'
          description: list of members to be deleted
    AdjustAccountRef:
      type: object
      required:
        - serviceId
        - amount
        - adjustmentType
        - maExpiryFromCurrentDate
        - adjustAction
      properties:
        serviceId:
          description: unique service identifier
          type: string
          example: '987654321'
        amount:
          type: string
          description: type of fnf account. possible value is 'subscriber'
          example: subscriber
        creditExpiryAdjust:
          type: string
          description: ''
          example: '12'
        extensionRule:
          type: string
          description: extension rule
          example: '1'
        negativeCredit:
          type: string
          description: >-
            specifies if the main account balance can go negative or not.
            possible values - [Y,N]
          example: 'Y'
        reason:
          type: string
          description: reason for adjustment
          example: adjustment
        validity:
          type: string
          description: new main account validity if it need to be extended
          example: '12'
        adjustmentType:
          type: string
          description: specifies the type of adjustment. possible values - [MA]
          example: MA
        maExpiryFromCurrentDate:
          type: string
          description: >-
            specifies if main balance expiry data need to be updated or not.
            possible values - [true,false]
          example: 'true'
        adjustAction:
          type: string
          description: >-
            specifies whether amount should be added or decremented from the
            main balance. possible values - [INCR,DECR]
          example: INCR
    SkipRetryRef:
      type: object
      required:
        - orderId
        - subOrderId
        - stageId
        - action
      properties:
        orderId:
          description: unique order id
          type: string
          example: '21212987654321'
        subOrderId:
          type: string
          description: unique sub order id
          example: '11212984599956'
        stageId:
          type: string
          description: id of the stage to be retried
          example: BS_PROFILE_CREATION
        action:
          type: string
          description: action to be specified on the stage. possible vaues - [skip,retry]
          example: skip
        externalId:
          type: string
          description: external request id
          example: '1332342'
    UpdateOrderPayment:
      type: object
      required:
        - orderId
        - payment
      properties:
        orderId:
          description: unique order id
          type: string
          example: '21212987654321'
        payment:
          $ref: '#/components/schemas/OrderPaymentRef'
    LoyaltyManagementRef:
      type: object
      required:
        - customerId
        - earnType
        - quantity
      properties:
        customerId:
          description: customer service id
          type: string
          example: '5678907632'
        loyaltyId:
          description: customer service id
          type: string
          example: '21212987654321'
        earnType:
          description: Category of the earn
          type: string
          example: Topup
          enum:
            - Topup
            - Usage
            - Complaint
        quantity:
          description: The amount of loyalty units to be added or reduced
          type: string
          example: '50'
        description:
          description: A free-form description describing the loyalty earn event
          type: string
          example: test
    LoyaltyManagementForTransferLoyaltyPointsRef:
      type: object
      required:
        - customerId
        - points
        - transferType
        - bpartyNumber
      properties:
        customerId:
          description: customer service id
          type: string
          example: '9802390347'
        points:
          description: points needs to be transferred from source loyaty account
          type: string
          example: '100'
        transferType:
          description: Indicates whether this is transfer to friend or charity
          type: string
          example: friend
          enum:
            - friend
            - charity
        bpartyNumber:
          description: >-
            Mobile number of destination loyalty account to which points to be
            transfered
          type: string
          example: '9902390347'
    RaiseAdjustmentRef:
      type: object
      required:
        - adjustmentAmount
        - adjustmentType
        - adjustmentReason
        - chargeCode
        - requestDate
        - applyImmediate
        - category
        - accountId
        - approvalRequired
      properties:
        adjustmentAmount:
          description: amout to be adjusted
          type: string
          example: '100'
        adjustmentType:
          type: string
          description: type of adjustment
          example: '1'
        adjustmentReason:
          type: string
          description: reason code for raising adjustment
          example: '6'
        adjustmentReasonDesc:
          type: string
          description: detailed description of raising adjustment
          example: adjustment
        chargeCode:
          type: string
          description: >-
            identifier of the charge element to be associated with this
            adjustment
          example: '14'
        requestDate:
          type: string
          description: date at which adjustment is requested
          format: date-time
        applyImmediate:
          type: string
          description: >-
            specifies if adjustment need to be applied immediately or not.
            possible values [1,0]
          example: '0'
        category:
          type: string
          description: adjustment category
          example: '1'
        accountId:
          type: string
          description: billing account id
          example: '5008768'
        serviceId:
          type: string
          description: unique service id
          example: '90876543213'
        approvalRequired:
          type: string
          description: >-
            specified if approval is required or not for this adjustment.
            possible values [true,false]
          example: 'true'
        billFromDate:
          type: string
          description: ''
          format: date-time
        billToDate:
          type: string
          description: ''
          format: date-time
    CreateAdjustmentRef:
      type: object
      required:
        - adjustmentAmount
        - adjustmentType
        - adjustmentReason
        - adjustmentLevel
        - category
        - applyImmediate
        - accountId
        - accountSeqId
        - circleId
        - orderType
        - comments
        - entityId
      properties:
        adjustmentAmount:
          description: amout to be adjusted
          type: string
          example: '100'
        adjustmentType:
          type: string
          description: type of adjustment; 1-Credit/ 2-Debit Ajustments
          example: '1'
        adjustmentReason:
          type: string
          description: reason code for raising adjustment
          example: '6'
        adjustmentReasonDesc:
          type: string
          description: detailed description of raising adjustment
          example: adjustment
        adjustmentLevel:
          type: string
          description: 1- Account,2-Service
          example: '1'
        chargeCode:
          type: string
          description: >-
            identifier of the charge element to be associated with this
            adjustment
          example: '14'
        requestDate:
          type: string
          description: date at which adjustment is requested
          format: date-time
        applyImmediate:
          type: string
          description: >-
            specifies if adjustment need to be applied immediately or not.
            possible values [1,0]
          example: '0'
        category:
          type: string
          description: adjustment category; 1-by crm ,4-promise to pay installment
          example: '1'
        accountId:
          type: string
          description: billing account id
          example: '5008768'
        accountSeqId:
          type: string
          description: billing account sequence id
          example: '1332346546'
        serviceId:
          type: string
          description: unique service id
          example: '90876543213'
        serviceSeqId:
          type: string
          description: unique service sequence id
          example: '124354657686'
        billFromDate:
          type: string
          description: From Date
          format: dd/MM/yyyy
        billToDate:
          type: string
          description: To Date
          format: dd/MM/yyyy
        orderType:
          type: string
          description: >-
            Order Type; 1-Normal adjustments (credit/debit notes) /n 2-Waiver /n
            3-fund transfer /n 4-OCC
          example: '1'
        invoiceId:
          type: string
          description: Invoice ID
          example: '13325436546'
        circleId:
          type: string
          description: Circle ID
          example: '1'
        entityId:
          type: string
          description: Entity ID
          example: '100'
        sourceAccountId:
          type: string
          description: Source Account ID
          example: '2332534'
        comments:
          type: string
          description: comments
          example: credit adjusment
        source:
          type: string
          example: CMP
          description: source account or channel
    FundTransferRef:
      type: object
      required:
        - serviceId
        - amount
        - transferType
        - destinationServiceId
      properties:
        amount:
          description: amout to be transferred
          type: string
          example: '100'
        serviceId:
          type: string
          description: unique service id
          example: '90876543213'
        currencyCode:
          type: string
          description: currency code
          example: '1'
        comment:
          type: string
          description: comment
          example: fund transfer
        transferType:
          type: string
          description: transfer type
          example: '1'
        destinationServiceId:
          type: string
          description: destination service id
          example: '90876543214'
    FundTransferReversalRef:
      type: object
      required:
        - serviceId
        - amount
        - transferType
        - destinationServiceId
        - transferId
      properties:
        amount:
          description: amout to be transferred
          type: string
          example: '100'
        serviceId:
          type: string
          description: unique service id
          example: '90876543213'
        currencyCode:
          type: string
          description: currency code
          example: '1'
        comment:
          type: string
          description: comment
          example: fund transfer
        transferType:
          type: string
          description: transfer type
          example: '1'
        destinationServiceId:
          type: string
          description: destination service id
          example: '90876543214'
        transferId:
          type: string
          description: unique transfer id which got generated while fund transfer
          example: '10'
    StarterPackRef:
      type: object
      required:
        - serviceId
        - imsi
        - iccid
        - subscriptions
      properties:
        chargingPattern:
          type: string
          example: '1'
          description: >-
            Connection type of the service connection. 1-Postpaid, 2-Prepaid,
            3-Hybrid 
        serviceId:
          type: string
          description: unique service id /msidn
          example: '95644327891'
        imsi:
          type: string
          description: imsi number
          example: '132324244354545'
        iccid:
          type: string
          description: iccid number
          example: '1323242443545452323'
        serviceName:
          type: string
          description: service name
          example: starter pack
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/StarterPackSubscriptionRef'
        status:
          type: string
          enum:
            - '0'
            - '1'
          description: status of the service. 0 - preactive, 1 - active
          example: '0'
        expiryDate:
          type: string
          description: expiry date of the starter pack service
          format: date-time
    StarterPackSubscriptionRef:
      type: object
      required:
        - planId
        - planType
      properties:
        planId:
          description: plan id
          type: string
          example: iTalk100
        planType:
          type: string
          example: '0'
          description: 0-base plan 1- addon
          enum:
            - '0'
            - '1'
    UserAuthRef:
      type: object
      required:
        - authType
        - authId
      properties:
        authType:
          description: autheticationType
          enum:
            - Self
            - Biometric
            - None
          type: string
          example: Biometric
        authId:
          type: string
          description: authentication id
          example: '1131312'
    Error:
      required:
        - code
        - status
      type: object
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
        message:
          type: string
          description: >-
            More details and corrective actions related to the error which can
            be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
    ErrorUnProcessableEntity:
      required:
        - code
        - status
      type: object
      properties:
        code:
          type: string
          description: >-
            Application relevant detail, defined in the API or a common list.
            [601 - Invalid Profile, 602 - Invalid Service, 603 - Invalid
            Account, 604 - Plan Not Found, 605 - Plan is not Active,606 -
            Service is not in valid state,607 - Account not in valid state, 608
            - Profile not in valid state, 424 - Failed Dependency
          example: '601'
          enum:
            - '601'
            - '602'
            - '603'
            - '604'
            - '605'
            - '606'
            - '607'
            - '608'
            - '424'
        message:
          type: string
          description: >-
            More details and corrective actions related to the error which can
            be shown to a client user.
        status:
          type: string
          description: HTTP Error code extension
          example: Failure
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
    CreateContractRef:
      type: object
      required:
        - contractDesc
        - contractPlanId
        - contractName
        - contractType
        - resourceDetails
      properties:
        contractDesc:
          description: contract description
          type: string
          example: Oneplus Contract
        contractPlanId:
          type: string
          description: contract plan id
          example: '1234'
        contractName:
          type: string
          description: contract name
          example: Oneplus Contract
        contractType:
          type: string
          description: contrcat type id
          example: '3'
        resourceDetails:
          type: array
          items:
            $ref: '#/components/schemas/contractResourceRef'
          description: list of resource
    contractResourceRef:
      type: object
      required:
        - resourceSerialNumber
        - resourceName
        - resourceType
        - saleType
        - status
        - resourceStartDate
        - warrantyEndDate
      properties:
        resourceSerialNumber:
          description: resource serial numaber
          type: string
          example: '5834534858375'
        resourceName:
          type: string
          description: resource name
          example: Oneplus
        resourceType:
          type: string
          description: Resource type
          example: Phone
        saleType:
          description: sale type
          type: string
          example: '1'
        status:
          type: string
          description: status of the resource
          example: '1'
        resourceStartDate:
          type: string
          description: resource start date
          example: '2021-06-01T13:19:07.000Z'
        warrantyEndDate:
          type: string
          description: resource warranty end date
          example: '2021-12-08T13:19:07.000Z'
    serviceManagementCancelContract:
      type: object
      required:
        - serviceId
        - contract
      properties:
        serviceId:
          type: string
          description: the serviceId/msisdn for which contract to be created
          example: '9876543212'
        contract:
          $ref: '#/components/schemas/CancelContractRef'
    CancelContractRef:
      type: object
      required:
        - contractId
      properties:
        contractId:
          description: contract id
          type: string
          example: '1'
    QueryDownlaodOrderResponse:
      required:
        - _metadata
        - results
        - recordsTotal
        - recordsFiltered
      type: object
      properties:
        recordsTotal:
          description: total records
          type: string
          example: '14413'
        recordsFiltered:
          description: records filtered
          type: string
          example: '10'
        _metadata:
          $ref: '#/components/schemas/QueryDownloadMetaDataRef'
        results:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/QueryDownloadOrderRef'
      description: >-
        An identified part of the order. A product order is decomposed into one
        or more order items.
    QueryDownloadMetaDataRef:
      type: object
      required:
        - hasNext
        - count
      properties:
        hasNext:
          type: boolean
          description: Application relevant detail, defined in the API or a common list.
        count:
          type: string
          description: Actual number of items returned in the response body
          example: 1
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
    QueryDownloadOrderRef:
      required:
        - downloadId
        - status
        - createdDate
        - lastModifiedDate
        - fileName
      type: object
      properties:
        downloadId:
          type: string
          description: ID created on repository side (OM system)
          example: 1322233
        status:
          type: string
          description: Hyperlink to access the order
          example: Completed
        createdDate:
          type: string
          description: >-
            Date when the order is cancelled. This is used when order is
            cancelled. 
          format: date-time
        lastModifiedDate:
          type: string
          description: Description of the product order
          format: date-time
        fileName:
          type: string
          description: >-
            ID given by the consumer and only understandable by him (to
            facilitate his searches afterwards)
          example: D:\ReportFiles\DownloadReportDetails_1046770238001770496.csv
      description: >-
        A Product Order is a type of order which  can  be used to place an order
        between a customer and a service provider or between a service provider
        and a partner and vice versa,