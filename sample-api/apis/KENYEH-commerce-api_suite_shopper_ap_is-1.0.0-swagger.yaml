---
openapi: "3.0.0"
info:
  title: "Commerce API suite - Shopper APIs"
  description: "Explore the resources for the Commerce API suite to optimize your\
    \ international global ecommerce business.\n\nThe Commerce API is a RESTful API.\
    \ That means Digital River designed this API to allow you to retrieve, create,\
    \ update, and delete objects with the HTTP verbs GET, POST, and DELETE.\n\nThe\
    \ Commerce API speaks exclusively in JSON. You should always set the content-type\
    \ header to application/json to ensure the API accepts and processes your requests.\n\
    \nAll Commerce API requests are sent to https://<span></span>api.digitalriver.com.\n\
    \n# Explore Digital River Products\n<table>\n<tr><td><b>Product<b></td>\n    <td><b>Description</b></td>\n\
    </tr>\n<tr>\n    <td><a href=\"https://docs.digitalriver.com/commerce-api/\">Commerce\
    \ API</a></td>\n    <td>Explore Digital River&apos;s API suite for payments and\
    \ risk.</td>\n</tr>\n<tr>\n    <td><a href=\"https://docs.digitalriver.com/commerce-api/payment-integrations-1\"\
    >Payment Integrations</a></td>\n    <td>Explore options to enable payment methods.</td>\n\
    </tr>\n</table>\n\n<a name=\"authentication\"></a>\n# Authentication\n\nThe Commerce\
    \ API authenticates requests using API keys. Contact your Account Manager to obtain\
    \ your API keys.\n<br>\n<br>\n**Important**&colon; Limit access to your API keys\
    \ and secret keys to those who need them. Do not store them in a version control\
    \ system.\n<br>\n<br>\nYou must send all API requests over HTTPS. Calls sent over\
    \ plain HTTP will fail. Sending an API request without authentication automatically\
    \ fails.\n\n<a name=\"obtaining-credentials\"></a>\n## Obtaining Commerce API\
    \ keys\n\nContact your Account Manager to obtain and register your [API keys](#api-keys).\n\
    \n<a name=\"api-keys\"></a>\n# API Keys\n\nDigital River uses your account&apos;s\
    \ API keys to authenticate your API requests. If you do not include your key when\
    \ you send an API request or use an incorrect or outdated key, Digital River returns\
    \ an error.\n\nYour account provides separate keys for testing and for running\
    \ live transactions. You can use these keys when sending API requests in either\
    \ test or live mode. Resources in one mode cannot change resources in another\
    \ mode.\n\nThere are two types of API keys&colon; public and secret.\n\n* **Public\
    \ API keys**–Use these keys to identify your account with Digital River. You can\
    \ use them with your [DigitalRiver.js](https://developers.digitalriver.com/digitalriver-js/)\
    \ JavaScript code. Public keys can only create sources.\n\n* **Private API keys**–\
    Use your account&apos;s private API key when you want to send an API request to\
    \ Digital River without restriction. Keep these keys confidential and only store\
    \ them on your servers.\n\n# Webhooks\nWebhooks use standard web technology to\
    \ notify you when an event has occurred in [Global Commerce](https://gc.digitalriver.com/gc/ent/login.do).\
    \ Webhooks are push notifications or event listeners. Webhooks are outbound messages\
    \ from Global Commerce, as opposed to our APIs, which are inbound messages you\
    \ send to Global Commerce. See [Webhooks](https://docs.digitalriver.com/commerce-api/webhooks)\
    \ for more information.\n\n# Pagination\nAll API resources that return lists support\
    \ bulk fetches. For example, you can use the `pageNumber` and `pageSize` parameters\
    \ to the size of a page and the number of pages to return in a paginated response.\
    \ By default, the response returns the first page unless otherwise specified.\
    \ The following table describes optional paging parameters&colon;\n\n<table>\n\
    <tr>\n    <td><b>Parameter</b></td>\n    <td><b>Description</b></td>\n</tr>\n\
    <tr>\n    <td>pageNumber</td>\n    <td>The number indicating the page to return\
    \ in a paginated response. Default&colon; 1 (first page).</td>\n</tr>\n<tr>\n\
    \    <td>pageSize</td>\n    <td>The number of items to include on each page of\
    \ a paginated response. Default&colon; 25. </td>\n</tr>\n</table>\n\n<a name=\"\
    errors\"></a>\n# Errors\n\nThe Commerce API uses HTTP response status codes. These\
    \ codes indicate whether an API request succeeded or failed. HTTP status codes\
    \ group responses into the following classes&colon;\n\n* The `2xx` range indicates\
    \ success.\n\n* The `4xx` range indicates an error that failed based on the provided\
    \ information provided (for example, you omitted a parameter or a charge failed).\n\
    \n* The `5xx` range indicates an error with Digital River&apos;s servers.\n\n\
    Some errors `4xx` errors include an [error code](error-codes. The error code is\
    \ a short string with a brief explanation.\n\n## Error format\n\nDigital River\
    \ uses the following format for errors&colon;\n\n    \"errors\": {\n      \"error\"\
    : [\n        {\n          \"relation\": \"https://api.digitalriver.com/v1/shoppers/SubmitCartResource\"\
    ,\n          \"code\": \"{error-code}\",\n          \"subcode\": \"{error-subcode}\"\
    ,\n          \"description\": \"{error-description}\"\n        }\n      ]\n  \
    \  }\n\n## Credit card error and declined messages\n\nIf it's a transaction error\
    \ using a credit card saved in payment source,\nthe error may contain additional\
    \ information as shown in the following declined message (`declinedMessage`)\n\
    example:\n\n    \"errors\": {\n        \"error\": [\n            {\n         \
    \       \"relation\": \"https://developers.digitalriver.com/v1/shoppers/SubmitCartResource\"\
    ,\n                \"code\": \"declined\",\n                \"subcode\": \"fraud_block\"\
    ,\n                \"description\": \"The transaction has been identified by Digital\
    \ River as fraudulent.\",\n                \"declinedMessage\": {\n          \
    \          \"merchantDeclinedType\": \"Hard\",\n                    \"customerDeclinedType\"\
    : \"Hard\",\n                    \"code\": \"7011\"\n                }\n     \
    \       }\n        ]\n    }\n\nError codes for credit card transactions:\n\n<table>\n\
    \         <tr>\n            <td><b>Code</b></td><td><b>Subcode</b></td><td><b>Description</b></td>\n\
    \         </tr>\n         <tr>\n            <td>declined</td><td>account_frozen</td><td>The\
    \ account is frozen.</td>\n         </tr>\n         <tr>\n            <td></td><td>account_closed</td><td>\
    \ The card account is closed.</td>\n         </tr>\n         <tr>\n          \
    \  <td></td><td>authentication_ required</td><td> The transaction requires authentication.</td>\n\
    \         </tr>\n         <tr>\n            <td></td><td>blacklisted_card</td><td>\
    \ The credit card is blacklisted.</td>\n        </tr>\n        <tr>\n        \
    \     <td></td><td>card_limit_exceeded</td><td> The transaction exceeds the card\
    \ limit amount.</td>\n        </tr>\n        <tr>\n            <td></td><td>card_not_active</td><td>\
    \ The card is not active yet.</td>\n        </tr>\n        <tr>\n            <td></td><td>card_type_block</td><td>\
    \ The merchant has blocked this card type.</td>\n        </tr>\n        <tr>\n\
    \             <td></td><td>card_velocity_exceeded</td><td> The transaction exceeds\
    \ the card velocity amount.</td>\n        </tr>\n        <tr>\n             <td></td><td>declined</td><td>The\
    \ card has been declined for an unknown reason.</td>\n        </tr>\n        <tr>\n\
    \             <td></td><td>declined_can_retry</td><td> The card has been declined\
    \ for an unknown reason.</td>\n        </tr>\n        <tr>\n             <td></td><td>do_not_honor</td><td>\
    \ The card issuing bank has declined this payment.</td>\n        </tr>\n     \
    \   <tr>\n            <td></td><td>duplicate_transaction</td><td> The transaction\
    \ is a duplicate.</td>\n        </tr>\n        <tr>\n            <td></td><td>fraud</td><td>\
    \ The transaction has been identified by the issuing bank as fraudulent.</td>\n\
    \        </tr>\n        <tr>\n            <td></td><td>fraud</td><td> The transaction\
    \ has been identified as fraudulent.</td>\n        </tr>\n        <tr>\n     \
    \       <td></td><td>fraud_block</td><td> The transaction has been identified\
    \ by Digital River as fraudulent.</td>\n        </tr>\n        <tr>\n        \
    \    <td></td><td>illegal_action</td><td> The transaction has been identified\
    \ as illegal.</td>\n        </tr>\n        <tr>\n            <td></td><td>insufficient_funds</td><td>\
    \ The card has insufficient funds to complete the purchase.</td>\n        </tr>\n\
    \        <tr>\n            <td></td><td>invalid_amount</td><td> The amount is\
    \ not accepted by the card network.</td>\n        </tr>\n        <tr>\n      \
    \      <td></td><td>invalid_currency</td><td> This currency is not supported.</td>\n\
    \        </tr>\n        <tr>\n            <td></td><td>invalid_field_data</td><td>\
    \ The transaction contains invalid data.</td>\n        </tr>\n        <tr>\n \
    \           <td></td><td>invalid_merchant</td><td> The merchant is invalid for\
    \ type of transaction.</td>\n        </tr>\n        <tr>\n            <td></td><td>invalid_payment_method</td><td>\
    \ The payment method used is invalid.</td>\n        </tr>\n        <tr>\n    \
    \        <td></td><td>invalid_security_field</td><td> The transaction contains\
    \ invalid data.</td>\n        </tr>\n        <tr>\n             <td></td><td>invalid_transaction_type</td><td>\
    \ The transaction type is invalid.</td>\n        </tr>\n        <tr>\n       \
    \      <td></td><td>issuer_unavailable</td><td> The card does not exist with the\
    \ issuer.</td>\n        </tr>\n        <tr>\n             <td></td><td>limit_exceeded</td><td>\
    \ The transaction amount exceeds your assigned limit.</td>\n        </tr>\n  \
    \      <tr>\n             <td></td><td>lost_stolen_card</td><td> The issuing bank\
    \ has marked this card lost or stolen.</td>\n        </tr>\n        <tr>\n   \
    \          <td></td><td>mid_limit_exceeded</td><td> The transaction amount exceeds\
    \ the limit assigned for this MID.</td>\n        </tr>\n        <tr>\n       \
    \     <td></td><td>new_card_issued</td><td> New account information is available.</td>\n\
    \        </tr>\n        <tr>\n            <td></td><td>no_response</td><td> The\
    \ payment processor did not respond.</td>\n        </tr>\n        <tr>\n     \
    \       <td></td><td>pin_try_exceeded</td><td> The bank's allowable number of\
    \ PIN tries has been exceeded.</td>\n        </tr>\n        <tr>\n           \
    \ <td></td><td>restricted_card</td><td> The use of this card has been restricted\
    \ by the card network.</td>\n        </tr>\n        <tr>\n            <td></td><td>sca_not_completed</td><td>\
    \ The payment authorization was not initiated as the shopper did not successfully\
    \ complete authentication process.</td>\n        </tr>\n        <tr>\n       \
    \     <td></td><td>stop_recurring</td><td> Stop all billing as this account is\
    \ closed.  </td>\n        </tr>\n        <tr>\n            <td></td><td>suspected_fraud</td><td>\
    \ The issuer has identitied this transaction potentially as frauduelent.</td>\n\
    \        </tr>\n        <tr>\n            <td></td><td>unidentified_error</td><td>\
    \ The card has been declined for an unknown reason.</td>\n        </tr>\n    \
    \    <tr>\n            <td>declined - contact bank</td><td>voice_authorization_required</td><td>\
    \ Voice authorization is required by the issuer.</td>\n        </tr>\n       \
    \ <tr>\n            <td>invalid</td><td>issuer_invalid_card</td><td> The card\
    \ does not exist with the issuer.</td>\n        </tr>\n        <tr>\n        \
    \    <td>invalid card</td><td>card_expired</td><td> The card is expired.</td>\n\
    \        </tr>\n        <tr>\n            <td></td><td>invalid_address</td><td>\
    \ The address does not match the card network's records.</td>\n        </tr>\n\
    \        <tr>\n            <td></td><td>invalid_card_number</td><td> The card\
    \ number entered is invalid.</td>\n        </tr>\n        <tr>\n            <td></td><td>invalid_card_bin\
    \ </td><td> The card bin is invalid.</td>\n        </tr>\n        <tr>\n     \
    \       <td></td><td>invalid_expiration_date   </td><td> The card is expired or\
    \ the expiration date is invalid.</td>\n        </tr>\n        <tr>\n        \
    \    <td></td><td>invalid_pin</td><td> The PIN provided is invalid or incorrect.</td>\n\
    \        </tr>\n        <tr>\n            <td></td><td>invalid_security_code</td><td>\
    \ The security code provided is invalid or incorrect.</td>\n        </tr>\n  \
    \      <tr>\n            <td></td><td>issuer_not_found</td><td> The card issuer\
    \ does not exist.</td>\n        </tr>\n</table>\n\nA declined message (`declinedMessage`)\
    \ includes the following information:\n\n   <table>\n       <tr>\n           <td><b>Declined\
    \ message</b></td>\n           <td><b>Description</b></td>\n       </tr>\n   \
    \    <tr>\n           <td>code</td>\n           <td>This code helps to categorize\
    \ failure reasons that look different but point to the same issue.</td>\n    \
    \   </tr>\n       <tr>\n           <td>merchantDeclinedType</td>\n           <td>This\
    \ field indicates the authentication decline type of transaction initiated by\
    \ the merchant.</td>\n       </tr>\n       <tr>\n           <td>customerDeclinedType</td>\n\
    \           <td>This field indicates the authentication decline type of transaction\
    \ initiated by the shopper.</td>\n       </tr>\n   </table>\n\n## Error codes\n\
    \nThe following topics contain a list of API error codes.\n\n### 400 Bad Request\n\
    \n* `dr_limited_token_invalid`<br>\nThe limited token is invalid, expired, or\
    \ revoked. Provide a valid token and try again.\n* `invalid-keyword-expression`<br>\n\
    Invalid keyword expression [expression entered]. Provide a valid keyword expression\
    \ and try again.\n* `invalid-request`<br>\nCannot validate the request for one\
    \ of the following reasons&colon;\n  * A comment is missing. Provide the comment\
    \ and try again.\n  * Invalid page size. Must be positive, non-zero, and less\
    \ than 100000.\n  * Invalid payment method type for this request. Provide a valid\
    \ payment method type and try again.\n  * The Return object is missing. Provide\
    \ the Return object and try again.\n  * The return reason is missing. Provide\
    \ the reason for the return and try again.\n  * Line items to return are missing.\
    \ Provide the line items to return and try again.\n  * Line item quantity IDs\
    \ are missing. Provide the line item quantity IDs and try again.\n  * The specified\
    \ quantity to return is invalid. The number must be greater than zero and less\
    \ than or equal to the number of items eligible for return. Specify a valid quantity\
    \ to return and try again.\n  * The system cannot parse the request because the\
    \ request is not valid. Provide a valid request and try again.\n  * The line item\
    \ ID is missing. Provide the line item DI and try again.\n* `INVALID_RETURN_REASON`<br>\n\
    The Return reason is invalid. Provide a valid return reason and try again.\n*\
    \ `LINE_ITEM_CANNOT_BE_RESOLVED`<br>\nCannot resolve line item for the specified\
    \ line item ID. Verify the specified line item ID is correct and try again.\n\
    * `LINE_ITEM_EXPIRATION_DATE_EXCEEDS`<br>\nThe line item exceeds the return window\
    \ for the specified line item ID. The specified line item cannot be returned through\
    \ the self-service [Returns API](https://www.digitalriver.com/docs/commerce-api-reference/#tag/Returns).\n\
    * `LINE_ITEM_CANNOT_BE_RESOLVED`<br>\nThe line item had a problem while fetching\
    \ the expiration date for the specified line item ID.\n* `LINE_ITEM_HAS_LINE_LEVEL_SATISFACTION_REFUND`<br>\n\
    The line item has a line item level satisfaction refund for the specified line\
    \ item ID. The line item is not eligible for a self-service return.\n* `LINE_ITEM_IS_LINKED_TO_SUBSCRIPTION`<br>\n\
    The line item is linked to a subscription. Cannot process the return for non-physical\
    \ items.\n* `LINE_ITEM_IS_NOT_PHYSICAL`<br>\nThe specified line item ID is not\
    \ physical. Cannot process the return for items that are not physical.\n* `LINE_ITEM_QTY_IDS_ARE_INVALID`<br>\n\
    The specified line item quantity IDs are not associated with the specified line\
    \ item. Specify the correct line item quantity IDs for the specified line item\
    \ and try again.\n*`LINE_ITEM_QTY_IDS_MISSING_FOR_PARTIAL_RETURN`<br>\nThe line\
    \ item quantity IDs for this partial return are missing. Specify the line item\
    \ quantity IDs to include in the specified partial return and try again.\n* `LINE_ITEM_QTY_IDS_NOT_ELIGIBLE_FOR_RETURN`<br>\n\
    Specified line item quantity IDs are not eligible for return for the specified\
    \ line item ID. Verify the specified line item quantity IDS are correct and try\
    \ again if they are not correct.\n* `LINE_ITEM_QUANTITY_TO_RETURN_IS_MORE_THAN_ALLOWED`<br>\n\
    Quantity of line items to return is greater than the expected return quantity\
    \ for the specified line item ID. Specify a valid quantity of line items to return\
    \ for the specified line item ID and try again.\n* `NO_LINE_ITEM_PRESENT_IN_REQUISITION`<br>\n\
    The request contains no line items. The request must contain at least one line\
    \ item. Include at least one line item in the request and try again.\n* `NO_RETURN_REASON_CONFIGURED`<br>\n\
    Return reasons for the specified order ID are missing. Provide the reasons for\
    \ the returns and try again.\n* `NULL_RETURN_REQUEST`<br>\nThe return request\
    \ cannot be null. Ensure the request is not null and try again.\n* `ORDERID_CAN_NOT_BE_RESOLVED`<br>\n\
    Cannot resolve the specified order ID for the order. Provide a valid order ID\
    \ for the order and try again.\n* `PARTIAL_PRODUCT_COMBINATION_RETURN`<br>\nThe\
    \ shopper wants to return part of a product combination. All components within\
    \ the product combination must be returned. Return all line items associated with\
    \ the product combination for specified requisition ID.\n* `SITE_DOESNOT_ACCEPT_RETURN`<br>\n\
    The site does not accept returns. To enable returns for a site, contact your Digital\
    \ River Representative.\n* `REQUISITION_HAS_ORDER_LEVEL_SATISFACTION_REFUND`<br>\n\
    The order has an order level satisfaction refund for a specified order ID. If\
    \ an order has a satisfaction refund applied against it, the line items within\
    \ that order are not eligible for return.\n* `REQUISITION_NOT_ELIGIBLE_FOR_RETURN`<br>\n\
    The specified order ID is not eligible for return. The requisition is in a state\
    \ that does not allow a return to occur.\n* `RETURN_PROCESSING_ERROR`<br>\nAn\
    \ error occurred while processing the return for the specified order. Ensure the\
    \ information is correct and try again.\n* `RETURN_QUANTITY_CAN_NOT_LESS_THAN_ONE`<br>\n\
    Line item return quantity must be greater than 0 for the specified line item.\
    \ Specify a number greater than zero and less than or equal to the number of eligible\
    \ items for the line item return quantity and try again.\n* `UNABLE_TO_RESOLVE_SITE`<br>\n\
    Cannot resolve the specified order ID for the order. Specify a valid site for\
    \ the specified order ID.\n* `validation-failure`<br>Cannot validate the request\
    \ for one of the following reasons&colon;\n  * The site does not accept the return.\n\
    \  * The order is not in a returnable state.\n  * The return window expired for\
    \ the specified product.\n  * The requested return quantity is greater than the\
    \ eligible quantity for the line item.\n  * Cannot return the specified line item\
    \ through the self-service Returns API.</td>\n\n### 401 Unauthorized\n\n* `invalid_client`<br>\n\
    The provided client is invalid. Provide the correct client information and try\
    \ again.\n* `invalid_request`<br>\nThe required parameter is missing or empty.\
    \ Provide the missing parameter and try again.\n* `invalid_token`<br>\nInvalid\
    \ token for the Shopper Session. The token is no longer valid and must be refreshed\
    \ to continue making API calls. This error occurs when there is a bad Dispatch\
    \ token or Global Commerce User API token. To resolve this error, issue an API\
    \ call to identify where the token originated and when it expired, for example&colon;\n\
    \n      GET /oauth20/access-tokens?token=your_access_token HTTP/1.1\n      Host&colon;\
    \ api.digitalriver.com\n\n   Where `your_access_token` is a placeholder for the\
    \ actual token.\n\n  The response shows you where the token originated in the\
    \ `domain` field and when it expired in the `expiresIn` field.\n\n### 403 Forbidden\
    \ forbidden\n* `forbidden`<br>\nCannot complete the request, as the call is not\
    \ permitted.\n\n### 404 Not Found\n* `resource-not-found`<br>\nCould not find\
    \ a [resourceName] resource with an internal ID [resourceId].\n\n\n### 405 Method\
    \ Not Allowed\n* `method-not-allowed`<br>\nOAuth API—Request used incorrect HTTP\
    \ method.\n<br>\nShopper API—The method is not allowed.\n\n### 409 Conflict\n\
    * `[resource]-already-exists`<br>\nTried to create a [resourceName] with an ID\
    \ [resourceId], and that resource already exists.\n* `apply-payment-failure`<br>\n\
    Cannot apply a payment method to an empty cart or failed to apply the requested\
    \ payment method to the cart.\n* `apply-shopper-failure`<br>\nCannot apply the\
    \ shopper account information to cart.\n* `cart-fraud-failure`<br>\nCannot submit\
    \ the order due to fraud validation failure. </td>\n* `cart-payment-failure`<br>\n\
    Cannot submit the order due to payment processing failure.\n* `credit-card-declined`<br>\n\
    The credit card payment was declined.\n* `credit-floor-exceeded`<br>\nThe total\
    \ amount for the order does not exceed the credit card minimum.\n* `credit-card-expired`<br>\n\
    The credit card used for payment has expired.\n* `coupon-code-already-used`<br>\n\
    The shopper previously entered this coupon code. The shopper cannot use this coupon\
    \ code again.\n* `EMPTY_LINE_ITEM_ID`<br>\nThe line item ID is missing. Provide\
    \ the line item ID and try again.\n* `EMPTY_LINE_ITEM_ID`<br>\nThe line order\
    \ ID is missing. Provide the order ID and try again.\n* `EMPTY_RETURN_REASON`<br>\n\
    The line return reason is missing. Provide the reason for the return and try again.\n\
    * `field-too-long`<br>\nThe field [fieldName] is longer than the maximum length\
    \ [fieldMaxLength] allowed.\n* `invalid-bill-to-country`<br>\nThe country's billing\
    \ or shipping address for the request is invalid.\n* `invalid-coupon`<br>\nThe\
    \ coupon code is invalid. The shopper cannot use the coupon code.\n* `invalid-credit-card-expiration-date`<br>\n\
    The credit card expiration date specified for the cart is invalid.\n* `invalid-credit-card-number`<br>\n\
    The credit card number specified for the cart is invalid.\n* `invalid-currency-code`<br>\n\
    Requested currency is not supported.\n* `invalid-keyword-expression`<br>\nInvalid\
    \ keyword expression&colon; [expression entered]\n* `invalid-locale`<br>\nRequested\
    \ locale is not valid.</td>\n* `invalid-offer-id`<br>\nThe offer ID for the request\
    \ is invalid.\n* `invalid-payment-failure`<br>\nCannot process the cart  because\
    \ the payment methods were not set.\n* `invalid-payment-method`<br>\nThe cart\
    \ does not support the specified payment method.\n* `invalid-request`<br>\nRequest\
    \ missing required product identifier.\n* `invalid-ship-to-country`<br>\nShipping\
    \ Address country is restricted for request.\n* `invalid-token`<br>\n The request\
    \ contains an invalid token.\n* `inventory-unavailable-error`<br>\nInventory unavailable\
    \ for the product specified in the request.\n* `ip-address-restriction-error`<br>\n\
    The country associated with the IP address for the request is restricted.\n* `inventory-status-failure`<br>\n\
    Inventory unavailable for one or more of the products in the cart.\n* `line-item-creation-failure`<br>\n\
    Cannot create line Item for the specified product.\n* `line-item-update-failure`<br>\n\
    Cannot update the line item for the request.\n* `offer-already-used`<br>\nThe\
    \ offer is already in use.\n* `offer-not-active`<br>\nThe offer for the request\
    \ is not active.\n* `offer-not-applicable`<br>\nCannot apply the offer ID for\
    \ the request to the cart.\n* `offer-not-deployed`<br>\nCannot use an undeployed\
    \ coupon code.\n* offer-unavailable<br>\nThe offer ID for the request is not available\
    \ for the cart.\n* `offer-usage-limit-exceeded`<br>\nExceeded the offer usage\
    \ limit. Shoppers cannot use the coupon code.\n* `operation-failed`<br>\nCannot\
    \ complete the operation.\n* `over-private-store-shopper-restriction`<br>\nCannot\
    \ add the product to the cart. The shopper requested more than the maximum purchasable\
    \ quantity [x], or the remaining purchasable quantity [y] is less than the quantity\
    \ they requested.\n* `payment-post-auth-failure`<br>\nThe order could not be submitted\
    \ due to payment processing failure\n* `paypal-failure`<br>\nCannot process the\
    \ cart because PayPal returned a failure or declined status.\n* `paypal-lookup-failure`<br>\n\
    Cannot process the cart due to PayPal lookup processing failure.\n* `private-store-remaining-quantity-under-line-item-restriction`<br>\n\
    Cannot add the product to the cart. The shopper requested more than the Remaining\
    \ purchasable quantity [x] or less than the Minimum purchasable quantity [y].\n\
    * `rate-limit-quota-exceeded`<br>\nExceeded the quota for the allowed number of\
    \ API requests.\n* `restricted-bill-to-country`<br>\nBilling Address country for\
    \ the request is restricted.\n* `restricted-ship-to-country`<br>\nShipping Address\
    \ country for the request is restricted.\n* `shopper-usage-limit-exceeded`<br>\n\
    The shopper exceeded the offer usage limit. The shopper cannot use the coupon\
    \ code.\n* `submit-cart-failed`<br>\nThe cart is not complete, so the shopper\
    \ could not submit the cart.\n* `under-private-store-line-item-restriction`<br>\n\
    Minimum purchasable quantity[x]; Cannot add the product to the cart.\n\n### 500\
    \ Internal Server Error\n* `system-error`<br>\nAn unexpected system error occurred.\n\
    \n* `internal-payment-error`<br>\nAn unexpected internal payment error occurred.\n\
    \n## New Error codes\n\nThe following topics contain a list of API error codes.\n\
    \n### 400 Bad Request\n* #### invalid-request\nCannot validate the request for\
    \ one of the following reasons&colon;\n    * A comment is missing. Provide the\
    \ comment and try again.\n    * Invalid page size. Must be positive, non-zero,\
    \ and less than 100000.\n    * Invalid payment method type for this request. Provide\
    \ a valid payment method type and try again.\n    * The Return object is missing.\
    \ Provide the Return object and try again.\n    * The return reason is missing.\
    \ Provide the reason for the return and try again.\n    * The line items to return\
    \ are missing. Provide the line items to return and try again.\n    * The line\
    \ item quantity IDs are missing. Provide the line item quantity IDs and try again.\n\
    \    * The specified quantity to return is invalid. The number must be greater\
    \ than zero and less than or equal to the number of items eligible for return.\
    \ Specify a valid quantity to return and try again.\n    * The system cannot parse\
    \ the request because the request is not valid. Provide a valid request and try\
    \ again.\n    * The line item ID is missing. Provide the line item DI and try\
    \ again.\n    * The value in the input field contains sensitive data (for example,\
    \ a credit card number). The subcode for this error is sensitive-data-detected.\
    \ Remove the sensitive data and try again.\n\n  The possible error descriptions\
    \ are as follows:\n\n  * `The request was invalid and could not be parsed by the\
    \ system.`<br>\n  The request format was invalid.\n\n  * `Invalid or Missing Request\
    \ Content`<br>\n  There is a missing parameter or property in the request.\n\n\
    \  * `The specified subscription information is invalid and cannot be parsed.`<br>\n\
    \  The `subscriptionInfo` block in the `lineItem` block is invalid.\n\n  * `terms\
    \ cannot exceed a length of 4000 characters.`<br>\n  The length of `terms` in\
    \ the `subscriptionInfo` block cannot excced 4000 characters.\n\n  * `The specified\
    \ chargeType is invalid, the accepted values are customer_initiated, merchant_initiated\
    \ and moto.`<br>\n  The `chargeType` attribute is invalid. The accepted values\
    \ are `customer_initiated`, `merchant_initiated`, and `moto`.\n\n  * `perpetualUnitPrice\
    \ must be provided for product id: {productId}`<br>\n  The `perpetualUnitPrice`\
    \ is required in the request.\n\n  * `{property_name} cannot exceed a length of\
    \ {length_contraint} characters.`<br>\n  The property name cannot exceed the maximum\
    \ length.\n\n  * `The quantity must be a valid integer value.`<br>\n  The quantity\
    \ is not a valid integer value.\n\n  * `Use either salePrice or itemPrice.`<br>\n\
    \  Either the `salPrice` or `itemPrice` is required.\n\n  * `Overriding item-price\
    \ is not enabled.`<br>\n  Overriding the item price is not allowed for this site.\n\
    \n  * `The price override currency must be identical to the user session currency.`<br>\n\
    \  The price override currency must be the same as the user session `currency`.\n\
    \n  * `The specified custom attributes are invalid and cannot be parsed.`<br>\n\
    \  The format of the custom attributes is invalid.\n\n  * `The subscription override\
    \ expiration date is not valid.`<br>\n  The `expirationDate` format is invalid.\
    \ The format should be `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`.\n\n  * `The subscription\
    \ override activation date is not valid.`<br>\n  The `activationDate` format is\
    \ invalid. The format should be `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`.\n\n  * `The subscription\
    \ override perpetual unit price is not valid`<br>\n  The field `perpetualUnitPrice`\
    \ should contain both `currencyCode` and `amount`.\n\n  * `Perpetual unit price\
    \ currency [{perpetual unit price currency}] is different from user currency [{user\
    \ currency}]`<br>\n  The perpetual unit price currency cannot be different from\
    \ the user's currency.\n\n  * `Perpetual unit price cannot be less than or equal\
    \ to 0`<br>\n  The perpetual unit price cannot be less than or equal to 0.\n\n\
    \  * `Subscription expiration date [{expiration date}] should be 24 hours later\
    \ than order submission date.`<br>\n  The expiration date of the subscription\
    \ should be 24 hours later than the order submission date.\n\n  * `Subscription\
    \ expiration date [{expiration date}] should be later than subscription activation\
    \ date [{activation date}].`<br>\n  The expiration date of the subscription should\
    \ be later than the activation date of the subscription.\n\n  * `Attribute name\
    \ or the value is missing.`<br>\n  Some attribute names or values are missing.\n\
    \n  * `Invalid input value for {field name}.`<br>\n  The input value for the specified\
    \ field is invalid because it contains sensitive data.\n\n* #### password-failure\n\
    The provided password failed authentication for one of the following reasons.\n\
    \n  The possible error descriptions are as follows:\n\n  * `Password must be between\
    \ 8 - 32 characters.`<br>\n  The length of the password must between 8 - 32 characters.\n\
    \n  * `Password must include three of the following: Upper case letter, lower\
    \ case letter, numbers and the special characters: !@#$%^*~:;&><[]{}|-_+=?`<br>\n\
    \  Provided password shall follow the password rule.\n\n  * `Password must be\
    \ alpha-numeric.`<br>\n  Provided password shall follow the password rule.\n\n\
    ### 401 Unauthorized\n* #### invalid_token\nInvalid token for the Shopper Session.\
    \ The token is no longer valid and must be refreshed to continue making API calls.\
    \ This error occurs when there is a bad Dispatch token or Global Commerce User\
    \ API token. To resolve this error, issue an API call to identify where the token\
    \ originated and when it expired, for example&colon;\n\n          GET /oauth20/access-tokens?token=your_access_token\
    \ HTTP/1.1\n          Host&colon; api.digitalriver.com\n\n   Where `your_access_token`\
    \ is a placeholder for the actual token.\n\n   The response shows you where the\
    \ token originated in the `domain` field and when it expired in the `expiresIn`\
    \ field.\n\n   The possible error descriptions are as follows:\n\n  * `Invalid\
    \ token for specified shopper`<br>\n  The provided token is invalid for the specified\
    \ shopper.\n\n  * `Session expired`<br>\n  The shopper session is expired. Try\
    \ refreshing the token.\n\n  * `Request Site ID does not match Token Site ID`<br>\n\
    \  The value of Header `siteId` does not match the site ID in the token.\n\n \
    \ * `Invalid Token for Shopper Session`<br>\n  The provided token is invalid.\n\
    \n### 404 Not Found\n* #### resource-not-found\nCould not find a [resourceName]\
    \ resource with an internal ID [resourceId].\n\n   The possible error descriptions\
    \ are as follows:\n\n  * `Invalid site for specified company`<br>\n  The company\
    \ of the site with the provided header `siteId` and the one with the provided\
    \ header `companyId` are different,\n  but they should be the same one.\n\n  *\
    \ `Could not find a Line Item with an id of {line item id}`<br>\n  Could not find\
    \ the line item for the provided ID.\n\n  * `Could not find an Order with an id\
    \ of {orderId}`<br>\n  Could not find the order for the provided ID.\n\n* ####\
    \ no-offer-identifier\nThe system cannot get an offer identifier (offer ID or\
    \ offer external reference ID) from the request.\n\n   The possible error descriptions\
    \ are as follows:\n\n  * `The offer ID or offer external reference ID is missing.\
    \ Provide the offer ID or external reference ID and try again.`<br>\n  Provide\
    \ the offer ID or external reference ID.\n\n  * `Use either offer ID or offer\
    \ external reference ID in the Applied Offers payload and try again.`<br>\n  Provide\
    \ either the offer ID or offer external reference ID. You cannot provide both.\n\
    \n* #### no-product-identifier\nThe system cannot get the product identifier (product\
    \ ID or product external reference ID) from the request.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `The product ID or product external reference\
    \ ID is missing. Provide the product ID or external reference ID and try again.`<br>\n\
    \  Provide the product ID or product external reference ID.\n\n* #### duplicate_product_identifier\n\
    The system gets duplicated product identifier (product ID or product external\
    \ reference ID) from the request.\n\n   The possible error descriptions are as\
    \ follows:\n\n  * `Use either product ID or product external reference ID in the\
    \ Applied Offers payload and try again.`<br>\n  Provide either the product ID\
    \ or the product external reference ID. You cannot provide both.\n\n* #### duplicate_offer_identifier\n\
    The system gets duplicated offer identifier (offer ID or offer external reference\
    \ ID) from the request.\n\n   The possible error descriptions are as follows:\n\
    \n  * `Use either offer ID or offer external reference ID in the Applied Offers\
    \ payload and try again.`<br>\n  Provide either the offer ID or offer external\
    \ reference ID. You cannot provide both.\n\n* #### invalid-offer-id\nThe offer\
    \ ID for the request is invalid.\n\n   The possible error descriptions are as\
    \ follows:\n\n  * `The offer ID: {offerId} for the request is invalid. Provide\
    \ a valid offer ID or Offer external reference ID and try again.`<br>\n  The offer\
    \ ID for the request is invalid.\n\n  * `The offer external reference ID: {offerId}\
    \ for the request is invalid. Provide a valid offer ID or Offer external reference\
    \ ID and try again.`<br>\n  The offer external reference ID for the request is\
    \ invalid.\n\n### 409 Conflict\n* #### invalid-ip-address\nThe format of the IP\
    \ address is invalid.\n\n   The possible error descriptions are as follows:\n\n\
    \  * `Requested ip address is not valid`<br>\n  The format of the IP address is\
    \ invalid. Provide a valid IP address and try again.\n\n* #### cart-failure\n\
    Some cart operation actions failed.\n\n   The possible error descriptions are\
    \ as follows:\n\n  * `Unable to retrieve the cart details due to data inconsistency.`<br>\n\
    \  Failed to retrieve cart data.\n\n* #### ip-address-restriction-error\nThe country\
    \ associated with the IP address for the request is restricted.\n\n   The possible\
    \ error descriptions are as follows:\n\n  * `Country for ip address is restricted\
    \ for request`<br>\n  The country associated with the IP address for the request\
    \ is restricted.\n\n* #### concurrent-cart-modification-failure\nConcurrent cart\
    \ modification is not allowed.\n\n   The possible error descriptions are as follows:\n\
    \n  * `Request attempted to modify the cart while the cart was being updated by\
    \ another request.`<br>\n  Two cart modification requests cannot occur at the\
    \ same time. Wait a little while and try again.\n\n* #### add-base-product-cart-error\n\
    Cannot add base products to the cart.\n\n   The possible error descriptions are\
    \ as follows:\n\n  * `Base products cannot be added to cart.`<br>\n  Base products\
    \ cannot be added to the cart.\n\n* #### inventory-unavailable-error\nInventory\
    \ unavailable for the product specified in the request.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `We're sorry but {product_name} is currently\
    \ out of stock and cannot be added to your cart. We apologize for any inconvenience.`<br>\n\
    \  The product cannot be added to the cart because it is out of stock.\n\n  *\
    \ `Were sorry but there is not enough of this product in stock to complete this\
    \ order. Please update your quantities and proceed to checkout.`<br>\n  The inventory\
    \ quantity is not enough to complete this order.\n\n  * `We are sorry, some products\
    \ are out of stock and unavailable for purchase at this time.`<br>\n  Some products\
    \ are out of stock for a bundled child with a tight bundle policy.<br>\n  This\
    \ following description appears in the subcode `inventory-unavailable-to-add-tight-bundle-child-line-item`.\n\
    \n  * `We're sorry but {product_name} is currently out of stock and cannot be\
    \ added to your cart. We apologize for any inconvenience.`<br>\n  Some products\
    \ are out of stock for a bundled child with a semi-tight bundle policy.<br>\n\
    \  This following description appears in the subcode `inventory-unavailable-to-add-semi-tight-bundle-child-line-item`.\n\
    \n  * `We are sorry, but the following products are currently out of stock and\
    \ cannot be added to your cart: {product_name}. We apologize for any inconvenience.`<br>\n\
    \  Some products are out of stock for a bundled child with a semi-tight bundle\
    \ policy.<br>\n  This following description appears in the subcode `inventory-unavailable-to-add-semi-tight-bundle-child-line-item`.\n\
    \n* #### line-item-creation-failure\nCannot create line-item for the specified\
    \ product.\n\n   The possible error descriptions are as follows:\n\n  * `Line\
    \ item could not be created.`<br>\n  The line item cannot be created.\n\n  * `Your\
    \ shopping cart is currently empty.`<br>\n  The shopping cart cannot be empty\
    \ for line item creation.\n\n  * `This product is no longer available.`<br>\n\
    \  The line item cannot be created because the product is not available.\n\n \
    \ * `Line Item could not be created for the product specified.`<br>\n  The product\
    \ with provided product ID is not in the group to which the offer applies.\n\n\
    * <h4 id=\"invalid-product-id-409\">invalid-product-id</h4>\nThe produce ID is\
    \ invalid.\n\n   The possible error descriptions are as follows:\n\n  * `Could\
    \ not find a Product resource with an id of {productId}`<br>\n  Could not find\
    \ the product using the provided ID. Check the `productId` and try again.\n\n\
    * #### submit-cart-failed\nThe cart is not complete, so the shopper could not\
    \ submit the cart.\n\n   The possible error descriptions are as follows:\n\n \
    \ * `Session cannot be null.`<br>\n  The session is null causing the submit cart\
    \ to fail.\n\n  * `A requisition cannot be null.`<br>\n  The requisition is null\
    \ causing the submit cart to fail.\n\n  * `Terms of Sales Acceptance must be true\
    \ so shopper confirmed the agreement.`<br>\n  The Terms of Sales Acceptance is\
    \ not true causing the submit cart to fail.\n\n  * `Cannot use non-recurring payment\
    \ method to purchase commitment type subscription`<br>\n  The requisition contains\
    \ a subscription commit line item, and the payment source does not exist or is\
    \ not reusable.\n\n  * `The cart is not complete and could not be submitted.`<br>\n\
    \  The cart is not complete causing the submit cart to fail.\n\n  * `The cart\
    \ cannot be completed due to payment processing failure.`<br>\n  The cart cannot\
    \ be completed due to a payment processing failure.\n\n* #### resume-cart-failure\n\
    The cart cannot be resumed.\n\n   The possible error descriptions are as follows:\n\
    \n  * `Requisition is not present or not in Source Pending Redirect state.`<br>\n\
    \  Wrong requisition state (not source_pending_redirect).\n\n  * `The pending\
    \ redirect order could not be resumed.`<br>\n  Wrong payment session status (failed,\
    \ cancelled, pending_redirect, requires_source).\n\n  * `The pending redirect\
    \ order is no longer eligible for Resume API. Please use Order API to check current\
    \ status.`<br>\n  Order was transferred back to ODS.\n\n* #### invalid-bill-to-country\n\
    The country's billing or shipping address for the request is invalid.\n\n   The\
    \ possible error descriptions are as follows:\n\n  * `Billing Address country\
    \ for request is invalid`<br>\n  The country of billing address for the request\
    \ is invalid.\n\n* #### restricted-bill-to-country\nThe billing address country\
    \ for the request is restricted.\n\n   The possible error descriptions are as\
    \ follows:\n\n  * `Billing Address country is restricted for request`<br>\n  The\
    \ billing address country for the request is restricted.\n\n* #### invalid-ship-to-country\n\
    The shipping address country is restricted for request.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `Shipping Address country for request is\
    \ invalid`<br>\n  The shipping address country for the request is invalid.\n\n\
    * #### restricted-ship-to-country\nThe shipping address country for the request\
    \ is restricted.\n\n   The possible error descriptions are as follows:\n\n  *\
    \ `Shipping Address country is restricted for request`<br>\n  The shipping address\
    \ country for the request is restricted.\n\n* #### cart-fraud-failure\nCannot\
    \ submit the order due to fraud validation failure.\n\n   The possible error descriptions\
    \ are as follows:\n\n  * `The order could not be submitted due to fraud validation\
    \ failure`<br>\n  The order could not be sumitted due to a fraud validation failure.\n\
    \n* #### cart-payment-failure\nCannot submit the order due to payment processing\
    \ failure.\n\n   The possible error descriptions are as follows:\n\n  * `The order\
    \ could not be submitted due to payment processing failure`<br>\n  The order could\
    \ not be submitted due to payment processing failure.\n\n  * `The cart could not\
    \ be processed due to payment processing failure`<br>\n  Cannot process the cart\
    \ due to a payment processing failure.\n\n* #### credit-card-expired\nThe credit\
    \ card used for payment has expired.\n\n   The possible error descriptions are\
    \ as follows:\n\n  * `The credit card used for payment has expired`<br>\n  The\
    \ credit card used for payment has expired.\n\n* #### operation-failed\nCannot\
    \ complete the operation.\n\n   The possible error descriptions are as follows:\n\
    \n  * `Cart could not be established for request.`<br>\n  An error caused a cart\
    \ establishment failure.\n\n  * `A service failure occurred that prevented the\
    \ request from being processed`<br>\n  An error occurred during the process of\
    \ determining the fulfiller.\n\n  * `TAX_000001`<br>\n  The address verification\
    \ failed during tax computation, such as ZIP or postal code, do not match.\n\n\
    \  * `Line item could not be determined. Multiple line items found for product`<br>\n\
    \  When the system was going to update the line item it found multiple line items\
    \ of the product in the cart.\n\n  * `Quantity restrictions in place; minimum\
    \ required quantity is [{minumum quantity}].`<br>\n  The product has a minimum\
    \ purchasable quantity, and the requested quantity is less than the minimum purchasable\
    \ quantity.\n\n  * `Purchase history restrictions in place; allowed quantity is\
    \ [{maximum quantity}].`<br>\n  The requested quantity is greater than the maximum\
    \ purchasable quantity of the product.\n\n  * `Exception occurred while checking\
    \ ShippingMethod by ShippingMethodSetter`<br>\n  An exception occurred while checking\
    \ the shipping method.\n\n* #### apply-shopper-failure\nCannot apply the shopper\
    \ account information to the cart.\n\n   The possible error descriptions are as\
    \ follows:\n\n  * `Shopper account information could not be applied to cart.`<br>\n\
    \  Cannot apply the shopper account information to the cart.\n\n* #### invalid-payment-method\n\
    The cart does not support the specified payment method.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `Payment method is not supported for this\
    \ Site`<br>\n  The site does not support the specified payment method.\n\n* ####\
    \ apply-payment-failure\nCannot apply a payment method to an empty cart or failed\
    \ to apply the requested payment method to the cart.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `The shopper must have an approved line\
    \ of credit account.`<br>\n  Apply payment failure due to the shopper having no\
    \ approved line of credit account.\n\n  * `The line of credit account is not available.`<br>\n\
    \  The line of credit account is not available causing shopper applying failure.\n\
    \n  * `Insufficient credit balance available.`<br>\n  There is no sufficient credit\
    \ balance available.\n\n  * `Purchase amount does not meet minimum requirements.`<br>\n\
    \  The total purchase amount of the requisition is less than the minimal amount\
    \ setting of the site.\n\n  * `A payment method cannot be detached from an empty\
    \ cart.`<br>\n  Cannot detach a payment method from an empty cart.\n\n  * `The\
    \ source with id [{source_id}] was not found.`<br>\n  Cannot find the source with\
    \ id {source_id}.\n\n* #### delete-payment-failure\nCannot delete payment method\
    \ from a cart\n\n    The possible error descriptions are as follows:\n\n  * `A\
    \ payment method cannot be deleted from an empty cart.`<br>\n  Cannot delete a\
    \ payment method from an empty cart.\n\n* #### invalid-payment-failure\nCannot\
    \ process the cart because the payment methods were not set.\n\n   The possible\
    \ error descriptions are as follows:\n\n  * `The cart could not be processed due\
    \ to no available payment methods set`<br>\n  Cannot process the cart because\
    \ the payment methods set is not available.\n\n* #### paypal-lookup-failure\n\
    Cannot process the cart due to PayPal lookup processing failure.\n\n   The possible\
    \ error descriptions are as follows:\n\n  * `The cart could not be processed due\
    \ to paypal lookup processing failure`<br>\n  Cannot process the cart due to PayPal\
    \ lookup processing failure.\n\n* #### line-item-update-failure\nCannot update\
    \ the line item for the request.\n\n   The possible error descriptions are as\
    \ follows:\n\n  * `Line Item could not be updated for the request`<br>\n  Cannot\
    \ update the line item for the request.\n\n* #### over-private-store-shopper-restriction\n\
    Cannot add the product to the cart. The shopper requested more than the maximum\
    \ purchasable quantity [x], or the remaining purchasable quantity [y] is less\
    \ than the quantity they requested.\n\n   The possible error descriptions are\
    \ as follows:\n\n  * `Maximum purchasable quantity[{maximum quantity}]; Remaining\
    \ purchasable quantity[{remaining purchasable quantity}]; The product cannot be\
    \ added to the cart.`<br>\n  The sum of this request quantity and the quantity\
    \ already purchased in the cart is over the maximum purchasable quantity when\
    \ the product in a private store has a maximum purchasable quantity and the purchase\
    \ history restriction setting is true.\n\n* #### private-store-remaining-quantity-under-line-item-restriction\n\
    Cannot add the product to the cart. The shopper requested more than the Remaining\
    \ purchasable quantity [x] or less than the Minimum purchasable quantity [y].\n\
    \n* #### under-private-store-line-item-restriction\nMinimum purchasable quantity[x];\
    \ Cannot add the product to the cart.\n\n   The possible error descriptions are\
    \ as follows:\n\n  * `Minimum purchasable quantity[x]; Cannot add the product\
    \ to the cart.`<br>\n  The product in the private store has a minimum purchasable\
    \ quantity, and the requested quantity is less than the minimum purchasable quantity.\n\
    \n* #### cart-charge-failure\nThe cart could not be processed due to charge failure.\n\
    \n   The possible error descriptions are as follows:\n\n  * `Failed to charge\
    \ source.`<br>\n  Failed to charge source.\n\n* #### precondition-failure\nThe\
    \ request failed on some precodition validations.\n\n    The possible error descriptions\
    \ are as follows:\n\n     * `Invalid offer level for applied offer with offer\
    \ ID: {offerId}. Provide a valid offer level and try again.`<br>\n     The offer\
    \ level for applied offer with `offerId` is invalid.\n\n     * `Invalid offer\
    \ type for applied offer with offer ID: {offerId}. Provide a valid offer type\
    \ and try again.`<br>\n     The offer type for the applied offer with `offerId`\
    \ is invalid.\n\n     * `Applied the wrong offer ID: {offerId} with the offer.\
    \ Enter the correct offer ID and try again.`<br>\n     The trigger point for the\
    \ applied offer with `offerId` is invalid.\n\n     * `Applied the wrong offer\
    \ ID: {offerId} for this site. Enter the correct offer ID and try again.`<br>\n\
    \     The offer with `offerId` is unavailable.\n\n     * `The applied offer with\
    \ offer ID: {offerId} is unavailable. Ensure the active offer is within the total\
    \ usage limit and that the supported locale matches with user's locale and try\
    \ again.`<br>\n     The applied offer with provided ID is unavailable.\n\n* ####\
    \ payment-unexpected-error\nThe cart could not be processed due to unexpected\
    \ payment failure.\n\n   The possible error descriptions are as follows:\n\n \
    \ * `The request failed to complete.`<br>\n  The request failed to complete due\
    \ to unexpected payment failure.\n\n* #### invalid-payment-source\nThe PaymentSource\
    \ is not valid for creating BillingOption.\n\n   The possible error descriptions\
    \ are as follows:\n\n  * `A PaymentSource with Source ID [sourceId] is not valid\
    \ for creating BillingOption.`<br>\n  A PaymentSource with Source ID is not valid\
    \ for creating BillingOption.\n  \n* #### resource-already-exists\nThe Payment\
    \ Option already exists.\n\n   The possible error descriptions are as follows:\n\
    \n  * `A Payment Option with a nickname of [nickname] already exists.`<br>\n \
    \ A Payment Option with a nickname already exists.\n  \n  * `A PaymentSource with\
    \ a Source ID [sourceId] already exists.`<br>\n  A PaymentSource with a Source\
    \ ID already exists.      \n\n### 412 Precondition Failed\n* #### no-discount-or-type\n\
    The validation failed for `discount` or `discountType`.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `Either the discount or discount type or\
    \ both are missing. Include both the discount and discount type in the payload\
    \ and try again.`<br>\n  Need to provide `discount` and `discountType`.\n\n* ####\
    \ invalid-discount\nThe value of the discount is invalid.\n\n   The possible error\
    \ descriptions are as follows:\n\n  * `The discount value is invalid. Provide\
    \ a valid discount value and try again.`<br>\n  The discount value is invalid\
    \ for one of the following reasons:\n    * the value of `discount` < 0\n    *\
    \ the value of `discount` is over the max value of DOUBLE when `discountType`\
    \ is `amountOff`.\n    * the value of `discount` > 100 when `discountType` is\
    \ `percentOff`.\n\n* #### invalid_discount_type\nThe value of the discount type\
    \ is invalid.\n\n  The possible error descriptions are as follows:\n\n  * `The\
    \ offer discount type is invalid. Provide a valid offer discount type and try\
    \ again.`<br>\n  The value of `discountType` shall be `amountOff` or `percentOff`.\n\
    \n* <h4 id=\"invalid-product-id-412\">invalid-product-id</h4>\nThe product ID\
    \ is invalid.\n\n   The possible error descriptions are as follows:\n\n  * `The\
    \ product ID or product external reference ID is invalid. Provide the correct\
    \ product ID or product external reference ID and try again.`<br>\n  The product\
    \ ID or product for external reference ID is invalid.\n\n### 413 Request Entity\
    \ Too Large\n* #### custom_description_exceeds_limitation\nThe length of `customDescription`\
    \ exceeds limitation.\n\n   The possible error descriptions are as follows:\n\n\
    \  * `The custom description for the offer exceeds length limitation (2000). Shorten\
    \ the custom description and try again.`<br>\n  The length of `customDescription`\
    \ cannot excced the length limitation (2000).\n\n### 500 Internal Server Error\n\
    * #### internal-payment-error\nAn unexpected internal payment error occurred.\n\
    \n   The possible error descriptions are as follows:\n\n  * `An internal server\
    \ error occurred, try again later`<br>\n  An unexpected internal payment error\
    \ occurred.\n"
  x-logo:
    url: "https://www.digitalriver.com/wp-content/uploads/sites/8/Digital-River-Logo_160x70.png"
    backgroundColor: "#FFFFFF"
    altText: "Digital River logo"
servers:
- url: "https://api.digitalriver.com"
paths:
  /oauth20/token (DR hosted shopper):
    post:
      tags:
      - "Token"
      summary: "Authenticated shopper token (Digital River hosted shopper)"
      description: "Use this ROPC (Resource Owner Password Credentials) Grant OAuth\
        \ flow when Digital River maintains the shopper's login and password. <br>\
        \ <br> Request a full access token for the authenticated shopper by providing\
        \ the shopper's username and password. Use the Client Credentials Grant OAuth\
        \ flow if the Digital River partner maintains the shopper login and password\
        \ credentials. <br> <br> The authenticated shopper token will expire after\
        \ a period (86400 seconds by default). If the shopper wants to continue the\
        \ shopping flow after the token expires, use the refresh_token grant type\
        \ with the refresh token from the previous create token response to get a\
        \ new authenticated shopper token to continue. Or use the shopper's credentials\
        \ and password grant type to create a new authenticated shopper token. <br/>\
        \ <br/> Security requires HTTP basic authentication (base-64 encoded), a user\
        \ API key, and a password (secret key). <br> <br> **Important**&colon; Never\
        \ expose or visibly display the Limited or Full Access Tokens requested by\
        \ the APIs to the customer (such as plain text in a cookie). Suppose a customer\
        \ has access to these tokens. They could bypass any restrictions built into\
        \ the store frontend and place orders directly on our systems via publicly\
        \ documented APIs.\n"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "grant_type"
              - "password"
              - "username"
              type: "object"
              properties:
                dr_limited_token:
                  type: "string"
                  description: "Provide the limited access token used to identify\
                    \ the anonymous shopper session when transferring the anonymous\
                    \ shopper session and shopping cart to a specific authenticated\
                    \ shopper."
                dr_session_token:
                  type: "string"
                  description: "Provide the shopper's session-aware token for a Digital\
                    \ River-hosted solution when transferring the shopper session\
                    \ and shopping cart to a specific authenticated shopper."
                grant_type:
                  type: "string"
                  description: "Use \"password\" as the grant type when an anonymous\
                    \ shopper or Digital River maintains the shopper's login and password\
                    \ credentials. Use \"refresh_token\" as the grant type to continue\
                    \ the shopping flow for the previous shopper."
                  enum:
                  - "client_credentials"
                  - "password"
                  - "refresh_token"
                password:
                  type: "string"
                  description: "Valid only for ROPC grant types. A shopper's password\
                    \ is required when creating an authenticated shopper token."
                username:
                  type: "string"
                  description: "Valid only for ROPC grant types. A shopper's username\
                    \ is required when creating an authenticated shopper token."
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OauthToken"
        "400":
          description: "*  dr_limited_token_invalid\n*  invalid_request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitedToken"
        "401":
          description: "*  invalid_client\n*  invalid_request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTokenRequest"
  /oauth20/token (Anonymous shopper token):
    post:
      tags:
      - "Token"
      summary: "Anonymous shopper token"
      description: "Request an anonymous shopper token for a public or confidential\
        \ application. Use an anonymous shopper token when the shopper wants to shop\
        \ anonymously. The anonymous shopper token will expire after some a certain\
        \ time (86400 seconds by default). <br> <br> If the shopper wants to continue\
        \ the shopping flow when the token is expired, use the refresh_token enum\
        \ for the grant type with the refresh token from the previous create token\
        \ response to get a new anonymous shopper token to continue. <br> <br> Security\
        \ requires HTTP basic authentication (base-64 encoded), a user API key, and\
        \ a password (secret key). <br> <br> **Important**&colon; Never expose or\
        \ visibly display the Limited or Full Access Tokens requested by the APIs\
        \ to the customer (such as plain text in a cookie). Suppose a customer has\
        \ access to these tokens. They could bypass any restrictions built into the\
        \ store frontend and place orders directly on our systems via publicly documented\
        \ APIs.\n"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "grant_type"
              type: "object"
              properties:
                dr_session_token:
                  type: "string"
                  description: "Provide the shopper's session-aware token for a Digital\
                    \ River-hosted solution when transferring the shopper session\
                    \ and shopping cart to a specific authenticated shopper."
                grant_type:
                  type: "string"
                  description: "Use \"refresh_token\" as the grant type to continue\
                    \ the shopping flow for the previous shopper."
                  enum:
                  - "client_credentials"
                  - "password"
                  - "refresh_token"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OauthToken"
        "401":
          description: "*  invalid_client\n*  invalid_request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTokenRequest"
  /oauth20/token (Client Hosted Shopper):
    post:
      tags:
      - "Token"
      summary: "Authenticated shopper token (Client Hosted Shopper)"
      description: "Use this Client Credentials Grant OAuth flow when the Digital\
        \ River partner maintains the shopper login and password credentials. <br>\
        \ <br> Request a full access token for the authenticated shopper by providing\
        \ the shopper's external reference identifier and the client_credentials enum\
        \ as the grant type. <br> <br> Security requires HTTP basic authentication\
        \ (base-64 encoded), a user API key, and a password (secret key). <br> <br>\
        \ **Important**&colon; Never expose or visibly display the Limited or Full\
        \ Access Tokens requested by the APIs to the customer (such as plain text\
        \ in a cookie). Suppose a customer has access to these tokens. They could\
        \ bypass any restrictions built into the store frontend and place orders directly\
        \ on our systems via publicly documented APIs.\n"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - "dr_external_reference_id"
              - "grant_type"
              type: "object"
              properties:
                dr_external_reference_id:
                  type: "string"
                  description: "Provide the external reference ID when requesting\
                    \ an authenticated shopper token for a shopper maintained by a\
                    \ Digital River partner."
                dr_limited_token:
                  type: "string"
                  description: "Provide the limited access token used to identify\
                    \ the anonymous shopper session when transferring the anonymous\
                    \ shopper session and shopping cart to a specific authenticated\
                    \ shopper."
                dr_session_token:
                  type: "string"
                  description: "Provide the shopper's session-aware token for a Digital\
                    \ River-hosted solution when transferring the shopper session\
                    \ and shopping cart to a specific authenticated shopper."
                grant_type:
                  type: "string"
                  description: "Use \"client_credentials\" as the grant type when\
                    \ the Digital River partner maintains the shopper login and password\
                    \ credentials. Use \"refresh_token\" as the grant type to continue\
                    \ the shopping flow for an authenticated shopper."
                  enum:
                  - "client_credentials"
                  - "password"
                  - "refresh_token"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCredentialToken"
        "400":
          description: "*  dr_limited_token_invalid\n*  invalid_request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitedToken"
        "401":
          description: "*  invalid_client\n*  invalid_request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTokenRequest"
  /oauth20/access-tokens:
    get:
      tags:
      - "Access Tokens"
      summary: "Get the Commerce API access token"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    delete:
      tags:
      - "Access Tokens"
      summary: "Delete the Commerce API access token"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me:
    get:
      tags:
      - "Shoppers"
      summary: "Get the current shopper"
      description: "Get the current shopper and shopper data.\nYou can get shopper\
        \ information for both anonymous and authenticated shoppers.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "ipAddress"
        in: "query"
        description: "Provide the shopper's IP address for the current session."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultShopper"
                - $ref: "#/components/schemas/ExpandedShopper"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Restricted IP address\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestrictedIPFailures"
    post:
      tags:
      - "Shoppers"
      summary: "Update the current shopper"
      description: "Updates shopper information for the current shopper.\nThe information\
        \ you can update depends on the type of access token you are currently using.\n\
        If you have an anonymous shopper token and are therefore updating an anonymous\
        \ shopper, you can only update the IP address, locale, and currency.\nUpdating\
        \ shopper information beyond that requires an authenticated shopper token.\n\
        You can update all shopper information including username and password for\
        \ an authenticated shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Use this query parameter to update the preferred currency in\
          \ the cart for authenticated and anonymous shoppers."
        required: false
        schema:
          type: "string"
      - name: "ipAddress"
        in: "query"
        description: "Provide the shopper's IP address for the current session."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Use this query parameter to update the shopper's preferred locale\
          \ for authenticated and anonymous shoppers."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "applyEmailToSubscriptions"
        in: "query"
        description: "When the value for this parameter is true, and you provide the\
          \ emailAddress in the request body, all active and inactive subscription\
          \ shipping and billing email addresses will be updated when you update the\
          \ shopper's subscription billing and shipping email addresses."
        required: false
        schema:
          type: "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultShopperRequest"
      responses:
        "204":
          description: "No Content"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Restricted IP address\n*  Invalid Currency Code\n*  Invalid\
            \ Locale\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidShopperPostFailures"
  /v1/shoppers (Client hosted shopper):
    post:
      tags:
      - "Shoppers"
      summary: "Create a shopper  (Client hosted shopper)"
      description: "Create a Digital River partner maintained shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultClientHostedShopperRequest"
      responses:
        "201":
          description: "*  Created (Empty Response)\n*  Created (With additional information,\
            \ contact the Digital River team for setup.)\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/EmptyResponse"
                - $ref: "#/components/schemas/DefaultClientHostedShopper"
                - $ref: "#/components/schemas/ExpandedClientHostedShopper"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Restricted IP address\n*  Invalid Currency Code\n*  Invalid\
            \ Locale\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidShopperPostFailures"
  /v1/shoppers (DR hosted shopper):
    post:
      tags:
      - "Shoppers"
      summary: "Create a shopper (Digital River hosted shopper)"
      description: "Create a Digital River maintained shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultShopperRequest"
      responses:
        "201":
          description: "*  Created (Empty Response)\n*  Created (With additional information,\
            \ contact the Digital River team for setup.)\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/EmptyResponse"
                - $ref: "#/components/schemas/DefaultShopper"
                - $ref: "#/components/schemas/ExpandedShopper"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Restricted IP address\n*  Invalid Currency Code\n*  Invalid\
            \ Locale\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidShopperPostFailures"
  /v1/shoppers/me/account:
    get:
      tags:
      - "Account"
      summary: "Get shopper account information"
      description: "Allows shoppers to configure their account information. Responds\
        \ with a 302 redirect to a web page that allows a shopper to enter billing\
        \ address, shipping address, and payment information. This method requires\
        \ an authenticated shopper token.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for the shopper."
        required: false
        schema:
          type: "string"
      - name: "redirect_uri"
        in: "query"
        description: "The redirect_URI is the page you want to redirect the shopper\
          \ to after saving their options."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Get Shopper account Information."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/addresses/{addressId}:
    get:
      tags:
      - "Addresses"
      summary: "Get an address by ID"
      description: "To get an address by ID, specify the ID of the address in the\
        \ {id} URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for the shopper."
        required: false
        schema:
          type: "string"
      - name: "addressId"
        in: "path"
        description: "The address ID."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultShopperAddressById"
                - $ref: "#/components/schemas/ExpandedShopperAddressById"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    delete:
      tags:
      - "Addresses"
      summary: "Delete a shoppers address"
      description: "To delete the shopper's address, specify the of the address ID\
        \ in the {id} URI path parameter.\nNo warning message appears if you delete\
        \ the last address linked to the shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for the shopper."
        required: false
        schema:
          type: "string"
      - name: "addressId"
        in: "path"
        description: "The address ID."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/addresses:
    get:
      tags:
      - "Addresses"
      summary: "Get all shopper addresses"
      description: "Retrieve all addresses configured for a shopper, such as home\
        \ and work addresses.\nIf you need to access a billing or shipping address,\
        \ use the methods available in the Carts API.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for the shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultShopperAddresses"
                - $ref: "#/components/schemas/ExpandedShopperAddresses"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    post:
      tags:
      - "Addresses"
      summary: "Create or update shopper address"
      description: "Creates or updates a shopper's address.\nAn address entry must\
        \ have a unique nickname.\nIf a current address has the same nickname specified\
        \ in the request, that address is updated; otherwise, a new address is created.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for the shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Address for shopper."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostShopperAddressRequest"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/payment-options:
    get:
      tags:
      - "Payment-Options"
      summary: "Get the shopper payment options"
      description: "Retrieve all of the payment options configured for a shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/PaymentOptionsResponsePaymentSource"
                - $ref: "#/components/schemas/PaymentOptionsResponsePaymentSourceExpand"
                - $ref: "#/components/schemas/PaymentOptionsResponseLegacy"
                - $ref: "#/components/schemas/PaymentOptionsResponseLegacyExpand"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    post:
      tags:
      - "Payment-Options"
      summary: "Create the shopper payment options"
      description: "Create a payment options for a shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Payment method for cart."
        content:
          application/json:
            schema:
              oneOf:
              - $ref: "#/components/schemas/PaymentOptionsRequestPaymentSource"
              - $ref: "#/components/schemas/PaymentOptionsRequestLegacy"
      responses:
        "204":
          description: "* No Content (Legacy Payment)\n* No Content (Payment Source)\n"
        "201":
          description: "Created (Payment Source, contact your Digital River team to\
            \ set up)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentOptionsResponsePaymentSourceForPost"
        "400":
          description: "* Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "* The Payment Option with a nickname already exists\n* The\
            \ PaymentSource is not valid\n* The PaymentSource with a Source ID already\
            \ exists\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/PaymentOptionAlreadyExists"
                - $ref: "#/components/schemas/InvalidPaymentSource"
                - $ref: "#/components/schemas/PaymentSourceAlreadyExists"
  /v1/shoppers/me/payment-options/{paymentOptionId}:
    get:
      tags:
      - "Payment-Options"
      summary: "Get the shopper payment option"
      description: "Get a payment option by the ID specified in the URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "paymentOptionId"
        in: "path"
        description: "Payment Option ID."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/PaymentOptionsIDResponsePaymentSource"
                - $ref: "#/components/schemas/PaymentOptionsIDResponsePaymentSourceExpand"
                - $ref: "#/components/schemas/PaymentOptionsIDResponseLegacy"
                - $ref: "#/components/schemas/PaymentOptionsIDResponseLegacyExpand"
        "401":
          description: "* Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    post:
      tags:
      - "Payment-Options"
      summary: "Update the shopper payment options"
      description: "Update a payment options for a shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Gives additional details about resources."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Payment method for cart."
        content:
          application/json:
            schema:
              oneOf:
              - $ref: "#/components/schemas/PaymentOptionsRequestPaymentSource"
              - $ref: "#/components/schemas/PaymentOptionsRequestLegacy"
      responses:
        "204":
          description: "* No Content (Legacy Payment)\n* No Content (Payment Source)\n"
        "201":
          description: "Created (Payment Source, contact your Digital River team to\
            \ set up)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentOptionsResponsePaymentSourceForPost"
        "400":
          description: "* Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "* The PaymentSource is not valid\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPaymentSource"
  /v1/shoppers/me/categories:
    get:
      tags:
      - "Categories"
      summary: "Get all categories and subcategories"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency you want to use for the product's\
          \ pricing information. The currency query parameter takes precedence over\
          \ the locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale you want to use for the product's pricing\
          \ information. The currency query parameter takes precedence over the locale."
        required: false
        schema:
          type: "string"
      - name: "productsPageSize"
        in: "query"
        description: "Specifies the maximum number of products to include for each\
          \ category returned in a paginated response. It must be a positive integer\
          \ greater than zero and less than 100000. The default is 10."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCategories"
                - $ref: "#/components/schemas/ExpandedCategories"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCategoriesFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/categories/{categoryId}:
    get:
      tags:
      - "Categories"
      summary: "Get a category by ID"
      description: "Get a category by ID.\nTo get a category by ID, specify the category's\
        \ ID in the {id} URI path parameter. This method returns the category requested\
        \ and any of its subcategories.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "categoryId"
        in: "path"
        description: "Catogory ID."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency you want to use for the product's\
          \ pricing information. The currency query parameter takes precedence over\
          \ the locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "productsPageSize"
        in: "query"
        description: "Specifies the maximum number of products to include for each\
          \ category returned in a paginated response. It must be a positive integer\
          \ greater than zero and less than 100000. The default is 10."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCategory"
                - $ref: "#/components/schemas/ExpandedCategory"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCategoriesFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/categories:
    get:
      tags:
      - "Categories"
      summary: "Get all categories for a specific product"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency you want to use for the product's\
          \ pricing information. The currency query parameter takes precedence over\
          \ the locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred currency you want to use for the product's\
          \ pricing information. The currency query parameter takes precedence over\
          \ the locale."
        required: false
        schema:
          type: "string"
      - name: "productsPageSize"
        in: "query"
        description: "Specifies the maximum number of products to include for each\
          \ category returned in a paginated response. It must be a positive integer\
          \ greater than zero and less than 100000. The default is 10."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCategories"
                - $ref: "#/components/schemas/ExpandedProductCategories"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCategoriesFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/pricing/volume-pricing:
    get:
      tags:
      - "Products"
      summary: "Get volume pricing for a specific product"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products.  The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultVolumePricing"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products:
    get:
      tags:
      - "Products"
      summary: "Retrieve all products from the catalog"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "externalReferenceId"
        in: "query"
        description: "Provide the external reference identifier for your product.\
          \ The externalReferenceId is your company's internal identifier or stock\
          \ keeping unit (SKU) for a product."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "query"
        description: "Provide a comma-separated list of one or more product identifiers\
          \ to include in the response. This parameter is required if the inventory\
          \ status is requested to be included in the response."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "companyId"
        in: "query"
        description: "Provide the identifier for the company that owns the product.\
          \ If you do not provide the companyId, the call will use the default company\
          \ associated with the API key."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        description: "You can sort the list of products returned by specifying one\
          \ or more sort fields and their respective sort direction (asc or desc).\
          \ To do this, use a comma-delimited list of sort fields in the format of\
          \ {fieldname}-{sort_direction}. For instance, displayName-asc,listPrice-desc."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultShopperProducts"
                - $ref: "#/components/schemas/ExpandedShopperProducts"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeywordFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}:
    get:
      tags:
      - "Products"
      summary: "Get a product by ID"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "PProvide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultProductById"
                - $ref: "#/components/schemas/ExpandedProductById"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeywordFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/categories/{categoryId}/products:
    get:
      tags:
      - "Products"
      summary: "Retrieve all products for a specified category"
      description: "To retrieve all products for a specified category, specify the\
        \ category's ID in the {id} URI path parameter. The default setting is to\
        \ display only the base products in the order of their rank."
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "categoryId"
        in: "path"
        description: "Category ID."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "companyId"
        in: "query"
        description: "Provide the identifier for the company that owns the product.\
          \ If you do not provide the companyId, the call will use the default company\
          \ associated with the API key."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "productsPageSize"
        in: "query"
        description: "Specify the maximum number of products to include for each category\
          \ returned in a paginated response. Must be a positive integer greater than\
          \ zero and less than 100000. Default is 10."
        required: false
        schema:
          type: "string"
      - name: "sort"
        in: "query"
        description: "You can sort the list of products returned by specifying one\
          \ or more sort fields and their respective sort direction (asc or desc).\
          \ To do this, use a comma-delimited list of sort fields in the format of\
          \ {fieldname}-{sort_direction}. For instance, displayName-asc,listPrice-desc."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultProducts"
                - $ref: "#/components/schemas/ExpandedProducts"
        "400":
          description: "*  Bad Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCategoriesFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/variations:
    get:
      tags:
      - "Product Variations"
      summary: "Get product variations"
      description: "To find different versions of a product, input the product's ID\
        \ in the {id} URI path parameter. For instance, a software product may have\
        \ a variation based on its operating system."
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultVariations"
                - $ref: "#/components/schemas/ExpandedVariations"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/pricing:
    get:
      tags:
      - "Pricing"
      summary: "Get pricing for a specific product"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. The currency query parameter takes precedence over locale."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultProductPricing"
                - $ref: "#/components/schemas/ExpandedProductPricing"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/inventory-status:
    get:
      tags:
      - "Inventory Status"
      summary: "Get the inventory status"
      description: "To check a product's inventory status, provide its ID or external\
        \ reference ID as the {id}. If you provide an invalid ID, the system will\
        \ ignore it. You will receive an empty collection with a 200 status if you\
        \ don't provide any ID.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "companyId"
        in: "query"
        description: "Provide the identifier for the company that owns the product.\
          \ If you do not provide the companyId, the call will use the default company\
          \ associated with the API key."
        required: false
        schema:
          type: "string"
      - name: "externalReferenceId"
        in: "query"
        description: "Provide the external reference identifier for your product.\
          \ The externalReferenceId is your company's internal identifier or stock\
          \ keeping unit (SKU) for a product."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "query"
        description: "Provide a comma separated-list of identifiers of one or more\
          \ products to include in the response."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultProductsInventory"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/inventory-status:
    get:
      tags:
      - "Inventory Status"
      summary: "Get the inventory status of a product"
      description: "To check the availability of a product or multiple products, provide\
        \ the product ID or an external reference ID as a query parameter. If you\
        \ provide an invalid ID, the system will ignore it. You will receive an empty\
        \ collection with a 200 status if you don't provide any ID.\n- name: apiKey\n\
        \  in: query\n  description: Provide your client identifier.\n  required:\
        \ false\n  schema:\n    type: string\n- name: token\n  in: query\n  description:\
        \ Provide the authorized or anonymous token for a shopper.\n  required: false\n\
        \  schema:\n    type: string\n- name: productId\n  in: path\n  description:\
        \ Provide the product identifier.\n  required: true\n  schema:\n    type:\
        \ string\n- name: expand\n  in: query\n  description: Use the expand query\
        \ parameter when you want additional fields to appear in the response. The\
        \ expand query parameter provides more fields in the response. Expanding resources\
        \ reduces the number of API calls required to accomplish a task.\n  required:\
        \ false\n  schema:\n    type: string\n- name: fields\n  in: query\n  description:\
        \ >-\n    Specify the fields that you want to appear in the response. Filtering\
        \ the fields returned in the response can conserve bandwidth and accelerate\
        \ response time.\n  required: false\n  schema:\n    type: string\n"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultInventoryStatus"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/product/{productId}/financing:
    get:
      tags:
      - "Financing"
      summary: "Get the financing information for a product"
      description: "To get the financing information for a specific product, provide\
        \ the product ID.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultFinancing"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/offers/{offerId}:
    get:
      tags:
      - "Offers"
      summary: "Get an offer by ID"
      description: "To get an offer by ID, specify the ID of the offer in the {id}\
        \ URI path parameter.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "offerId"
        in: "path"
        description: "Provide the offer's identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Select either XML or JSON as the format for the Authorize Shopper\
          \ API. The default format is XML."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Specify the preferred currency for the pricing information returned\
          \ for a product. This setting only works when you provide the apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Specify the preferred locale for the pricing information returned\
          \ for products. This setting only works when you provide the apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOffer"
                - $ref: "#/components/schemas/ExpandedOffer"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/offers/{offerId}/product-offers/{productOfferId}:
    get:
      tags:
      - "Offers"
      summary: "Get the product for the offer"
      description: "To get the specific product for the specific offer, specify the\
        \ offer ID in the {offerId} URI path parameter, and product ID in {productOfferId}."
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "offerId"
        in: "path"
        description: "Provide the offer's identifier to limit the response to the\
          \ products that are eligible for the offer."
        required: true
        schema:
          type: "string"
      - name: "productOfferId"
        in: "path"
        description: "Provide the product identifer. You must use the productId parameter\
          \ with the offerId parameter. When you use these two parameters together,\
          \ only the specified product appears in the response. You can only provide\
          \ one product identifier. Multiple product identifiers are not supported."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultProductOffer"
                - $ref: "#/components/schemas/ExpandedProductOffer"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/offers:
    get:
      tags:
      - "Offers"
      summary: "Retrieve all offers for a product"
      description: "To retrieve all available deals for a  particular product, specify\
        \ the ID of the product in the first {id} URI path parameter. The retrieved\
        \ offers include:\n* All Always Triggered offers\n* All triggered and untriggered\
        \ Promotional URL / External Triggered Offers\n* All triggered and untriggered\
        \ Coupon Code Offers\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOffers"
                - $ref: "#/components/schemas/ExpandedOffers"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/products/{productId}/point-of-promotions/{popName}/offers:
    get:
      tags:
      - "Offers"
      summary: "Retrieve all offers for a given POP for a product"
      description: "To retrieve all offers for a given point-of-promotion (POP) for\
        \ a product:\n1. Specify the product ID in the first {id} URI path parameter.\n\
        2. Specify the point-of-promotion (POP) name in the second {popName} URI path\
        \ parameter.\n\nThe retrieved offers include:\n* All Always Triggered offers\n\
        * All Promotional URL / External Triggered Offers) even if it’s not triggered\n\
        \nThe retrieved offers do not include the following:\n* Coupon Code offers,\
        \ even the coupon code offer, have been triggered\n<br>\n<br>\n**Note**&colon;\
        \ You can also get all offers for a product without providing a POP. For more\
        \ information, see GET shoppers/me/offers.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "path"
        description: "Provide the product identifier."
        required: true
        schema:
          type: "string"
      - name: "popName"
        in: "path"
        description: "Provide the name of the point of Promotion (POP)."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Select either XML or JSON as the format for the Authorize Shopper\
          \ API. The default format is XML."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOffers"
                - $ref: "#/components/schemas/ExpandedOffers"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/point-of-promotions/{popName}/offers:
    get:
      tags:
      - "Offers"
      summary: "Retrieve all offers of a specific POP"
      description: "To retrieve all offers with the specified point-of-promotion (POP),\
        \ specify the name of the point-of-promotion (POP) in the second {popName}\
        \ URI path parameter.\n\nThe retrieved offers include the following:\n* All\
        \ Always Triggered offers\n* All Promotional URL / External Triggered Offers)\
        \ even if it’s not triggered\n\nThe retrieved offers do not include the following:\n\
        * Coupon Code offers, even the coupon code offer, have been triggered\n<br>\n\
        <br>\n**Note**&colon; You can also get all offers for a product without providing\
        \ a POP. For more information, see GET shoppers/me/offers.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "popName"
        in: "path"
        description: "Provide the name of the point of Promotion (POP)."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Select either XML or JSON as the format for the Authorize Shopper\
          \ API. The default format is XML."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultPOPOffers"
                - $ref: "#/components/schemas/ExpandedPOPOffers"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/offers:
    get:
      tags:
      - "Offers"
      summary: "Retrieve all offers"
      description: "Retrieve all offers, including:\n* Trigger type is Always Triggered\
        \ offers\n* Trigger type is User Triggered (Promotional URL / External Triggered\
        \ Offers) and has been triggered\n* Trigger type is User Triggered (Coupon\
        \ Code) and has been triggered\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOffers"
                - $ref: "#/components/schemas/ExpandedOffers"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/offers/{offerId}/category-offers:
    get:
      tags:
      - "Offers"
      summary: "Retrieve all categories for the offer"
      description: "To retrieve all categories for the specific offer, specify the\
        \ ID of the offer in the {offerId} URI path parameter.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "offerId"
        in: "path"
        description: "Provide the offer's identifier."
        required: true
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultCategoryOffers"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
      deprecated: true
  /v1/shoppers/me/offers/{offerId}/product-offers:
    get:
      tags:
      - "Offers"
      summary: "Get all products for the offer"
      description: "To get all products for the specific offer, specify the ID of\
        \ the offer in the {offerId} URI path parameter."
      parameters:
      - name: "apiKey"
        in: "query"
        description: "Provide your client identifier. The token query parameter takes\
          \ precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper. The\
          \ token query parameter takes precedence over the apiKey."
        required: false
        schema:
          type: "string"
      - name: "offerId"
        in: "path"
        description: "Provide the offer's identifier to limit the response to the\
          \ products that are eligible for the offer."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "currency"
        in: "query"
        description: "Set the preferred currency for the pricing information returned\
          \ for a product. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "locale"
        in: "query"
        description: "Set the preferred locale for the pricing information returned\
          \ for products. Only works when using apiKey parameter."
        required: false
        schema:
          type: "string"
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration. Global Commerce default behavior is\
          \ to apply best Global Commerce Merchandising offer for shopper. So if there\
          \ is an offer better than the one you specified, the best offer will be\
          \ applied. Set this value true to skip the Global Commerce Merchandising\
          \ offer arbitration."
        required: false
        schema:
          type: "boolean"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultProductOffers"
                - $ref: "#/components/schemas/ExpandedProductOffers"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/purchase-plan:
    get:
      tags:
      - "Purchase Plan"
      summary: "Retrieve a private store"
      description: "Retrieve a private store matching the provided query parameters."
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultPurchasePlan"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/purchase-plan/search:
    get:
      tags:
      - "Purchase Plan Search"
      summary: "Search for a purchase plan"
      description: "Search for private store matching the provided query parameters.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "emailAddress"
        in: "query"
        description: "Provide the email address to use for the search."
        required: false
        schema:
          type: "string"
      - name: "emailDomain"
        in: "query"
        description: "Provide the email domain to use for the search."
        required: false
        schema:
          type: "string"
      - name: "emailInvitationAddress"
        in: "query"
        description: "Provide an email address associated with an invitation to a\
          \ private store. When a private store shopper invites a friend to view a\
          \ private store, the invitation email address belongs to the inviter."
        required: false
        schema:
          type: "string"
      - name: "emailInvitationPin"
        in: "query"
        description: "Provide a PIN associated with an email invitation. If a private\
          \ store shopper invites a friend to view a private store, the PIN belongs\
          \ to the invitation. Note that the emailInvitationPin is required when you\
          \ provide the emailInvitationAddress."
        required: false
        schema:
          type: "string"
      - name: "genericIdentifier"
        in: "query"
        description: "Provide the generic identifier to use for the search."
        required: false
        schema:
          type: "string"
      - name: "genericIdentifierPin"
        in: "query"
        description: "Provide the PIN associated with the generic identifier for the\
          \ search. Note that the genericIdentifierPin is required when you provide\
          \ the genericIdentifier."
        required: false
        schema:
          type: "string"
      - name: "ipAddress"
        in: "query"
        description: "Provide the IP address to use for the search."
        required: false
        schema:
          type: "string"
      - name: "referralUrl"
        in: "query"
        description: "Provide the referral URL to use for the search."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultPurchasePlans"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/purchase-plan/authorize:
    post:
      tags:
      - "Purchase Plan Authorize"
      summary: "Authorize a purchase plan"
      description: "Authenticates a current shopper session into a specific private\
        \ store. Some private stores may have more than one access rule configured.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Purchase Plan."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DefaultPurchasePlan"
      responses:
        "204":
          description: "No Content."
        "401":
          description: "* Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/apply-shopper:
    post:
      tags:
      - "Apply Shopper"
      summary: "Apply shopper to cart"
      description: "Sets the payment method, billing address, and shipping address\
        \ for a\ncart using the information configured for the shopper.\n<br>\n<br>\n\
        **Note**&colon; Using this method requires an authenticated shopper token.\n\
        <br>\n<br>\nIf you need to update the address for an anonymous shopper, use\
        \ the PUT\nshoppers/me/carts/active/billing-address or PUT shoppers/me/carts/active/shipping-address\
        \ method in the Billing\nand Shipping Address API.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for the shopper."
        required: false
        schema:
          type: "string"
      - name: "billingAddressId"
        in: "query"
        description: "Provide the identifier for the shopper's address resource associated\
          \ with their billing address. Digital River uses the shopper's default address\
          \ if you do not provide a value."
        required: false
        schema:
          type: "string"
      - name: "paymentOptionId"
        in: "query"
        description: "Provide the payment option identifier for a payment method.\
          \ Digital River uses the shopper's payment option if you do not provide\
          \ a value."
        required: false
        schema:
          type: "string"
      - name: "shippingAddressId"
        in: "query"
        description: "Provide the identifier for the shopper's address resource associated\
          \ with their billing or shipping addresses. Digital River uses the shopper's\
          \ default address as the shopper's shipping address if you do not provide\
          \ an identifier for the shopper's billing or shipping address."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resource-not-found"
        "409":
          description: "* ip-address-restriction-error\n* operation-failed\n* apply-shopper-failure\n\
            * invalid-payment-method\n* apply-payment-failure\n* invalid-payment-failure\n\
            * paypal-lookup-failure\n* cart-payment-failure\n* cart-failure\n* payment-unexpected-error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ip-address-restriction-error"
                - $ref: "#/components/schemas/operation-failed"
                - $ref: "#/components/schemas/apply-shopper-failure"
                - $ref: "#/components/schemas/invalid-payment-method"
                - $ref: "#/components/schemas/apply-payment-failure"
                - $ref: "#/components/schemas/invalid-payment-failure"
                - $ref: "#/components/schemas/paypal-lookup-failure"
                - $ref: "#/components/schemas/cart-payment-failure"
                - $ref: "#/components/schemas/cart-failure"
                - $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/carts/active/line-items:
    get:
      tags:
      - "Line Items"
      summary: "Get line items from a cart line"
      description: "Use this method to obtain the prices and details of all products\
        \ added to the cart. Note that this operation requires an authentication token.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultLineItems"
                - $ref: "#/components/schemas/ExpandedLineItems"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resource-not-found"
        "409":
          description: "* ip-address-restriction-error\n* invalid-ip-address\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ip-address-restriction-error"
                - $ref: "#/components/schemas/invalid-ip-address"
    post:
      tags:
      - "Line Items"
      summary: "Add line items to a cart"
      description: "Use this method to add or update one or more products in a cart.\
        \ Adding a product to a cart creates a corresponding line item. You can update\
        \ one or more line items using the productID or externalReferenceID query\
        \ parameter. Alternatively, you can post multiple line items with a single\
        \ request with an XML payload in the request body. The method behavior differs\
        \ depending on which action query mechanism you use to post line items to\
        \ a cart. The action query parameter provides flexibility for the update behavior.\
        \ Add is the default action for this method.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "companyId"
        in: "query"
        description: "Provide the identifier for the company that owns the product.\
          \ If you do not provide the companyId, the call will use the default company\
          \ associated with the API key."
        required: false
        schema:
          type: "string"
      - name: "externalReferenceId"
        in: "query"
        description: "Provide a comma-separated list of one or more external reference\
          \ identifiers. The externalReferenceId is your company's internal identifier\
          \ or stock keeping unit (SKU) for a product used when creating a line item\
          \ with companyId. If you do not explicitly provide the companyId when creating\
          \ a line item using the externalReferenceId, the system will use the companyId\
          \ associated with the API key."
        required: false
        schema:
          type: "string"
      - name: "offerId"
        in: "query"
        description: "Provide the offer's identifier."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "query"
        description: "Provide a comma-separated list of one or more product IDs. A\
          \ product identifier is a product's unique stock keeping unit (SKU). Use\
          \ this product ID when adding a product to a cart and creating a line item."
        required: false
        schema:
          type: "string"
      - name: "parentLineItemId"
        in: "query"
        description: "Provide the line item ID for the parent product when adding\
          \ a child product to the cart to ensure the child product is correctly associated\
          \ with the parent product line item. Remember also to include the offer\
          \ ID."
        required: false
        schema:
          type: "string"
      - name: "quantity"
        in: "query"
        description: "Provide the number of products added to the cart. The value\
          \ must be a valid integer. If the quantity is not explicitly specified,\
          \ the default is 1."
        required: false
        schema:
          type: "string"
      - name: "suppressorderconfirmationemail"
        in: "query"
        description: "When set to true, this parameter suppresses an order's confirmation\
          \ email. To use this feature, contact Customer Success."
        required: false
        schema:
          type: "boolean"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartLineItemsRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultLineItems"
                - $ref: "#/components/schemas/ExpandedLineItems"
        "201":
          description: "Created"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n* invalid-offer-id\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/resource-not-found"
                - $ref: "#/components/schemas/no-offer-identifier"
                - $ref: "#/components/schemas/duplicate_offer_identifier"
                - $ref: "#/components/schemas/no-product-identifier"
                - $ref: "#/components/schemas/duplicate_product_identifier"
                - $ref: "#/components/schemas/invalid-offer-id"
        "409":
          description: "* ip-address-restriction-error\n* invalid-ip-address\n* concurrent-cart-modification-failure\n\
            * operation-failed\n* invalid-bill-to-country\n* restricted-bill-to-country\n\
            * line-item-update-failure\n* line-item-creation-failure\n* inventory-unavailable-error\n\
            * over-private-store-shopper-restriction\n* private-store-remaining-quantity-under-line-item-restriction\n\
            * invalid-product-id\n* add-base-product-cart-error\n* under-private-store-line-item-restriction\n\
            * payment-unexpected-error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ip-address-restriction-error"
                - $ref: "#/components/schemas/invalid-ip-address"
                - $ref: "#/components/schemas/concurrent-cart-modification-failure"
                - $ref: "#/components/schemas/operation-failed"
                - $ref: "#/components/schemas/invalid-bill-to-country"
                - $ref: "#/components/schemas/restricted-bill-to-country"
                - $ref: "#/components/schemas/line-item-update-failure"
                - $ref: "#/components/schemas/line-item-creation-failure"
                - $ref: "#/components/schemas/inventory-unavailable-error"
                - $ref: "#/components/schemas/over-private-store-shopper-restriction"
                - $ref: "#/components/schemas/private-store-remaining-quantity-under-line-item-restriction"
                - title: "invalid-product-id"
                  allOf:
                  - $ref: "#/components/schemas/invalid-product-id-409"
                - $ref: "#/components/schemas/add-base-product-cart-error"
                - $ref: "#/components/schemas/under-private-store-line-item-restriction"
                - $ref: "#/components/schemas/payment-unexpected-error"
        "413":
          description: "* custom_description_exceeds_limitation\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/custom_description_exceeds_limitation"
    delete:
      tags:
      - "Line Items"
      summary: "Delete line items in a cart"
      description: "Use this method to remove multiple or all line items from your\
        \ cart with just one request. Note that this method requires an authentication\
        \ token.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "lineItemId"
        in: "query"
        description: "Provide a comma-separated list of one or more line item identifiers."
        required: false
        schema:
          type: "string"
      responses:
        "204":
          description: "No content."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Payment Unexpected Error\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/orders/{orderId}/line-items:
    get:
      tags:
      - "Line Items"
      summary: "Get line items for an order line"
      description: "To get all line items for an order, specify the order ID in the\
        \ {id} URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOrderLineItems"
                - $ref: "#/components/schemas/ExpandedOrderLineItems"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/line-items/{lineItemsId}:
    get:
      tags:
      - "Line Items"
      summary: "Get a line item from a cart"
      description: "To retrieve a specific line item, provide its ID in the {id} URI\
        \ path parameter. Note that this method requires an authentication token.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "lineItemsId"
        in: "path"
        description: "Provide the line item identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultLineItem"
                - $ref: "#/components/schemas/ExpandedLineItem"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "404":
          description: "*  resource-not-found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resource-not-found"
    post:
      tags:
      - "Line Items"
      summary: "Update a line item for a cart"
      description: "Use this method to add one or more products to a cart. Adding\
        \ a product to a cart creates a corresponding line item. You can update one\
        \ or more line items using the productID or externalReferenceID query parameter.\
        \ Alternatively, you can post multiple line items with a single request with\
        \ an XML payload in the request body. The method behavior differs depending\
        \ on which action query mechanism you use to post line items to a cart. The\
        \ action query parameter provides flexibility for the update behavior. Add\
        \ is the default action for this method.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "lineItemsId"
        in: "path"
        description: "Provide the line item identifier."
        required: true
        schema:
          type: "string"
      - name: "action"
        in: "query"
        description: "Modifies the POST behavior. The action parameter determines\
          \ the method behavior for handling the quantity associated with a posted\
          \ line item. The valid values are: add, update, and subtract. Update is\
          \ the default action for the POST shoppers/me/carts/active/line-items/{lineItemsId}\
          \ resource method. Add is the default action for the POST shoppers/me/carts/active/line-items\
          \ resource method. To override the default method behavior for handling\
          \ quantity, explicitly specify the value of the action query parameter."
        required: false
        schema:
          type: "string"
      - name: "quantity"
        in: "query"
        description: "Provide a positive integer value (1, 2, 3, etc., excluding zero)\
          \ for the line item quantity. If the quantity is not explicitly specified,\
          \ the default is 1. Providing a negative integer or zero value returns an\
          \ error. The action query parameter determines whether to add, update, or\
          \ subtract the quantity from existing line item quantities."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultLineItem"
                - $ref: "#/components/schemas/ExpandedLineItem"
        "400":
          description: "*  Invalid Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Restricted IP address\n*  Line Item creation failure\n\
            *  Line Item update failure\n*  Offer already used\n*  Offer Inactive\n\
            *  Offer not applicable\n*  Offer not deployed\n*  Offer unavailable\n\
            *  Offer limit restrictions\n*  Private store restrictions\n*  Payment\
            \ unexpected error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/PostCartLineItemsFailures"
                - title: "PaymentUnexpectedError"
                  allOf:
                  - $ref: "#/components/schemas/payment-unexpected-error"
    delete:
      tags:
      - "Line Items"
      summary: "Delete a line item in a cart"
      description: "To delete a particular line item for a product, you need to provide\
        \ the ID of the line item in the {id} URI path parameter. Note that this method\
        \ requires an authentication token.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "lineItemsId"
        in: "path"
        description: "Provide the line item identifier."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "No content."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Payment Unexpected Error\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/orders/{orderId}/line-items/{lineItemId}:
    get:
      tags:
      - "Line Items"
      summary: "Get the line item for an order"
      description: "To get a line item for an order, specify the order ID in the first\
        \ {id} uri path parameter.\nSpecify the line item ID in the second {id} URI\
        \ path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier."
        required: true
        schema:
          type: "string"
      - name: "lineItemId"
        in: "path"
        description: "Provide the line item identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOrderOneLineItem"
                - $ref: "#/components/schemas/ExpandedOrderOneLineItem"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/orders/{orderId}/billing-address:
    get:
      tags:
      - "Billing Address"
      summary: "Get billing address for the order"
      description: "To obtain the billing address for an order, provide the order\
        \ ID in the {id} URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier.."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingAddress"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/billing-address:
    get:
      tags:
      - "Billing Address"
      summary: "Get billing address for the cart"
      description: "Use this method to get the billing address for a cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingAddress"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    put:
      tags:
      - "Billing Address"
      summary: "Add or update cart billing address"
      description: "This resource allows you to change the billing address of a cart.\
        \ You can use it to replace the default billing address.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Billing address for cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCartBillingAddressRequest"
      responses:
        "204":
          description: "No content."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Invalid Billing Country\n*  Restricted Billing Country\n\
            *  Payment Unexpected Error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/BillingCountryFailures"
                - title: "PaymentUnexpectedError"
                  allOf:
                  - $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/carts/active/apply-billing-address:
    post:
      tags:
      - "Billing Address"
      summary: "Apply billing address to cart"
      description: "This resource allows you to apply a postal code to a billing address\
        \ in the cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "country"
        in: "query"
        description: "Provide the two-digit country code (ISO 3166-2). See data.okfn.or/data/core/country-list\
          \ for a complete list of country codes."
        required: false
        schema:
          type: "string"
      - name: "postalCode"
        in: "query"
        description: "Provide a country-specific length and format postal code to\
          \ apply to the shipping address. For United States addresses, Digital River\
          \ supports ZIP+4 codes. They consist of the last four digits of a full nine-digit\
          \ ZIP code. A nine-digit ZIP Code has two parts: the initial five digits\
          \ of the zip code indicating the destination post office or delivery area,\
          \ and the last four digits representing a specific delivery route within\
          \ that overall delivery area. When used, the postalCode also retrieves the\
          \ city and state information required to support tax estimation for a cart."
        required: false
        schema:
          type: "string"
      - name: "suggestionId"
        in: "query"
        description: "Provide the identifier of a Billing Address Suggestion resource\
          \ to apply to the cart's billing address."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Invalid Billing Country\n*  Restricted Billing Country\n\
            *  Payment Unexpected Error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/BillingCountryFailures"
                - title: "PaymentUnexpectedError"
                  allOf:
                  - $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/carts/active/shipping-address:
    get:
      tags:
      - "Shipping Address"
      summary: "Get shipping address for the cart"
      description: "Get the shipping address for a cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingAddress"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    put:
      tags:
      - "Shipping Address"
      summary: "Add or update cart shipping address"
      description: "Updates the shipping address for a cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Shipping address for cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCartAddressRequest"
      responses:
        "204":
          description: "No content."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Invalid Shipping Country\n*  Restricted Shipping Country\n\
            *  Payment Unexpected Error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ShippingCountryFailures"
                - title: "PaymentUnexpectedError"
                  allOf:
                  - $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/orders/{orderId}/shipping-address:
    get:
      tags:
      - "Shipping Address"
      summary: "Get shipping address for the order"
      description: "Get the shipping address for an order. You must specify the ID\
        \ of the order in the {id} URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingAddress"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/apply-shipping-address:
    post:
      tags:
      - "Shipping Address"
      summary: "Apply shipping address to cart"
      description: "Applies a postal code to a shipping address in the cart. <br>\
        \ <br> **Note**&colon; Applying the the postal code to the shipping address\
        \ will trigger applicable tax calculations for the cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "country"
        in: "query"
        description: "Two digit country code (ISO 3166-2). See data.okfn.or/data/core/country-list\
          \ for a complete list of country codes."
        required: false
        schema:
          type: "string"
      - name: "postalCode"
        in: "query"
        description: "Provide a country-specific length and format postal code to\
          \ apply to the shipping address. When used, the postalCode also retrieves\
          \ the city and state information required to support tax estimation for\
          \ a cart."
        required: false
        schema:
          type: "string"
      - name: "suggestionId"
        in: "query"
        description: "Provide the identifier of a Shipping Address Suggestion resource\
          \ to apply to the cart's shipping address."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  Invalid Billing Country\n*  Restricted Billing Country\n\
            *  Payment Unexpected Error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ShippingCountryFailures"
                - title: "PaymentUnexpectedError"
                  allOf:
                  - $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/carts/active/payment-methods:
    get:
      tags:
      - "Payment Methods"
      summary: "Get the available cart payment methods"
      description: "Get the available payment methods for the cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultPaymentMethods"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/shipping-options/{shippingOptionsId}:
    get:
      tags:
      - "Shipping Options"
      summary: "Get a shipping option by ID"
      description: "To get a shipping option by ID, specify the shipping option ID\
        \ in the {id} URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "shippingOptionsId"
        in: "path"
        description: "Provide the identifier of the shipping option chosen for the\
          \ cart."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultShippingOption"
                - $ref: "#/components/schemas/ExpandedShippingOption"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "404":
          description: "*  resource-not-found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resource-not-found"
  /v1/shoppers/me/carts/active/shipping-options:
    get:
      tags:
      - "Shipping Options"
      summary: "Retrieve all shipping options"
      description: "Get the available shipping options.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultShippingOptions"
                - $ref: "#/components/schemas/ExpandedShippingOptions"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/web-checkout:
    get:
      tags:
      - "Web Checkout"
      summary: "Get web checkout"
      description: "Transfer the shopper to the Digital River-hosted storefront pages.\
        \ The response returns 302 with a location to the Digital River-hosted storefront\
        \ pages.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "externalReferenceId"
        in: "query"
        description: "Provide the external reference identifier for your product.\
          \ The externalReferenceId is your company's internal identifier or stock\
          \ keeping unit (SKU) for a product."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "query"
        description: "Provide comma-separated list of one or more product identifiers\
          \ to include in the response."
        required: false
        schema:
          type: "string"
      - name: "themeId"
        in: "query"
        description: "Provide the theme identifier for your site."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Moved temporarily."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    post:
      tags:
      - "Web Checkout"
      summary: "Create the cart and transfer shopper"
      description: "Create the cart and transfers the shopper to the Digital River-hosted\
        \ storefront pages. The response returns 302 with a location to the Digital\
        \ River-hosted storefront pages.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "externalReferenceId"
        in: "query"
        description: "Provide the external reference identifier for your product.\
          \ The externalReferenceId is your company's internal identifier or stock\
          \ keeping unit (SKU) for a product."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "query"
        description: "Provide comma-separated list of one or more product identifiers\
          \ to include in the response."
        required: false
        schema:
          type: "string"
      - name: "themeId"
        in: "query"
        description: "Provide the theme identifier for your site, as it determines\
          \ the visual style of your Digital River-hosted web page."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Web Checkout cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebCheckout"
      responses:
        "200":
          description: "Moved temporarily."
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/submit-cart:
    post:
      tags:
      - "Submit Cart"
      summary: "Submit the cart and create an order"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Submit Cart Request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitCartRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultSubmitCart"
                - $ref: "#/components/schemas/ExpandedSubmitCart"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "*  resource-not-found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/resource-not-found"
        "409":
          description: "* ip-address-restriction-error\n* invalid-ip-address\n* submit-cart-failed\n\
            * invalid-bill-to-country\n* restricted-bill-to-country\n* invalid-ship-to-country\n\
            * restricted-ship-to-country\n* concurrent-cart-modification-failure\n\
            * cart-fraud-failure\n* cart-payment-failure\n* inventory-unavailable-error\n\
            * credit-card-expired\n* cart-charge-failure\n* payment-unexpected-error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ip-address-restriction-error"
                - $ref: "#/components/schemas/invalid-ip-address"
                - $ref: "#/components/schemas/submit-cart-failed"
                - $ref: "#/components/schemas/invalid-bill-to-country"
                - $ref: "#/components/schemas/restricted-bill-to-country"
                - $ref: "#/components/schemas/invalid-ship-to-country"
                - $ref: "#/components/schemas/restricted-ship-to-country"
                - $ref: "#/components/schemas/concurrent-cart-modification-failure"
                - $ref: "#/components/schemas/cart-fraud-failure"
                - $ref: "#/components/schemas/cart-payment-failure"
                - $ref: "#/components/schemas/inventory-unavailable-error"
                - $ref: "#/components/schemas/credit-card-expired"
                - $ref: "#/components/schemas/cart-charge-failure"
                - $ref: "#/components/schemas/payment-unexpected-error"
        "500":
          description: "*  internal-payment-error\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internal-payment-error"
  /v1/shoppers/me/carts/active/apply-payment-method:
    post:
      tags:
      - "Apply or Detach Payment Methods"
      summary: "Apply a payment method to the cart"
      description: "Applies a payment method to a cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Payment method for cart."
        content:
          application/json:
            schema:
              oneOf:
              - $ref: "#/components/schemas/ApplyPaymentMethodPaymentSource"
              - $ref: "#/components/schemas/ApplyPaymentMethodLegacy"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "*  Invalid Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplyPaymentMethodInvalidRequest"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  invalid-payment-method\n*  operation-failed\n*  invalid-credit-card-number\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/invalid-payment-method"
                - $ref: "#/components/schemas/operation-failed"
                - $ref: "#/components/schemas/invalid-credit-card-number"
    delete:
      tags:
      - "Apply or Detach Payment Methods"
      summary: "Detach a payment source from the cart"
      description: "Detaches a payment source from a cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Payment method for cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetachPaymentMethodPaymentSource"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "409":
          description: "* apply-payment-failure\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apply-payment-failure"
  /v1/shoppers/me/carts/active/payment:
    delete:
      tags:
      - "Apply or Detach Payment Methods"
      summary: "Detach all applied payment methods from the cart"
      description: "Delete payment informations from the cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "This token is the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "409":
          description: "* delete-payment-failure\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete-payment-failure"
  /v1/shoppers/me/carts/active/apply-shipping-option:
    post:
      tags:
      - "Apply Shipping Option"
      summary: "Apply shipping option to cart"
      description: "Sets the shipping method for a cart.\nThe shopping cart must contain\
        \ a physical product before you can apply shipping options to the cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "shippingOptionId"
        in: "query"
        description: "Provide the identifier of the shipping option chosen for the\
          \ cart."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
        "409":
          description: "*  shipping-option-failure\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplyShippingOptionFailure"
  /v1/shoppers/me/carts/active:
    get:
      tags:
      - "Carts"
      summary: "Get the current cart"
      description: "Retrieve the current active cart for the specified token.\nThis\
        \ method retrieves the cart along with its line items, and links to subresources\
        \ such as billing address, shipping address, and shipping options.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid-request"
        "401":
          description: "*  invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/resource-not-found"
        "409":
          description: "* ip-address-restriction-error\n* invalid-ip-address\n* cart-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ip-address-restriction-error"
                - $ref: "#/components/schemas/invalid-ip-address"
                - $ref: "#/components/schemas/cart-failure"
    post:
      tags:
      - "Carts"
      summary: "Update the current cart"
      description: "Adds a product to a cart on an API consumer-hosted page by product\
        \ ID or external reference ID.\nThe response returns the contents of the cart.\
        \ You can also apply a promotional or coupon code to a cart.\nThe promoCode\
        \ query parameter is required to apply the promotional code.\nPromotional\
        \ codes are also called coupon codes or discount codes.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "externalReferenceId"
        in: "query"
        description: "Provide the external reference identifier for your product.\
          \ The externalReferenceId is your company's internal identifier or stock\
          \ keeping unit (SKU) for a product."
        required: false
        schema:
          type: "string"
      - name: "offerId"
        in: "query"
        description: "Provide the offer identifier associated with the cart. You must\
          \ pass the offerId in conjunction with the productId or externalReferenceId."
        required: false
        schema:
          type: "string"
      - name: "productId"
        in: "query"
        description: "Provide a comma-separated list of one or more product identifiers\
          \ to include in the response. This parameter is required if the inventory\
          \ status is requested to be included in the response."
        required: false
        schema:
          type: "string"
      - name: "parentLineItemId"
        in: "query"
        description: "Provide the line item ID for the parent product when adding\
          \ a child product to the cart to ensure the child product is correctly associated\
          \ with the parent product line item. Remember also to include the offer\
          \ ID."
        required: false
        schema:
          type: "string"
      - name: "promoCode"
        in: "query"
        description: "Provide the promotional code to apply to the cart."
        required: false
        schema:
          type: "string"
      - name: "quantity"
        in: "query"
        description: "Provide the number of products added to the cart. The value\
          \ must be a valid integer. If the quantity is not explicitly specified,\
          \ the default is 1."
        required: false
        schema:
          type: "string"
      - name: "termId"
        in: "query"
        description: "Provide the finance term ID associated with the cart. You must\
          \ pass the termId in conjunction with the productId or externalReferenceId."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "suppressorderconfirmationemail"
        in: "query"
        description: "When set to true, this parameter suppresses an order's confirmation\
          \ email. To use this feature, contact Customer Success."
        required: false
        schema:
          type: "boolean"
      requestBody:
        description: "Cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "* invalid-request\n* password-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/invalid-request"
                - $ref: "#/components/schemas/password-failure"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n* invalid-offer-id\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/resource-not-found"
                - $ref: "#/components/schemas/invalid-offer-id"
        "409":
          description: "* ip-address-restriction-error\n* invalid-ip-address\n* concurrent-cart-modification-failure\n\
            * add-base-product-cart-error\n* inventory-unavailable-error\n* line-item-creation-failure\n\
            * invalid-product-id\n* cart-failure\n* payment-unexpected-error\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/ip-address-restriction-error"
                - $ref: "#/components/schemas/invalid-ip-address"
                - $ref: "#/components/schemas/concurrent-cart-modification-failure"
                - $ref: "#/components/schemas/add-base-product-cart-error"
                - $ref: "#/components/schemas/inventory-unavailable-error"
                - $ref: "#/components/schemas/line-item-creation-failure"
                - title: "invalid-product-id"
                  allOf:
                  - $ref: "#/components/schemas/invalid-product-id-409"
                - $ref: "#/components/schemas/cart-failure"
                - $ref: "#/components/schemas/payment-unexpected-error"
  /v1/shoppers/me/carts/active/point-of-promotions/{popName}/offers:
    get:
      tags:
      - "Cart Offers"
      summary: "Retrieve all POP offers for a cart"
      description: "Retrieve all offers for a cart with the specified point-of-promotion\
        \ in the {popName} URI path parameter. For example, specify a popName \"CandyRack_ShoppingCart\"\
        , a cart-specific offer returned by this method is a candy rack offer.\n\n\
        The retrieved offers include:\n* Trigger type is Always Triggered offers\n\
        * Trigger type is User Triggered (Promotional URL / External Triggered Offers)\
        \ and has been triggered\n\nThe retrieved offers does not include:\n* Coupon\
        \ Code offers, even the coupon code offer has been triggered\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "popName"
        in: "path"
        description: "Provide the name of the point of Promotion (POP)."
        required: true
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultOffersForCart"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/carts/active/applied-offers:
    get:
      tags:
      - "Cart Offers"
      summary: "Retrieve cart applied offers"
      description: "Retrieve all offers applied to the cart. A cart can have below\
        \ offers be applied:\n* Order Level Discount – Discounts the total costs for\
        \ an order. When the cart has multiple Order Level Discount offers, only the\
        \ one that provide the best discount to the shopper is used.\n* Order Level\
        \ Shipping Discount – Discounts shipping costs for an entire order. When the\
        \ cart has multiple Order Level Shipping Discount offers, only the one that\
        \ provide the best discount to the shopper is used.\n* Item Level Discount\
        \ – Discounts costs associated with a single line item (product). When the\
        \ item has multiple Item Level Discount offers, only the one that provide\
        \ the best discount to the shopper is used. If there are multiple line items\
        \ in the cart, every line item can have its own best Item Level Discount offers.\n\
        * Product Level Shipping Discount – Discounts shipping costs for a specific\
        \ product in the order. When the product has multiple Product Level Shipping\
        \ Discount offers, only the one that provide the best discount to the shopper\
        \ is used. If there are multiple products in the cart, every product can have\
        \ its own best Product Level Shipping Discount offers.\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "The client identifier used to authorize the request. You must\
          \ specify either an `apiKey` or `token`."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "The customer's ID. You must specify either an `apiKey` or `token`."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppliedOffers"
  /v1/shoppers/me/carts/active/applied-offers/{offerId}:
    delete:
      tags:
      - "Cart Offers"
      summary: "Delete specific cart applied offer"
      description: "Delete the specific offer applied to the customer's cart. If the\
        \ offer type of the specific offer is bundle, the line item group will be\
        \ break and the line item may be removed base on the bundle type.\n"
      parameters:
      - name: "offerId"
        in: "path"
        description: "Offer ID."
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "Authorized or anonymous token for a customer."
        required: false
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful response."
        "404":
          description: "* resource-not-found\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/offer-not-found"
        "409":
          description: "* vat-exemption-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/offer-not-applicable"
  /v1/shoppers/me/carts/active/eligible-offers:
    delete:
      tags:
      - "Cart Offers"
      summary: "Delete cart eligible offers"
      description: "Reset the promotions of the cart, clear all discounts and offers,\
        \ including:\n\n* Always Trigger Offers (Site Level)\n* Promotional URL /\
        \ External Trigger offers (User Level)\n* Coupon code (User Level)\n* Bundle\
        \ offers, all product bundle offers, cross-sell offers and custom bundle offers\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Authorized or anonymous token for a customer."
        required: false
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful response."
  /v1/shoppers/me/carts/active (API Trigger Offer):
    post:
      tags:
      - "API Trigger Offer"
      summary: "Trigger offer by cart"
      description: "Use API to trigger the Order Level or Product Level offer(s).\
        \ <br> <br> **Note**&colon; The offer type must be “Promotional URL / External\
        \ Triggered Offer”."
      parameters:
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration for eligible Always Trigger Offers\
          \ and Coupon Code offers of the cart.\nGlobal Commerce default behavior\
          \ is to apply best Global Commerce Merchandising offer for shopper. \nSo\
          \ if there is an offer better than the one you specified, the best offer\
          \ will be applied. In case unfortunately \nthe best offer is not the one\
          \ you want, set this parameter True could help you to bypass them. \nBelow\
          \ are more details the parameter can bypass or not.\n\n* Always Trigger\
          \ Offers (Site Level): Bypassed\n\n* Promotional URL / External Trigger\
          \ offers (User Level): NOT bypassed (So you can feed in \nPromotional URL\
          \ offer ID together with this parameter, to skip the eixsting offers and\
          \ \nthen apply the one you would like to applied offer in one call.\n\n\
          * Coupon code (User Level): Bypassed\n\n* Bundle offers, all product bundle\
          \ offer, cross-sell offer and custom bundle offer: NOT affected\n\nIf you\
          \ would like to simply bypass all eligible offers to get a clean cart without\
          \ any discounts, \nplease refer to this API: https://www.digitalriver.com/docs/commerce-api-reference/#tag/Cart-Offers/paths/~1v1~1shoppers~1me~1carts~1active~1eligible-offers/delete\n"
        required: false
        schema:
          type: "string"
      requestBody:
        description: "API Trigger Offer."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartAPITriggerOfferRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n* no-offer-identifier\n* no-product-identifier\n\
            * duplicate_product_identifier\n* duplicate_offer_identifier\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/resource-not-found"
                - $ref: "#/components/schemas/no-offer-identifier"
                - $ref: "#/components/schemas/no-product-identifier"
                - $ref: "#/components/schemas/duplicate_product_identifier"
                - $ref: "#/components/schemas/duplicate_offer_identifier"
        "409":
          description: "* invalid-offer-id\n* precondition-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/invalid-offer-id"
                - $ref: "#/components/schemas/precondition-failure"
        "412":
          description: "* no-discount-or-type\n* invalid-product-id\n* invalid-discount\n\
            * invalid_discount_type\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/no-discount-or-type"
                - title: "invalid-product-id"
                  allOf:
                  - $ref: "#/components/schemas/invalid-product-id-412"
                - $ref: "#/components/schemas/invalid-discount"
                - $ref: "#/components/schemas/invalid_discount_type"
        "413":
          description: "* custom_description_exceeds_limitation\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/custom_description_exceeds_limitation"
  /v1/shoppers/me/carts/active/line-items (API Trigger Offer):
    post:
      tags:
      - "API Trigger Offer"
      summary: "Trigger offer by line item"
      description: "Use API to trigger the Product Level offer(s). <br> <br> **Note**&colon;\
        \ The offer type must be “Promotional URL / External Triggered Offer”."
      parameters:
      - name: "skipOfferArbitration"
        in: "query"
        description: "Bypass offer arbitration for eligible Always Trigger Offers\
          \ and Coupon Code offers of the cart.\nGlobal Commerce default behavior\
          \ is to apply best Global Commerce Merchandising offer for shopper. \nSo\
          \ if there is an offer better than the one you specified, the best offer\
          \ will be applied. In case unfortunately \nthe best offer is not the one\
          \ you want, set this parameter True could help you to bypass them. \nBelow\
          \ are more details the parameter can bypass or not.\n\n* Always Trigger\
          \ Offers (Site Level): Bypassed\n\n* Promotional URL / External Trigger\
          \ offers (User Level): NOT bypassed (So you can feed in \nPromotional URL\
          \ offer ID together with this parameter, to skip the eixsting offers and\
          \ \nthen apply the one you would like to applied offer in one call.\n\n\
          * Coupon code (User Level): Bypassed\n\n* Bundle offers, all product bundle\
          \ offer, cross-sell offer and custom bundle offer: NOT affected\n\nIf you\
          \ would like to simply bypass all eligible offers to get a clean cart without\
          \ any discounts, \nplease refer to this API: https://www.digitalriver.com/docs/commerce-api-reference/#tag/Cart-Offers/paths/~1v1~1shoppers~1me~1carts~1active~1eligible-offers/delete\n"
        required: false
        schema:
          type: "string"
      requestBody:
        description: "API Trigger Offer."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LineItemAPITriggerOfferRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultLineItems"
                - $ref: "#/components/schemas/ExpandedLineItems"
        "400":
          description: "* invalid-request\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/invalid-request"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "404":
          description: "* resource-not-found\n* no-offer-identifier\n* no-product-identifier\n\
            * duplicate_product_identifier\n* duplicate_offer_identifier\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/resource-not-found"
                - $ref: "#/components/schemas/no-offer-identifier"
                - $ref: "#/components/schemas/no-product-identifier"
                - $ref: "#/components/schemas/duplicate_product_identifier"
                - $ref: "#/components/schemas/duplicate_offer_identifier"
        "409":
          description: "* invalid-offer-id\n* precondition-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/invalid-offer-id"
                - $ref: "#/components/schemas/precondition-failure"
        "412":
          description: "* no-discount-or-type\n* invalid-product-id\n* invalid-discount\n\
            * invalid_discount_type\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/no-discount-or-type"
                - title: "invalid-product-id"
                  allOf:
                  - $ref: "#/components/schemas/invalid-product-id-412"
                - $ref: "#/components/schemas/invalid-discount"
                - $ref: "#/components/schemas/invalid_discount_type"
        "413":
          description: "* custom_description_exceeds_limitation\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/custom_description_exceeds_limitation"
  /v1/shoppers/me/carts/active/resume-cart:
    post:
      tags:
      - "Resume Cart"
      summary: "Resume cart submission after redirect payment is completed"
      description: "When a shopper selects a redirect payment method when they submit\
        \ the cart, they are redirected to the payment provider where they can authorize\
        \ the payment. Once the payment is authorized, you can call this API to resume\
        \ submitting the cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultResumeCart"
                - $ref: "#/components/schemas/ExpandedResumeCart"
        "401":
          description: "* invalid_token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invalid_token"
        "409":
          description: "* resume-cart-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/resume-cart-failure"
        "500":
          description: "*  internal-payment-error\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/internal-payment-error"
  /v1/shoppers/me/carts/active (subscriptionInfo):
    post:
      tags:
      - "Third Party Subscription Engine Support"
      summary: "Accept subscription information from third-party subscription engine"
      description: "Accept Subscription Information (Including Billing Agreements)\
        \ for supporting third-party subscription engine.\n\nUse ECO billing optimization\
        \ tool for third-party subscription engine.\n"
      requestBody:
        description: "Cart with subscriptionInfo block."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionExternalEngineRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartWithSubscriptionInfo"
        "400":
          description: "*  Invalid Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequest"
  /v1/shoppers/me/carts/active/tax-registrations/schema:
    get:
      tags:
      - "Tax Registration"
      summary: "Cart tax registration schema"
      description: "Gets the corresponding JSON Schema for attaching tax registrations\
        \ to a cart. For schema definition, please refer to JSON Schema Specification\
        \ for more information.\n\nNotes: Below path has been deprecated.\\\nGET /carts/{cartId}/tax-registrations/schema\n"
      parameters:
      - name: "apiKey"
        in: "query"
        description: "The client identifier used to authorize the request. You must\
          \ specify either an `apiKey` or `token`."
        required: false
        schema:
          type: "string"
      - name: "token"
        in: "query"
        description: "The customer's ID. You must specify either an `apiKey` or `token`."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxRegistrationsSchema"
  /v1/shoppers/me/carts/active/tax-registrations:
    post:
      tags:
      - "Tax Registration"
      summary: "Update tax registration on cart"
      description: "Updates the tax regitrations data to the customer's cart.\n\n\
        Notes: Below path has been deprecated.\\\nPOST /carts/{cartId}/tax-registrations\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Authorized or anonymous token for a customer."
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Tax Registrations that need to be applied to the cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxRegistrations"
        required: true
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxRegistrations"
        "400":
          description: "* missing-information\n* missing-customer-type\n* missing-tax-registrations\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/missing-information-ext"
                - $ref: "#/components/schemas/missing-customer-type-ext"
                - $ref: "#/components/schemas/missing-tax-registrations-ext"
        "409":
          description: "* vat-exemption-failure\n* invalid-customer-type\n* missing-tax-identification\n\
            * invalid-tax-identification\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/vat-exemption-failure-ext"
                - $ref: "#/components/schemas/invalid-customer-type-ext"
                - $ref: "#/components/schemas/missing-tax-identification-ext"
                - $ref: "#/components/schemas/invalid-tax-identification-ext"
    delete:
      tags:
      - "Tax Registration"
      summary: "Remove tax registration on cart"
      description: "Remove the tax regitrations data from customer's cart.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Authorized or anonymous token for a customer."
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful response."
        "409":
          description: "* vat-exemption-failure\n"
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/vat-exemption-failure-ext"
  /v1/shoppers/me/carts/active (unit price):
    post:
      tags:
      - "Price override"
      summary: "Unit Price Override"
      description: "Override unit price of one product with encrypted request body.\n"
      requestBody:
        description: "Cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartUnitPriceOverrideRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "*  Invalid Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequest"
  /v1/shoppers/me/carts/active (TaxInclusiveOverride):
    post:
      tags:
      - "Price override"
      summary: "Apply a tax-inclusive override"
      description: "\"TaxInclusiveOverride\" flag only work when using with \"Price\
        \ Override\".\n  For example: Send POST request to change TaxInclusiveOverride\
        \ flag (not encrypted),\n  then Send POST request to do Price Override(encrypted).\n\
        \nRefer to the design document for the configuration and Encryption setting:\n\
        https://confluence.digitalriver.com/pages/viewpage.action?pageId=42477783\n"
      requestBody:
        description: "Cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartTaxInclusiveOverrideRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "*  Invalid Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequest"
  /v1/shoppers/me/carts/active (line Item price):
    post:
      tags:
      - "Price override"
      summary: "Line Item Price Override"
      description: "Override the aggregate price of one product with encrypted request\
        \ body.\n\nRefer to the design document for the configuration and Encryption\
        \ setting:\nhttps://confluence.digitalriver.com/pages/viewpage.action?spaceKey=SE&title=CAPI-261+-+Line+Item+Price+Override\n"
      requestBody:
        description: "Cart."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartLineItemPriceOverrideRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultCart"
                - $ref: "#/components/schemas/ExpandedCart"
        "400":
          description: "*  Invalid Request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequest"
  /v1/shoppers/me/orders:
    get:
      tags:
      - "Orders"
      summary: "Get the shopper orders"
      description: "Use this method to retrieve the history of orders for a shopper.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderState"
        in: "query"
        description: "Specifies the current state of the order. The possible values\
          \ are as follows: Open, In Process, Cancelled, Submitted, Complete, Dispute,\
          \ In Review, Source Pending Funds, Source Pending Redirect, and Charge Pending."
        required: false
        schema:
          type: "string"
      - name: "pageNumber"
        in: "query"
        description: "Specify the page to display from the result pages.  Default\
          \ set to 10."
        required: false
        schema:
          type: "string"
      - name: "pageSize"
        in: "query"
        description: "Specify the maximum number of items to include in each page."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOrders"
                - $ref: "#/components/schemas/ExpandedOrders"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/orders/{orderId}:
    get:
      tags:
      - "Orders"
      summary: "Get shopper order"
      description: "To get a shopper's order by ID, specify the order ID in the {id}\
        \ URI path parameter.\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier."
        required: true
        schema:
          type: "string"
      - name: "orderState"
        in: "query"
        description: "Specifies the current state of the order. The possible values\
          \ are as follows. Open, In Process, Cancelled, or Submitted."
        required: true
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOrder"
                - $ref: "#/components/schemas/ExpandedOrder"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/order-lookup:
    post:
      tags:
      - "Order Lookup"
      summary: "Get your orders"
      description: "Get your order(s).\n\nSeveral ways to get your orders:\n\n* an\
        \ authenticated shopper token, creditCardLastDigits, emailAddress\n* an anonymous\
        \ shopper token, creditCardLastDigits, emailAddress\n* an anonymous shopper\
        \ token, orderId, password\n"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized or anonymous token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: "object"
              properties:
                creditCardLastDigits:
                  type: "string"
                  description: "The last four digits of the shopper's credit card."
                emailAddress:
                  type: "string"
                  description: "The shopper's email address. The emailAddress requires\
                    \ the creditCardLastDigits."
                orderId:
                  type: "string"
                  description: "Provide the shopper's order identifier. The orderId\
                    \ requires a password."
                password:
                  type: "string"
                  description: "The shopper's password."
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/DefaultOrderLookup"
                - $ref: "#/components/schemas/ExpandedOrderLookup"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/shoppers/me/orders/{orderId}/returns:
    get:
      tags:
      - "Returns"
      summary: "Retrieve all returns for a specified order"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier."
        required: true
        schema:
          type: "string"
      - name: "accept"
        in: "header"
        description: "Specifies the acceptable media type for the response."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultReturns"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
    post:
      tags:
      - "Returns"
      summary: "Request the return of one or more line items in an order"
      parameters:
      - name: "token"
        in: "query"
        description: "Provide the authorized token for a shopper."
        required: false
        schema:
          type: "string"
      - name: "orderId"
        in: "path"
        description: "Provide the order's identifier."
        required: true
        schema:
          type: "string"
      - name: "accept"
        in: "header"
        description: "Specifies the acceptable media type for the response."
        required: false
        schema:
          type: "string"
      - name: "expand"
        in: "query"
        description: "Use the expand query parameter when you want additional fields\
          \ to appear in the response. The expand query parameter provides more fields\
          \ in the response. Expanding resources reduces the number of API calls required\
          \ to accomplish a task."
        required: false
        schema:
          type: "string"
      - name: "fields"
        in: "query"
        description: "Specify the fields that you want to appear in the response.\
          \ Filtering the fields returned in the response can conserve bandwidth and\
          \ accelerate response time."
        required: false
        schema:
          type: "string"
      - name: "format"
        in: "query"
        description: "Override the default format of XML for the Authorize Shopper\
          \ API. Valid values are XML and JSON."
        required: false
        schema:
          type: "string"
      requestBody:
        description: "Return Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnRequest"
      responses:
        "200":
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultReturns"
        "400":
          description: "* Line item ID is missing\n* Return reason is missing\n* Return\
            \ object is missing\n* Return reason is missing\n* Line items to return\
            \ are missing\n* Line item quantity IDs are missing\n* Specified quantity\
            \ to return is invalid\n* Return reason is invalid\n* Cannot resolve line\
            \ item for specified line item ID\n* Line item exceeds return window for\
            \ specified line item ID\n* Line item had a problem while fetching the\
            \ expiration date for specified line item ID\n* Line item has a line item\
            \ level satisfaction refund for specified line item ID\n* Line item is\
            \ linked to a subscription\n* Specified line item ID is not physical\n\
            * Specified line item quantity IDs are not associated with the specified\
            \ line item\n* Line item quantity IDs for this partial return are missing\n\
            * Specified line item quantity IDs are not eligible for return for the\
            \ specified line item ID\n* Quantity of line items to return is greater\
            \ than the expected return quantity for the specified line item ID\n*\
            \ Request contains no line items\n* Return reasons for the specified order\
            \ ID are missing\n* Return request cannot be null\n* Cannot resolve the\
            \ specified order ID for the order\n* Product the shopper wants to return\
            \ is part of a product combination\n* Site does not accept returns\n*\
            \ Order has order level satisfaction refund for specified order ID\n*\
            \ Specified order ID is not eligible for return\n* Line item return quantity\
            \ must be greater than 0 for the specified line item\n* Cannot resolve\
            \ the site for the specified order ID\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostReturnsFailures"
        "401":
          description: "*  Invalid Token\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidToken"
  /v1/subscriptions/{subId}/cancel:
    post:
      tags:
      - "Manage Subscription"
      summary: "Cancel Subscription"
      description: "This will cancel the subscription by subscription Id and Subscription\
        \ state changes to Cancelled"
      operationId: "cancelSubscription"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelSubscriptionRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
        "409":
          description: "*  Conflict\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictError"
  /v1/subscriptions/{subId}/renewal-quantity:
    post:
      tags:
      - "Subscription Renewal"
      summary: "Change Subscription Renewal Quantity"
      description: "This will change the subscription renewal quantity."
      operationId: "changeSubscriptionRenewalQuantity"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeRenewalQuantityRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions/{subId}/renewal-type:
    post:
      tags:
      - "Subscription Renewal"
      summary: "Update Subscription Renewal Type"
      description: "This API will convert subscription renewal type. The renewal type\
        \ change allowed only for subscription states - Subscribed, Pending activation\
        \ and Trial."
      operationId: "updateRenewalType"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenewalTypeChangeRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions/{subId}/reduce:
    post:
      tags:
      - "Immediate Midterm Change"
      summary: "Reduce Subscription's Quantity Or Addons"
      description: "This API to change the subscription quantity immediately so that\
        \ client have increased subscription management capability via API"
      operationId: "reduceSubscription"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) - Client Admin\
          \ key or Full access token"
        required: true
        schema:
          type: "string"
      requestBody:
        $ref: "#/components/requestBodies/SubAddOnChangeRequestForReduce"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions/{subId}/payment-source:
    post:
      tags:
      - "Payment"
      summary: "Update Subscription Payment Source"
      description: "This will associate new billing option to existing subscription\
        \ by payment source"
      operationId: "updatePaymentSource"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentSourceChangeRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions/{subId}/payment-option:
    post:
      tags:
      - "Payment"
      summary: "Update Subscription Payment Option"
      description: "This will associate new billing option to existing subscription\
        \ by payment option"
      operationId: "updatePaymentOption"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubPaymentOptionChangeRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions/{subId}/ship-to-address:
    post:
      tags:
      - "Address"
      summary: "Modify Subscription Shipping Address"
      description: "This API to modify the subscription Shipping Address."
      operationId: "modifyShippingAddress"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubShippingAddressChangeRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions/{subId}/orders:
    get:
      tags:
      - "Order"
      summary: "List All Orders of the Subscription"
      description: "This API will list all orders associated with subscription. The\
        \ most recent order id will be on the top of list."
      operationId: "getSubscriptionOrders"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) - Client Admin\
          \ key or Full access token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderInfoList"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
  /v1/subscriptions/{subId}/pending-actions:
    get:
      tags:
      - "Pending Action"
      summary: "Get All Subscription Pending Actions"
      description: "This will get all pending action of subscription by subscription\
        \ id"
      operationId: "getSubscriptionPendingActions"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionActionInfo"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
  /v1/subscriptions:
    get:
      tags:
      - "Retrieve Subscription"
      summary: "Get All Subscription By Shopper Id or External Reference Id"
      description: "Get all subscriptions by shopper id or external reference Id"
      operationId: "getSubscriptionsInfo"
      parameters:
      - name: "Shopper Id"
        in: "query"
        description: "Shopper Id or External Reference Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionInfoList"
        "401":
          description: "* Please verify your API key and secret (if applicable) is\
            \ correct.\n"
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
  /v1/subscriptions/{subId}:
    get:
      tags:
      - "Retrieve Subscription"
      summary: "Get Subscription By Subscription Id"
      description: "Get subscription details by subscription Id"
      operationId: "getSubscriptionInfo"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) or Full access\
          \ token"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionInfo"
        "401":
          description: "* Please verify your API key and secret (if applicable) is\
            \ correct.\n"
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
  /v1/subscriptions/{subscriptionId}/email:
    post:
      tags:
      - "Email Updater"
      summary: "Updated Subscription Billing and Shipping email address"
      description: "This will updated Subscription's Billing Option's Billing Address\
        \ email address and Subscription's Shipping Address email address."
      operationId: "emailUpdater"
      parameters:
      - name: "subId"
        in: "path"
        description: "Subscription Id"
        required: true
        schema:
          type: "string"
      - name: "token"
        in: "header"
        description: "Basic authorization (dispatch Key and Secret) - Client Admin\
          \ key or Full access token"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailUpdaterRequest"
      responses:
        "202":
          description: "Accepted"
        "401":
          description: "Please verify your API key and secret (if applicable) is correct."
        "404":
          description: "*  Not found\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFound"
        "400":
          description: "*  Bad request\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "403":
          description: "*  Access Denied\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenError"
components:
  schemas:
    DefaultShopperAddresses:
      type: "object"
      properties:
        addresses:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/addresses"
            address:
              type: "array"
              items:
                $ref: "#/components/schemas/DefaultShopperAddress"
    ExpandedShopperAddresses:
      type: "object"
      properties:
        addresses:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/addresses"
            address:
              type: "array"
              items:
                $ref: "#/components/schemas/ExpandedAddress"
    DefaultShopperAddress:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/addresses/1234567890"
        nickName:
          type: "string"
          example: "test"
        isDefault:
          type: "string"
          example: "true"
    DefaultShopperAddressById:
      type: "object"
      properties:
        address:
          $ref: "#/components/schemas/DefaultAddress"
    ExpandedShopperAddressById:
      type: "object"
      properties:
        address:
          $ref: "#/components/schemas/ExpandedAddress"
    PostShopperAddressRequest:
      type: "object"
      properties:
        address:
          type: "object"
          properties:
            nickName:
              type: "string"
              description: "The nick name of the address."
              example: "test"
            isDefault:
              type: "string"
              example: "true"
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Jon"
            lastName:
              type: "string"
              example: "Doe"
            companyName:
              type: "string"
              description: "Company Name"
              example: "Digital River"
            line1:
              type: "string"
              description: "The first line of the address."
              example: "10380 Bren Road West"
            line2:
              type: "string"
              description: "The second line of the address."
            line3:
              type: "string"
              description: "The third line of the address."
            city:
              type: "string"
              description: "City or town."
              example: "Minnetonka"
            countrySubdivision:
              type: "string"
              description: "State/County/Province/Region."
              example: "MN"
            postalCode:
              type: "string"
              description: "ZIP or postal code."
              example: "55343"
            country:
              type: "string"
              description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
                \ for a complete list of country codes."
              example: "US"
            countryName:
              type: "string"
              description: "Country."
              example: "United States"
            countyName:
              type: "string"
              description: "County."
              example: "Hennepin"
            phoneNumber:
              type: "string"
              description: "The shopper's phone number."
              example: "952-253-1234"
            phoneticFirstName:
              type: "string"
              description: "The shopper's Japanese Katakana first name. (Optional,\
                \ usually for Japanese locale.)"
              example: "クリス"
            phoneticLastName:
              type: "string"
              description: "The shopper's Japanese Katakana last name. (Optional,\
                \ usually for Japanese locale.)"
              example: "ミラー"
            division:
              type: "string"
              description: "The shopper's company departmant name. (Optional, usually\
                \ for Japanese locale.)"
              example: "製品開発"
    PostCartAddressRequest:
      type: "object"
      properties:
        address:
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Jon"
            lastName:
              type: "string"
              example: "Doe"
            companyName:
              type: "string"
              description: "Company Name"
              example: "Digital River"
            line1:
              type: "string"
              description: "The first line of the address."
              example: "10380 Bren Road West"
            line2:
              type: "string"
              description: "The second line of the address."
            line3:
              type: "string"
              description: "The third line of the address."
            city:
              type: "string"
              description: "City or town."
              example: "Minnetonka"
            countrySubdivision:
              type: "string"
              description: "State/County/Province/Region."
              example: "MN"
            postalCode:
              type: "string"
              description: "ZIP or postal code."
              example: "55343"
            country:
              type: "string"
              description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
                \ for a complete list of country codes."
              example: "US"
            countryName:
              type: "string"
              description: "Country."
              example: "United States"
            countyName:
              type: "string"
              description: "County."
              example: "Hennepin"
            phoneNumber:
              type: "string"
              description: "The shopper's phone number."
              example: "952-253-1234"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "automatedTester@digitalriver.com"
            phoneticFirstName:
              type: "string"
              description: "The shopper's Japanese Katakana first name. (Optional,\
                \ usually for Japanese locale.)"
              example: "クリス"
            phoneticLastName:
              type: "string"
              description: "The shopper's Japanese Katakana last name. (Optional,\
                \ usually for Japanese locale.)"
              example: "ミラー"
            division:
              type: "string"
              description: "The shopper's company departmant name. (Optional, usually\
                \ for Japanese locale.)"
              example: "製品開発"
    PostCartBillingAddressRequest:
      type: "object"
      properties:
        address:
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Jon"
            lastName:
              type: "string"
              example: "Doe"
            companyName:
              type: "string"
              description: "Company Name"
              example: "Digital River"
            line1:
              type: "string"
              description: "The first line of the address."
              example: "10380 Bren Road West"
            line2:
              type: "string"
              description: "The second line of the address."
            line3:
              type: "string"
              description: "The third line of the address."
            city:
              type: "string"
              description: "City or town."
              example: "Minnetonka"
            countrySubdivision:
              type: "string"
              description: "State/County/Province/Region."
              example: "MN"
            postalCode:
              type: "string"
              description: "ZIP or postal code."
              example: "55343"
            country:
              type: "string"
              description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
                \ for a complete list of country codes."
              example: "US"
            countryName:
              type: "string"
              description: "Country."
              example: "United States"
            countyName:
              type: "string"
              description: "County."
              example: "Hennepin"
            phoneNumber:
              type: "string"
              description: "The shopper's phone number."
              example: "952-253-1234"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "automatedTester@digitalriver.com"
            phoneticFirstName:
              type: "string"
              description: "The shopper's Japanese Katakana first name. (Optional,\
                \ usually for Japanese locale.)"
              example: "クリス"
            phoneticLastName:
              type: "string"
              description: "The shopper's Japanese Katakana last name. (Optional,\
                \ usually for Japanese locale.)"
              example: "ミラー"
            division:
              type: "string"
              description: "The shopper's company departmant name. (Optional, usually\
                \ for Japanese locale.)"
              example: "製品開発"
            title:
              type: "string"
              description: "The shopper's title. (Optional, usually for France locale.)"
              example: "M"
    DefaultAddress:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/addresses/1234567890"
        id:
          type: "integer"
          example: 1655007697
        nickName:
          type: "string"
          description: "The nick name of the address."
          example: "test"
        isDefault:
          type: "string"
          example: "true"
        firstName:
          type: "string"
          description: "The shopper's first name."
          example: "Jon"
        lastName:
          type: "string"
          example: "Doe"
        line1:
          type: "string"
          description: "The first line of the address."
          example: "10380 Bren Road West"
        line2:
          type: "string"
          description: "The second line of the address."
        city:
          type: "string"
          description: "City or town."
          example: "Minnetonka"
        countrySubdivision:
          type: "string"
          description: "State/County/Province/Region."
          example: "MN"
        postalCode:
          type: "string"
          description: "ZIP or postal code."
          example: "55343"
        country:
          type: "string"
          description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
            \ for a complete list of country codes."
          example: "US"
        countryName:
          type: "string"
          description: "Country."
          example: "United States"
        phoneNumber:
          type: "string"
          description: "The shopper's phone number."
          example: "952-253-1234"
        phoneticFirstName:
          type: "string"
          description: "The shopper's Japanese Katakana first name. (Optional, usually\
            \ for Japanese locale.)"
          example: "クリス"
        phoneticLastName:
          type: "string"
          description: "The shopper's Japanese Katakana last name. (Optional, usually\
            \ for Japanese locale.)"
          example: "ミラー"
        division:
          type: "string"
          description: "The shopper's company departmant name. (Optional, usually\
            \ for Japanese locale.)"
          example: "製品開発"
    ExpandedAddress:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/addresses/1234567890"
        id:
          type: "integer"
          example: 1655007697
        nickName:
          type: "string"
          description: "The nick name of the address."
          example: "test"
        isDefault:
          type: "string"
          example: "true"
        firstName:
          type: "string"
          description: "The shopper's first name."
          example: "Jon"
        lastName:
          type: "string"
          example: "Doe"
        companyName:
          type: "string"
          description: "Company Name"
          example: "Digital River"
        line1:
          type: "string"
          description: "The first line of the address."
          example: "10380 Bren Road West"
        line2:
          type: "string"
        line3:
          type: "string"
          description: "The third line of the address."
        city:
          type: "string"
          description: "City or town."
          example: "Minnetonka"
        countrySubdivision:
          type: "string"
          description: "State/County/Province/Region."
          example: "MN"
        postalCode:
          type: "string"
          description: "ZIP or postal code."
          example: "55343"
        country:
          type: "string"
          description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
            \ for a complete list of country codes."
          example: "US"
        countryName:
          type: "string"
          description: "Country."
          example: "United States"
        phoneNumber:
          type: "string"
          description: "The shopper's phone number."
          example: "952-253-1234"
        countyName:
          type: "string"
          description: "County."
          example: "Hennepin"
        phoneticFirstName:
          type: "string"
          description: "The shopper's Japanese Katakana first name. (Optional, usually\
            \ for Japanese locale.)"
          example: "クリス"
        phoneticLastName:
          type: "string"
          description: "The shopper's Japanese Katakana last name. (Optional, usually\
            \ for Japanese locale.)"
          example: "ミラー"
        division:
          type: "string"
          description: "The shopper's company departmant name. (Optional, usually\
            \ for Japanese locale.)"
          example: "製品開発"
    ApplyPaymentMethodLegacy:
      type: "object"
      properties:
        paymentMethod:
          type: "object"
          properties:
            type:
              type: "string"
              example: "Discover"
            creditCard:
              type: "object"
              properties:
                expirationMonth:
                  type: "integer"
                  description: "One to two digits representing the expiration month"
                  example: 8
                expirationYear:
                  type: "integer"
                  description: "Four digits representing the expiration year."
                  example: 2025
                cardNumber:
                  type: "string"
                  example: "4321432143214321"
                cardSecurityCode:
                  type: "string"
                  example: "123"
        shopper:
          type: "object"
          properties:
            ipAddress:
              type: "string"
              example: "192.168.100.101"
    ApplyPaymentMethodPaymentSource:
      type: "object"
      properties:
        paymentMethod:
          type: "object"
          properties:
            sourceId:
              type: "string"
              description: "A unique identifier for the payment source."
              example: "5d3c8552-6f47-4335-a4be-f766526a453c"
        shopper:
          type: "object"
          properties:
            ipAddress:
              type: "string"
              example: "192.168.100.102"
    DetachPaymentMethodPaymentSource:
      type: "object"
      properties:
        paymentMethod:
          type: "object"
          properties:
            sourceId:
              type: "string"
              description: "A unique identifier for the payment source."
              example: "5d3c8552-6f47-4335-a4be-f766526a453c"
    PaymentOptionsRequestLegacy:
      type: "object"
      properties:
        paymentOption:
          type: "object"
          properties:
            nickName:
              type: "string"
              example: "DRBank"
            isDefault:
              type: "string"
              example: "true"
            creditCard:
              type: "object"
              properties:
                expirationMonth:
                  type: "integer"
                  description: "One to two digits representing the expiration month."
                expirationYear:
                  type: "integer"
                  description: "Four digits representing the expiration year."
                  example: 2020
                displayableNumber:
                  type: "string"
                  description: "The card number, only display the last four digits.\
                    \ (e.g. ************1111)"
                  example: "4321432143214321"
                cardSecurityCode:
                  type: "string"
                  example: "123"
                type:
                  type: "string"
                  example: "Visa"
        shopper:
          type: "object"
          properties:
            ipAddress:
              type: "string"
              example: "192.168.100.101"
    PaymentOptionsRequestPaymentSource:
      type: "object"
      properties:
        paymentOption:
          type: "object"
          properties:
            nickName:
              type: "string"
              example: "DRBank"
            isDefault:
              type: "string"
              example: "true"
            sourceId:
              type: "string"
              description: "A unique identifier for the payment source."
              example: "c25fcccc-6e57-4d93-bafb-a6765510a422"
        shopper:
          type: "object"
          properties:
            ipAddress:
              type: "string"
              example: "192.168.100.102"
    DefaultCart:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active"
        paymentMethods:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/payment-methods"
        applyPaymentMethod:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/apply-payment-method"
        submitCart:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/submit-cart"
        webCheckout:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/web-checkout"
        id:
          type: "string"
          example: "47278010023"
        lineItems:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items"
            lineItem:
              type: "array"
              items:
                $ref: "#/components/schemas/DefaultLineItem"
        totalItemsInCart:
          type: "string"
          example: "1"
        businessEntityCode:
          type: "string"
          example: "DR_INC-ENTITY"
        billingAddress:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/billing-address"
        shippingAddress:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-address"
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
        payment:
          type: "object"
          properties:
            name:
              type: "string"
              description: "The given name of this payment."
              example: "Discover"
            displayableNumber:
              type: "string"
              description: "The card number, only display the last four digits. (e.g.\
                \ ************1111)"
              example: "************4321"
            expirationMonth:
              type: "integer"
              description: "One to two digits representing the expiration month."
            expirationYear:
              type: "integer"
              description: "Four digits representing the expiration year."
              example: 2030
          description: "Payment information, displayed when using a non-Payment Source\
            \ created payment."
        paymentSession:
          $ref: "#/components/schemas/PaymentSessionWithAmount"
        shippingOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options"
        taxInclusive:
          type: "boolean"
          description: "The price list setup for the currency.\n  * If true, the price\
            \ list is set to tax inclusive.\n  * If false, the price list is set to\
            \ tax exclusive.\n"
          example: true
        landedCostState:
          $ref: "#/components/schemas/CartLandedCostState"
        pricing:
          $ref: "#/components/schemas/CartOrderLevelDefaultPrice"
        termsOfSalesAcceptance:
          type: "string"
          description: "To pass whether or not the customer accepted the Terms of\
            \ Service."
          example: "true"
        chargeType:
          type: "string"
          description: "Only visible when chargeType is explicitly provided."
          example: "moto"
        customerType:
          type: "string"
          description: "Shopper Type applied to this cart.  B as Business, I as Individual."
          example: "B"
        taxRegistrations:
          $ref: "#/components/schemas/TaxRegistrations"
        organizationId:
          type: "string"
          description: "Only visible when organizationId is explicityly provided."
          example: "digitalriver12345"
        warnings:
          $ref: "#/components/schemas/CouponCodeNotEligibleWarning"
    CartWithSubscriptionInfo:
      type: "object"
      properties:
        lineItems:
          type: "object"
          properties:
            lineItem:
              type: "array"
              items:
                type: "object"
                properties:
                  subscriptionInfo:
                    type: "object"
                    properties:
                      autoRenewal:
                        type: "boolean"
                        description: "If true indicates that renewals for this subscription\
                          \ is auto-renewal (as opposed to manual)."
                        example: true
                      terms:
                        type: "string"
                        description: "The terms to the customer for recurring purchases."
                        example: "subscription term"
                      freeTrial:
                        type: "boolean"
                        description: "If true indicates this subscription is a free\
                          \ trial."
                        example: false
                      startTime:
                        type: "string"
                        description: "The start date of subscription in ISO 8601 format\
                          \ yyyy-MM-dd'T'HH:mm:ss.SSS'Z'."
                        example: "2020-08-01T00:00:00.000Z"
                      endTime:
                        type: "string"
                        description: "The end date of subscription in ISO 8601 format\
                          \ yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
                        example: "2021-08-01T00:00:00.000Z"
                      billingAgreementId:
                        type: "string"
                        description: "Digital River billing agreement ID. It represents\
                          \ the terms the customer agreed to when they stored their\
                          \ card details or chose to apply them to any kind of recurring\
                          \ purchase. The ID of the agreement can then be referenced\
                          \ for subsequent purchases, which gives us the ability to\
                          \ tie them together."
                        example: "6ed70eb4-da79-46f1-9e7d-210c043d3c9e"
                    description: "Basic subscription information related data from\
                      \ an external subscription engine."
                  billingOptimization:
                    type: "object"
                    properties:
                      subscriptionId:
                        type: "string"
                        description: "The ID of the subscription."
                        example: "555444"
                      segmentId:
                        type: "string"
                        description: "Segment Id of each renewal. Unique for each\
                          \ renewal term, should change after every renewal. The initial\
                          \ acquisition could be thinking as \"1\" ( thought it doesn’\
                          t matter much in initial acquisition), then each renewal\
                          \ thereafter increment from “2” upwards would work. As long\
                          \ as segmentId is the unique id representing each renewal\
                          \ term."
                        example: "12"
                      renewalAttempNumber:
                        type: "number"
                        description: "Billing attempt number for current renewal,\
                          \ should reset to 1 after every successful renewal."
                        example: 3
                    description: "Use the ECO (Expired Card Optimizer) billing optimization\
                      \ tool for a 3rd party subscription."
            customAttributes:
              type: "object"
              properties:
                attribute:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        description: "hasExternalSubscriptionInfo"
                        example: "hasExternalSubscriptionInfo"
                      type:
                        type: "string"
                        example: "Boolean"
                      value:
                        type: "boolean"
                        example: true
            chargeType:
              type: "string"
              description: "Only visible when chargeType is explicitly provided."
              example: "customer_initiated"
    CartWithSubscriptionOverride:
      type: "object"
      properties:
        customAttributes:
          type: "object"
          properties:
            attribute:
              type: "array"
              items:
                type: "object"
                properties:
                  name:
                    type: "string"
                    description: "There will be Two attributes, SubscriptionActivationDate\
                      \ and SubscriptionExpireDate."
                    example: "SubscriptionActivationDate"
                  type:
                    type: "string"
                    example: "string"
                  value:
                    type: "string"
                    example: "Sat Sep 12 00:00:00 CDT 2020"
    SubmitCartRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            ipAddress:
              type: "string"
              description: "Provide the shopper's IP address for the current session."
              example: "10.24.2.28"
            termsOfSalesAcceptance:
              type: "string"
              description: "To pass whether or not the customer accepted the Terms\
                \ of Service."
              example: "true"
    CartRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            ipAddress:
              type: "string"
              description: "Provide the shopper's IP address for the current session."
              example: "10.24.2.28"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
            suppressOrderConfirmationEmail:
              type: "boolean"
              description: "When true, suppresses the order confirmation email for\
                \ an order. If you want to use this feature, contact your Customer\
                \ Success Manager."
              example: true
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "array"
                  items:
                    properties:
                      quantity:
                        type: "string"
                        example: "1"
                      product:
                        type: "object"
                        properties:
                          id:
                            type: "integer"
                            example: 1234
                      customAttributes:
                        $ref: "#/components/schemas/DefaultCustomAttributes"
            billingAddress:
              $ref: "#/components/schemas/BillingAddress"
            shippingAddress:
              $ref: "#/components/schemas/ShippingAddress"
            termsOfSalesAcceptance:
              type: "string"
              description: "To pass whether or not the customer accepted the Terms\
                \ of Service."
              example: "true"
            chargeType:
              type: "string"
              description: "Use this field to specify the charge type of your transaction.\n\
                \nThe allowed values are:\n  * customer_initiated: customer initiates\
                \ the transaction, like first purchase of the subscription order.\n\
                \  * merchant_initiated: merchant initiates the transaction, like\
                \ the upcoming subscription auto renewals.\n  * moto: customer service\
                \ initiates the transaction, like a Mail Order or Telephone Order\n"
              example: "moto"
            organizationId:
              type: "string"
              description: "The identifier used to identify the business. This is\
                \ a string can be up to 50 characters in length. Pass in buyer comanyId\
                \ to use TreviPay."
              example: "digitalriver12345"
    CartUnitPriceOverrideRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "object"
                  properties:
                    quantity:
                      type: "string"
                      example: "2"
                    product:
                      type: "object"
                      properties:
                        id:
                          type: "string"
                          example: "1234"
                    pricing:
                      type: "object"
                      properties:
                        salePrice:
                          type: "object"
                          properties:
                            currency:
                              type: "string"
                              example: "USD"
                            value:
                              type: "number"
                              example: 3.33
                          description: "The value to override unit price (listPrice)."
    CartLineItemPriceOverrideRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "object"
                  properties:
                    quantity:
                      type: "string"
                      example: "2"
                    product:
                      type: "object"
                      properties:
                        id:
                          type: "string"
                          example: "1234"
                    pricing:
                      type: "object"
                      properties:
                        itemPrice:
                          type: "object"
                          properties:
                            currency:
                              type: "string"
                              example: "USD"
                            value:
                              type: "number"
                              example: 6.66
                          description: "The value to override total item price with\
                            \ quantity (salePriceWithQuantity)."
    CartTaxInclusiveOverrideRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            customAttributes:
              type: "object"
              properties:
                attribute:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        description: "TaxInclusiveOverride"
                        example: "TaxInclusiveOverride"
                      type:
                        type: "string"
                        example: "Boolean"
                      value:
                        type: "boolean"
                        example: true
    SubscriptionExternalEngineRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "object"
                  properties:
                    quantity:
                      type: "string"
                      example: "2"
                    product:
                      type: "object"
                      properties:
                        id:
                          type: "string"
                          example: "1234"
                    subscriptionInfo:
                      type: "object"
                      properties:
                        autoRenewal:
                          type: "boolean"
                          description: "If true indicates that renewals for this subscription\
                            \ is auto-renewal (as opposed to manual)."
                          example: true
                        terms:
                          type: "string"
                          description: "The terms to the customer for recurring purchases."
                          example: "subscription terms"
                        freeTrial:
                          type: "boolean"
                          description: "If true indicates this subscription is a free\
                            \ trial."
                          example: false
                        startTime:
                          type: "string"
                          description: "The start date of subscription in ISO 8601\
                            \ format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'."
                          example: "2020-08-01T00:00:00.000Z"
                        endTime:
                          type: "string"
                          description: "The end date of subscription in ISO 8601 format\
                            \ yyyy-MM-dd'T'HH:mm:ss.SSS'Z'."
                          example: "2021-08-01T00:00:00.000Z"
                        billingAgreementId:
                          type: "string"
                          description: "Digital River billing agreement ID. It represents\
                            \ the terms the customer agreed to when they stored their\
                            \ card details or chose to apply them to any kind of recurring\
                            \ purchase. The ID of the agreement can then be referenced\
                            \ for subsequent purchases, which gives us the ability\
                            \ to tie them together."
                          example: "6ed70eb4-da79-46f1-9e7d-210c043d3c9e"
                      description: "Basic subscription information related data from\
                        \ an external subscription engine."
                    billingOptimization:
                      type: "object"
                      properties:
                        subscriptionId:
                          type: "string"
                          description: "The ID of the subscription."
                          example: "555444"
                        segmentId:
                          type: "string"
                          description: "Segment Id of each renewal. Unique for each\
                            \ renewal term, should change after every renewal. The\
                            \ initial acquisition could be thinking as \"1\" ( thought\
                            \ it doesn’t matter much in initial acquisition), then\
                            \ each renewal thereafter increment from “2” upwards would\
                            \ work. As long as segmentId is the unique id representing\
                            \ each renewal term."
                          example: "12"
                        renewalAttempNumber:
                          type: "number"
                          description: "Billing attempt number for current renewal,\
                            \ should reset to 1 after every successful renewal."
                          example: 3
                      description: "Use the ECO (Expired Card Optimizer) billing optimization\
                        \ tool for a 3rd party subscription."
            chargeType:
              type: "string"
              description: "When using external subscription engine (non-Digital River\
                \ subscription engine), use this field to specify the charge type\
                \ of your transaction. This value must be used togehter with subscription\
                \ info block in request body, if subscription info block does not\
                \ present in request, the input chargeType will be ignored.\n\nThe\
                \ allowed values are:\n  * customer_initiated: customer initiates\
                \ the transaction, like first purchase of the subscription order.\n\
                \  * merchant_initiated: merchant initiates the transaction, like\
                \ the upcoming subscription auto renewals.\n  * moto: customer service\
                \ initiates the transaction, like a Mail Order or Telephone Order\n"
              example: "customer_initiated"
    SubscriptionOverrideDateRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "object"
                  properties:
                    quantity:
                      type: "string"
                      example: "2"
                    product:
                      type: "object"
                      properties:
                        id:
                          type: "string"
                          example: "1234"
                    subscriptionOverrideInfo:
                      type: "object"
                      properties:
                        expirationDate:
                          type: "string"
                          description: "The expiration date of subscription in ISO\
                            \ 8601 format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.\n* When user\
                            \ input time \"2020-10-11T01:23:48.000Z\" in request,\
                            \ GC converts it to Java Date object (in CST/CDT)\n  and\
                            \ only keep date component (eg. 2020-10-11),ignore time\
                            \ component(eg. T01:23:48.000Z),\n  and then GC DB stores\
                            \ date in CST timezone into line item extended attributes.\n\
                            * When we retrieve the date from database system converts\
                            \ the value to UTC (server timezone) and the date would\
                            \ output as \"2020-10-11T05:00:00.000Z\" (in UTC) in API\
                            \ response.\n"
                          example: "2021-09-13T00:00:00.000Z"
                        activationDate:
                          type: "string"
                          description: "The activation date of subscription in ISO\
                            \ 8601 format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.\n* When user\
                            \ input time \"2020-10-11T01:23:48.000Z\" in request,\
                            \ GC converts it to Java Date object (in CST/CDT)\n  and\
                            \ only keep date component (eg. 2020-10-11), ignore time\
                            \ component(eg. T01:23:48.000Z),\n  and then GC DB stores\
                            \ date in CST timezone into line item extended attributes.\n\
                            * When we retrieve the date from database system converts\
                            \ the value to UTC (server timezone) and the date would\
                            \ output as \"2020-10-11T05:00:00.000Z\" (in UTC) in API\
                            \ response.\n"
                          example: "2020-09-13T00:00:00.000Z"
                        perpetualUnitPrice:
                          type: "object"
                          properties:
                            currencyCode:
                              type: "string"
                              example: "USD"
                            amount:
                              type: "string"
                              example: "56.37"
                      description: "This is to update/override some data in Digital\
                        \ River's subscription engine."
    CartAPITriggerOfferRequest:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      quantity:
                        type: "integer"
                        example: 1
                      product:
                        type: "object"
                        properties:
                          id:
                            type: "string"
                            example: "5181808200"
                appliedProductOffers:
                  type: "object"
                  properties:
                    offer:
                      required:
                      - "offerId"
                      type: "object"
                      properties:
                        offerId:
                          type: "string"
                          description: "Offer Id."
                          example: "882920011"
                        externalReferenceId:
                          type: "string"
                          description: "Provide the external reference identifier\
                            \ for your product. The externalReferenceId is your company's\
                            \ internal identifier or stock keeping unit (SKU) for\
                            \ a product used when creating a line item with companyId.\
                            \ If you do not explicitly provide the companyId when\
                            \ creating a line item using the externalReferenceId,\
                            \ the system will use the companyId associated with the\
                            \ API key."
                          example: "unique-id"
                        customDescription:
                          type: "string"
                          example: "Exclusive on our shop!!!"
                    shippingOffer:
                      required:
                      - "offerId"
                      type: "object"
                      properties:
                        offerId:
                          type: "string"
                          description: "The shipping offer's identifier."
                          example: "882920011"
                        externalReferenceId:
                          type: "string"
                          description: "Provide the external reference identifier\
                            \ for your product. The externalReferenceId is your company's\
                            \ internal identifier or stock keeping unit (SKU) for\
                            \ a product used when creating a line item with companyId.\
                            \  Either offerId or externalReferenceId is required.\
                            \ Use externalReferenceId only if your site enforces the\
                            \ uniqueness of offer ERID."
                          example: "unique-id"
                        customDescription:
                          type: "string"
                          example: "Exclusive on our shop!!!"
            appliedOrderOffers:
              type: "object"
              properties:
                offer:
                  required:
                  - "offerId"
                  type: "object"
                  properties:
                    offerId:
                      type: "string"
                      description: "The order-level offer's identifier."
                      example: "100029992"
                    externalReferenceId:
                      type: "string"
                      description: "Provide the external reference identifier for\
                        \ your product. The externalReferenceId is your company's\
                        \ internal identifier or stock keeping unit (SKU) for a product\
                        \ used when creating a line item with companyId. Either offerId\
                        \ or externalReferenceId is required. Use externalReferenceId\
                        \ only if your site enforces the uniqueness of offer ERID."
                      example: "unique-id"
                    customDescription:
                      type: "string"
                      example: "Exclusive on our shop!!!"
                shippingOffer:
                  required:
                  - "offerId"
                  type: "object"
                  properties:
                    offerId:
                      type: "string"
                      description: "The order-level shipping offer's identifier."
                      example: "123111333"
                    externalReferenceId:
                      type: "string"
                      description: "Provide the external reference identifier for\
                        \ your product. The externalReferenceId is your company's\
                        \ internal identifier or stock keeping unit (SKU) for a product\
                        \ used when creating a line item with companyId. Either offerId\
                        \ or externalReferenceId is required. Use externalReferenceId\
                        \ only if your site enforces the uniqueness of offer ERID."
                      example: "unique-id"
                    customDescription:
                      type: "string"
                      example: "Exclusive on our shop!!!"
    LineItemAPITriggerOfferRequest:
      type: "object"
      properties:
        lineItems:
          type: "object"
          properties:
            lineItem:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "string"
                    description: "Provide ID for update operation."
                    example: "488822300023"
                  quantity:
                    type: "integer"
                    example: 1
                  product:
                    type: "object"
                    properties:
                      id:
                        type: "string"
                        example: "5181808200"
            appliedProductOffers:
              type: "object"
              properties:
                offer:
                  required:
                  - "offerId"
                  type: "object"
                  properties:
                    offerId:
                      type: "string"
                      description: "The offer's identifier."
                      example: "882920011"
                    externalReferenceId:
                      type: "string"
                      description: "Provide the external reference identifier for\
                        \ your product. The externalReferenceId is your company's\
                        \ internal identifier or stock keeping unit (SKU) for a product\
                        \ used when creating a line item with companyId. Either offerId\
                        \ or externalReferenceId is required. Use externalReferenceId\
                        \ only if your site enforces the uniqueness of offer ERID."
                      example: "unique-id"
                    customDescription:
                      type: "string"
                      example: "Exclusive on our shop!!!"
                shippingOffer:
                  required:
                  - "offerId"
                  type: "object"
                  properties:
                    offerId:
                      type: "string"
                      description: "The shipping offer's identifier."
                      example: "882920011"
                    externalReferenceId:
                      type: "string"
                      description: "Provide the external reference identifier for\
                        \ your product. The externalReferenceId is your company's\
                        \ internal identifier or stock keeping unit (SKU) for a product\
                        \ used when creating a line item with companyId. Either offerId\
                        \ or externalReferenceId is required. Use externalReferenceId\
                        \ only if your site enforces the uniqueness of offer ERID."
                      example: "unique-id"
                    customDescription:
                      type: "string"
                      example: "Exclusive on our shop!!!"
    CartLineItemsRequest:
      type: "object"
      properties:
        lineItems:
          type: "object"
          properties:
            lineItem:
              type: "object"
              properties:
                id:
                  type: "string"
                  description: "Provide an id if line-item is already created."
                  example: "991101014"
                quantity:
                  type: "string"
                  example: "1"
                product:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                      example: 1234
                pricing:
                  type: "object"
                  properties:
                    salePrice:
                      type: "object"
                      properties:
                        currency:
                          type: "string"
                          example: "USD"
                        value:
                          type: "string"
                          example: "10.99"
                customAttributes:
                  $ref: "#/components/schemas/DefaultCustomAttributes"
    ExpandedCart:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active"
        paymentMethods:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/payment-methods"
        webCheckout:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/web-checkout"
        id:
          type: "string"
          example: "47522810023"
        lineItems:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items"
            lineItem:
              type: "array"
              items:
                $ref: "#/components/schemas/ExpandedLineItem"
        testOrder:
          type: "string"
          example: "false"
        sendEmail:
          type: "string"
          example: "true"
        totalItemsInCart:
          type: "string"
          example: "2"
        businessEntityCode:
          type: "string"
          example: "DR_INC-ENTITY"
        billingAddress:
          $ref: "#/components/schemas/BillingAddress"
        shippingAddress:
          $ref: "#/components/schemas/ShippingAddress"
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
        shippingMethod:
          type: "object"
          properties:
            code:
              type: "string"
              example: "5857500"
            description:
              type: "string"
              example: "UPS"
        shippingOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options"
            shippingOption:
              $ref: "#/components/schemas/DefaultShippingOption"
        paymentSession:
          $ref: "#/components/schemas/PaymentSessionWithAmount"
        taxInclusive:
          type: "boolean"
          description: "The price list setup for the currency.\n  * If true, the price\
            \ list is set to tax inclusive.\n  * If false, the price list is set to\
            \ tax exclusive.\n"
          example: true
        landedCostState:
          $ref: "#/components/schemas/CartLandedCostState"
        pricing:
          $ref: "#/components/schemas/CartOrderLevelExpandPrice"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
        errors:
          type: "object"
          properties:
            error:
              type: "object"
              properties:
                code:
                  type: "string"
                  example: "inventory-unavailable-error"
                subcode:
                  type: "string"
                  example: "inventory-unavailable-to-add-semi-tight-bundle-child-line-item"
                description:
                  type: "string"
                  example: "We're sorry but Class I is currently out of stock and\
                    \ cannot be added to your cart. We apologize for any inconvenience."
        termsOfSalesAcceptance:
          type: "string"
          description: "To pass whether or not the customer accepted the Terms of\
            \ Service."
          example: "true"
        chargeType:
          type: "string"
          description: "Only visible when chargeType is explicitly provided."
          example: "moto"
        customerType:
          type: "string"
          description: "Shopper Type applied to this cart.  B as Business, I as Individual."
          example: "B"
        taxRegistrations:
          $ref: "#/components/schemas/TaxRegistrations"
        organizationId:
          type: "string"
          description: "Only visible when organizationId is explicityly provided."
          example: "digitalriver12345"
        warnings:
          $ref: "#/components/schemas/CouponCodeNotEligibleWarning"
    DefaultLineItems:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items"
        lineItems:
          type: "array"
          items:
            $ref: "#/components/schemas/DefaultLineItem"
    ExpandedLineItems:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items"
        lineItems:
          type: "array"
          items:
            $ref: "#/components/schemas/ExpandedLineItem"
    DefaultLineItem:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items/488822300023"
        id:
          type: "string"
          example: "488822300023"
        quantity:
          type: "string"
          example: "1"
        product:
          $ref: "#/components/schemas/DefaultProduct"
        pricing:
          $ref: "#/components/schemas/DefaultLineItemPrice"
        groups:
          type: "array"
          items:
            $ref: "#/components/schemas/GroupDefaultArray"
    GroupDefaultArray:
      type: "object"
      properties:
        group:
          type: "array"
          items:
            $ref: "#/components/schemas/GroupDefaultObject"
    GroupDefaultObject:
      type: "object"
      properties:
        id:
          type: "string"
          example: "100100100"
        relationType:
          type: "string"
          example: "child"
        offer:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/63018095810"
    ExpandedLineItem:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items/488906490023"
        id:
          type: "string"
          example: "488906490023"
        quantity:
          type: "integer"
          example: 10
        product:
          $ref: "#/components/schemas/ExpandedProduct"
        pricing:
          $ref: "#/components/schemas/ExpandedLineItemPrice"
        groups:
          type: "array"
          items:
            $ref: "#/components/schemas/GroupExpandArray"
    GroupExpandArray:
      type: "object"
      properties:
        group:
          type: "array"
          items:
            $ref: "#/components/schemas/GroupExpandObject"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
    GroupExpandObject:
      type: "object"
      properties:
        id:
          type: "string"
          example: "100100100"
        relationType:
          type: "string"
          example: "child"
        offer:
          $ref: "#/components/schemas/GroupOfferExpandObject"
    GroupOfferExpandObject:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/offers/63018095810"
        id:
          type: "integer"
          example: 63018095810
        name:
          type: "string"
          example: "couponCode_all products bundle test"
        policyName:
          type: "string"
          example: "Semi-Tight Bundle Policy"
        type:
          type: "string"
          example: "All Products Bundle"
        image:
          type: "string"
          example: "null"
        trigger:
          type: "string"
          example: "User Triggered"
        salesPitch:
          type: "array"
          items:
            type: "string"
            example: "[\"\",\"\",\"\",\"\"]"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
    ExpandedLineItemNoFeePricing:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009226180019/line-items/488906490023\"\
            ,"
        id:
          type: "string"
          example: "488906490023"
        quantity:
          type: "string"
          example: "1"
        product:
          $ref: "#/components/schemas/ExpandedProduct"
        pricing:
          type: "object"
          properties:
            listPrice:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "number"
                  example: 101
              description: "The per-unit price setup in the price list for the product\
                \ associated with this line item.\n- It includes:\n    * The \"Included\
                \ in Price\" fee (an invisible fee) if it's configured for the line\
                \ item.\n    * If the price list is set to tax inclusive, this price\
                \ will include tax.\n- It does not include:\n    * The discount\n\
                \    * The \"Excluded from price\" fee (a visible fee)\n    * If price\
                \ list is set to tax exclusive, this price will NOT include tax.\n"
            listPriceWithQuantity:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "number"
                  example: 1010
              description: "The total calculated list price for the line item with\
                \ quantity.\n- It includes:\n    * The \"Included in Price\" fee (an\
                \ invisible fee) if it's configured for the line item.\n    * If the\
                \ price list is set to tax inclusive, this price will include tax.\n\
                - It does not include:\n* The discount\n* The \"Excluded from price\"\
                \ fee (a visible fee)\n* If price list is set to tax exclusive, this\
                \ price will NOT include tax.\n- The value for this field uses the\
                \ following formula:  listPrice × qty\n"
            salePrice:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "number"
                  example: 95.95
              description: "The per-unit price for the product associated with this\
                \ line item.\n- It includes:\n    * The line item level discount per\
                \ unit\n    * The \"Included in Price\" fee (an invisible fee) if\
                \ it's configured for the line item\n    * If the price list is set\
                \ to tax inclusive, this price will include tax.\n- It does not include:\n\
                \    * The order level discount\n    * The \"Excluded from price\"\
                \ fee (a visible fee)\n    * If price list is set to tax exclusive,\
                \ this price will NOT include tax.\n- The value for this field uses\
                \ the following formula: salePriceWithQuantity ÷ qty\n"
            salePriceWithQuantity:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "number"
                  example: 959.5
              description: "The total calculated price for the line item with quantity.\n\
                - It includes:\n    * The line item level discount\n    * The \"Included\
                \ in Price\" fee (an invisible fee) if it's configured for the line\
                \ item\n    * If the price list is set to tax inclusive, this price\
                \ will include tax.\n- It does not include:\n    * The order level\
                \ discount\n    * The \"Excluded from price\" fee (a visible fee)\n\
                \    * If price list is set to tax exclusive, this price will NOT\
                \ include tax.\n"
            formattedListPrice:
              type: "string"
              description: "The formatted listPrice. It can include displayable items\
                \ such as a dollar symbol for display, a symbol for a decimal separator,\
                \ the number of fractional digits. To set up the formatted price,\
                \ contact your Digital River team."
              example: "101.00USD"
            formattedListPriceWithQuantity:
              type: "string"
              description: "The formatted listPriceWithQuantity. It can include displayable\
                \ items such as a dollar symbol, a symbol for a decimal separator,\
                \ the number of fractional digits. To set up the formatted price,\
                \ contact your Digital River team."
              example: "1010.00USD"
            formattedSalePrice:
              type: "string"
              description: "The formatted salePrice. It can include displayable items\
                \ such as a dollar symbol for display, a symbol for a decimal separator,\
                \ the number of fractional digits. To set up the formatted price,\
                \ contact your Digital River team."
              example: "95.95USD"
            formattedSalePriceWithQuantity:
              type: "string"
              description: "The formatted salePriceWithQuantity. It can include displayable\
                \ items such as a dollar symbol, a symbol for decimal separator, the\
                \ number of fractional digits. To set up the formatted price, contact\
                \ your Digital River team."
              example: "959.50USD"
            totalDiscountWithQuantity:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "number"
                  example: 50.5
              description: "The total discount of the line item with quantity. It\
                \ does not include the order level discount."
            formattedTotalDiscountWithQuantity:
              type: "string"
              description: "The formatted totalDiscountWithQuantity. It can include\
                \ displayable items such as a dollar symbol, a symbol for a decimal\
                \ separator, the number of fractional digits. To set up the formatted\
                \ price, contact your Digital River team."
              example: "50.50USD"
            formattedCommitmentPrice:
              type: "string"
              description: "This is only available for annual paid monthly product"
              example: "$240.00"
            commitmentPrice:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "240.00"
              description: "This is only available for annual paid monthly product"
            productTax:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "1.35"
              description: "The tax amount for the product at the line-item level\
                \ with quantity."
            shippingTax:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "0.65"
              description: "The shipping tax amount of the line item with quantity.\
                \ If you ship more than one line item together, the items share the\
                \ shipping tax amount in the response for the order."
            feeTax:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "2.00"
              description: "The fee tax amount of the line item with quantity. If\
                \ there is more than one fee for this product, this amount is the\
                \ sum of all fee taxes regardless of whether they are Fee \"Included\
                \ in Price\" (an invisible fee) or Fee \"Excluded from price\" (a\
                \ visible fee)."
            taxRate:
              type: "string"
              description: "Rate available for calculating the tax for this lineitem."
              example: "0.1111"
            discountDescription:
              type: "string"
              example: "$10.00"
        groups:
          type: "object"
          properties:
            group:
              type: "object"
              properties:
                id:
                  type: "string"
                  example: "488905490023"
                relationType:
                  type: "string"
                  example: "parent"
                offer:
                  $ref: "#/components/schemas/ExpandedOfferComponent"
        downloads:
          type: "object"
          properties:
            downloadUri:
              type: "array"
              items:
                type: "string"
                example: "https://wgtsysot12.digitalriver.com/wgt/9B5A4FCEF11DA80C/171F14235882A3D349C4DF3E9F68F51B28573D6CB50E888238DC305C96D769176F6A4F895B77C58CF0F67A3572E1FE49934F924414F2486E45C01D39B94ADFA2E0920C4390CBA6042FE0C88CD46AAEA99C060E2044E521050A7DE0793B014624647C638FDE4F6D4D/demosft1/WaterLilies.jpg"
        digitalRights:
          type: "object"
          properties:
            serialNumber:
              type: "object"
        billingAgreementId:
          type: "string"
          description: "Digital River billing agreement ID. It represents the terms\
            \ the customer agreed to when they stored their card details or chose\
            \ to apply them to any kind of recurring purchase. The ID of the agreement\
            \ can then be referenced for subsequent purchases, which gives us the\
            \ ability to tie them together."
          example: "fc86a666-9f2f-4294-b591-468ae34122ff"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
        subscriptionIds:
          type: "array"
          description: "The unique identifier for the subscription."
          items:
            type: "string"
            example: "[15564325189,15564325289]"
    DefaultLineItemPrice:
      type: "object"
      properties:
        listPrice:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 101
          description: "The per-unit price setup in the price list for the product\
            \ associated with this line item.\n- It includes:\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item.\n\
            \    * If the price list is set to tax inclusive, this price will include\
            \ tax.\n- It does not include:\n    * The discount\n    * The \"Excluded\
            \ from price\" fee (a visible fee)\n    * If price list is set to tax\
            \ exclusive, this price will NOT include tax.\n"
        listPriceWithQuantity:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1010
          description: "The total calculated list price for the line item with quantity.\n\
            - It includes:\n    * The \"Included in Price\" fee (an invisible fee)\
            \ if it's configured for the line item.\n    * If the price list is set\
            \ to tax inclusive, this price will include tax.\n- It does not include:\n\
            \    * The discount\n    * The \"Excluded from price\" fee (a visible\
            \ fee)\n    * If price list is set to tax exclusive, this price will NOT\
            \ include tax.\n- The value for this field uses the following formula:\
            \  listPrice × qty\n"
        salePriceWithQuantity:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 959.5
          description: "The total calculated price for the line item with quantity.\n\
            - It includes:\n    * The line item level discount\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item\n\
            \    * If the price list is set to tax inclusive, this price will include\
            \ tax.\n- It does not include:\n    * The order level discount\n    *\
            \ The \"Excluded from price\" fee (a visible fee)\n    * If price list\
            \ is set to tax exclusive, this price will NOT include tax.\n"
        formattedListPrice:
          type: "string"
          description: "The formatted listPrice. It can include displayable items\
            \ such as a dollar symbol for display, a symbol for a decimal separator,\
            \ the number of fractional digits. To set up the formatted price, contact\
            \ your Digital River team."
          example: "101.00USD"
        formattedListPriceWithQuantity:
          type: "string"
          description: "The formatted listPriceWithQuantity. It can include displayable\
            \ items such as a dollar symbol, a symbol for a decimal separator, the\
            \ number of fractional digits. To set up the formatted price, contact\
            \ your Digital River team."
          example: "1010.00USD"
        formattedSalePriceWithQuantity:
          type: "string"
          description: "The formatted salePriceWithQuantity. It can include displayable\
            \ items such as a dollar symbol, a symbol for decimal separator, the number\
            \ of fractional digits. To set up the formatted price, contact your Digital\
            \ River team."
          example: "959.50USD"
        formattedCommitmentPrice:
          type: "string"
          description: "This is only available for annual paid monthly product"
          example: "$240.00"
        commitmentPrice:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "240.00"
          description: "This is only available for annual paid monthly product"
        productTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "1.35"
          description: "The tax amount for the product at the line-item level with\
            \ quantity. When you set up a Fee for the product and choose \"Included\
            \ in Price\" (an invisible fee), the response includes the fee in the\
            \ price and excludes the invisible fee tax in the productTax. When you\
            \ set up the Fee and choose \"Excluded from Price” (a visible fee), the\
            \ response excludes the visible fee tax from productTax."
        shippingTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "0.65"
          description: "The shipping tax amount of the line item with quantity. If\
            \ you ship more than one line item together, the items might share the\
            \ shipping tax amount in the response for the order."
        feeTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "2.00"
          description: "The fee tax amount of the line item with quantity. If there\
            \ is more than one fee for this product, this amount is the sum of all\
            \ fee taxes regardless of whether they are Fee \"Included in Price\" (an\
            \ invisible fee) or Fee \"Excluded from price\" (a visible fee)."
        taxRate:
          type: "string"
          description: "Rate available for calculating the tax for this lineitem."
          example: "0.1111"
        importTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "The transaction assesses value-added tax (VAT) or other sales\
            \ tax. It encompasses taxes imposed during the import process and may\
            \ include taxes related to import shipping.\n\nRefer to 'lineItems.lineItem.customAttributes.attribute.landedCostShippingTax'\
            \ for a detailed tax component breakdown on shipping.\n"
        formattedImportTax:
          type: "string"
          description: "Formatted importTax that displays symbols such as the dollar\
            \ sign, a decimal separator, and the number of fractional digits. Contact\
            \ your Digital River team to set up the formatted tax."
          example: "0.00USD"
        importDuty:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "When a customer purchases products online, one or more of\
            \ the products may not originate in the country the customer resides in,\n\
            and therefore are subject to a customs duty when importing transported\
            \ across international borders.\n\nWhen goods are not shipped domestically\
            \ (within the customer’s country) or within a single customs union, such\
            \ as the European Union,\nthe customer is liable to pay any inbound duties\
            \ which the customer’s local customs authority deems appropriate.\n"
        formattedImportDuty:
          type: "string"
          description: "Formatted importDuty that displays symbols such as the dollar\
            \ sign, a decimal separator, and the number of fractional digits. Contact\
            \ your Digital River team to set up the formatted tax."
          example: "0.00USD"
    ExpandedLineItemPrice:
      type: "object"
      properties:
        listPrice:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 101
          description: "The per-unit price setup in the price list for the product\
            \ associated with this line item.\n- It includes:\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item.\n\
            \    * If the price list is set to tax inclusive, this price will include\
            \ tax.\n- It does not include:\n    * The discount\n    * The \"Excluded\
            \ from price\" fee (a visible fee)\n    * If price list is set to tax\
            \ exclusive, this price will NOT include tax.\n"
        listPriceWithQuantity:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1010
          description: "The total calculated list price for the line item with quantity.\n\
            - It includes:\n    * The \"Included in Price\" fee (an invisible fee)\
            \ if it's configured for the line item.\n    * If the price list is set\
            \ to tax inclusive, this price will include tax.\n- It does not include:\n\
            \    * The discount\n    * The \"Excluded from price\" fee (a visible\
            \ fee)\n    * If price list is set to tax exclusive, this price will NOT\
            \ include tax.\n- The value for this field uses the following formula:\
            \  listPrice × qty\n"
        salePrice:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 95.95
          description: "The per-unit price for the product associated with this line\
            \ item.\n- It includes:\n    * The line item level discount per unit\n\
            \    * The \"Included in Price\" fee (an invisible fee) if it's configured\
            \ for the line item\n    * If the price list is set to tax inclusive,\
            \ this price will include tax.\n- It does not include:\n    * The order\
            \ level discount\n    * The \"Excluded from price\" fee (a visible fee)\n\
            \    * If price list is set to tax exclusive, this price will NOT include\
            \ tax.\n- The value for this field uses the following formula: salePriceWithQuantity\
            \ ÷ qty\n"
        salePriceWithQuantity:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 959.5
          description: "The total calculated price for the line item with quantity.\n\
            - It includes:\n    * The line item level discount\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item\n\
            \    * If the price list is set to tax inclusive, this price will include\
            \ tax.\n- It does not include:\n    * The order level discount\n    *\
            \ The \"Excluded from price\" fee (a visible fee)\n    * If price list\
            \ is set to tax exclusive, this price will NOT include tax.\n"
        formattedListPrice:
          type: "string"
          description: "The formatted listPrice. It can include displayable items\
            \ such as a dollar symbol for display, a symbol for a decimal separator,\
            \ the number of fractional digits. To set up the formatted price, contact\
            \ your Digital River team."
          example: "101.00USD"
        formattedListPriceWithQuantity:
          type: "string"
          description: "The formatted listPriceWithQuantity. It can include displayable\
            \ items such as a dollar symbol, a symbol for a decimal separator, the\
            \ number of fractional digits. To set up the formatted price, contact\
            \ your Digital River team."
          example: "1010.00USD"
        formattedSalePrice:
          type: "string"
          description: "The formatted salePrice. It can include displayable items\
            \ such as a dollar symbol for display, a symbol for a decimal separator,\
            \ the number of fractional digits. To set up the formatted price, contact\
            \ your Digital River team."
          example: "95.95USD"
        formattedSalePriceWithQuantity:
          type: "string"
          description: "The formatted salePriceWithQuantity. It can include displayable\
            \ items such as a dollar symbol, a symbol for decimal separator, the number\
            \ of fractional digits. To set up the formatted price, contact your Digital\
            \ River team."
          example: "959.50USD"
        totalDiscountWithQuantity:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 50.5
          description: "The total discount of the line item with quantity. It does\
            \ not include the order level discount."
        formattedTotalDiscountWithQuantity:
          type: "string"
          description: "The formatted totalDiscountWithQuantity. It can include displayable\
            \ items such as a dollar symbol, a symbol for a decimal separator, the\
            \ number of fractional digits. To set up the formatted price, contact\
            \ your Digital River team."
          example: "50.50USD"
        formattedCommitmentPrice:
          type: "string"
          description: "This is only available for annual paid monthly product"
          example: "$240.00"
        commitmentPrice:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "240.00"
          description: "This is only available for annual paid monthly product"
        productTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "158.33"
          description: "The tax amount for the product at the line-item level with\
            \ quantity. When you set up a Fee for the product and choose \"Included\
            \ in Price\" (an invisible fee), the response includes the fee in the\
            \ price and excludes the invisible fee tax in the productTax. When you\
            \ set up the Fee and choose \"Excluded from Price” (a visible fee), the\
            \ response excludes the visible fee tax from productTax."
        shippingTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "1.91"
          description: "The shipping tax amount of the line item with quantity. If\
            \ you ship more than one line item together, the items might share the\
            \ shipping tax amount in the response for the order."
        feeTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "18.25"
          description: "The fee tax amount of the line item with quantity. If there\
            \ is more than one fee for this product, this amount is the sum of all\
            \ fee taxes regardless of whether they are Fee \"Included in Price\" (an\
            \ invisible fee) or Fee \"Excluded from price\" (a visible fee)."
        taxRate:
          type: "string"
          description: "Rate available for calculating the tax for this lineitem."
          example: "0.1111"
        discountDescription:
          type: "string"
          example: "$10.00"
        importTax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "The transaction assesses value-added tax (VAT) or other sales\
            \ tax. It encompasses taxes imposed during the import process and may\
            \ include taxes related to import shipping.\n\nRefer to 'lineItems.lineItem.customAttributes.attribute.landedCostShippingTax'\
            \ for a detailed tax component breakdown on shipping.\n"
        formattedImportTax:
          type: "string"
          description: "Formatted importTax that displays symbols such as the dollar\
            \ sign, a decimal separator, and the number of fractional digits. Contact\
            \ your Digital River team to set up the formatted tax."
          example: "0.00USD"
        importDuty:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "When a customer purchases products online, one or more of\
            \ the products may not originate in the country the customer resides in,\n\
            and therefore are subject to a customs duty when importing transported\
            \ across international borders.\n\nWhen goods are not shipped domestically\
            \ (within the customer’s country) or within a single customs union, such\
            \ as the European Union,\nthe customer is liable to pay any inbound duties\
            \ which the customer’s local customs authority deems appropriate.\n"
        formattedImportDuty:
          type: "string"
          description: "Formatted importDuty that displays symbols such as the dollar\
            \ sign, a decimal separator, and the number of fractional digits. Contact\
            \ your Digital River team to set up the formatted tax."
          example: "0.00USD"
        feePricing:
          type: "object"
          properties:
            fee:
              type: "array"
              items:
                $ref: "#/components/schemas/LineItemFeePricing"
          description: "The tax info of Fee \"Excluded from price\" (a visible fee)."
    DefaultCurrency:
      type: "object"
      properties:
        currency:
          type: "string"
          example: "USD"
        value:
          type: "string"
          example: "19.99"
    LineItemFeePricing:
      type: "object"
      properties:
        name:
          type: "string"
          example: "WEEE Fee"
        typeCode:
          type: "string"
          example: "typeCode"
        listPrice:
          $ref: "#/components/schemas/DefaultCurrency"
        listPriceWithQuantity:
          $ref: "#/components/schemas/DefaultCurrency"
        salePriceWithQuantity:
          $ref: "#/components/schemas/DefaultCurrency"
        formattedListPrice:
          type: "string"
          example: "8.33USD"
        formattedListPriceWithQuantity:
          type: "string"
          example: "8.33USD"
        formattedSalePriceWithQuantity:
          type: "string"
          example: "8.33USD"
        tax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "string"
              example: "1.67"
          description: "The tax amount of Fee \"Excluded from price\" (a visible fee)\
            \ of the line item with quantity."
    DefaultCustomAttributes:
      type: "object"
      properties:
        attribute:
          type: "array"
          items:
            type: "object"
            properties:
              name:
                type: "string"
                example: "name"
              value:
                type: "string"
                example: "string"
              type:
                type: "string"
                example: "string"
    BillingAddress:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/address/47278020023"
        relation:
          type: "string"
          example: "https://developers.digitalriver.com/v1/shoppers/AddressesResource"
        id:
          type: "string"
          description: "Unique identifier of the address."
          example: "billingAddress"
        firstName:
          type: "string"
          description: "The shopper's first name."
          example: "Automation"
        lastName:
          type: "string"
          description: "The shopper's last name."
          example: "Tester"
        companyName:
          type: "string"
          description: "Company Name"
          example: "Digital River"
        line1:
          type: "string"
          description: "The first line of the address."
          example: "PO BOX 6930"
        line2:
          type: "string"
          description: "The second line of the address."
          example: "123"
        line3:
          type: "string"
          description: "The third line of the address. (Optional)"
          example: "Suite Line 3"
        city:
          type: "string"
          description: "City or town."
          example: "Waconia"
        countrySubdivision:
          type: "string"
          description: "State/County/Province/Region."
          example: "MN"
        postalCode:
          type: "string"
          description: "ZIP or postal code."
          example: "5387.0"
        country:
          type: "string"
          description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
            \ for a complete list of country codes."
          example: "US"
        countryName:
          type: "string"
          description: "Country."
          example: "United States"
        phoneNumber:
          type: "string"
          description: "The shopper's phone number."
          example: "099-222-44454"
        emailAddress:
          type: "string"
          description: "The shopper's email address."
          example: "automatedTester@digitalriver.com"
        countyName:
          type: "string"
          description: "County."
          example: "Hennepin"
        phoneticFirstName:
          type: "string"
          description: "The shopper's Japanese Katakana first name. (Optional, usually\
            \ for Japanese locale.)"
          example: "クリス"
        phoneticLastName:
          type: "string"
          description: "The shopper's Japanese Katakana last name. (Optional, usually\
            \ for Japanese locale.)"
          example: "ミラー"
        division:
          type: "string"
          description: "The shopper's company departmant name. (Optional, usually\
            \ for Japanese locale.)"
          example: "製品開発"
        title:
          type: "string"
          description: "The shopper's title. (Optional, usually for France locale.)"
          example: "M"
    ShippingAddress:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/address/47278020023"
        relation:
          type: "string"
          example: "https://developers.digitalriver.com/v1/shoppers/AddressesResource"
        id:
          type: "string"
          description: "Unique identifier of the address."
          example: "shippingAddress"
        firstName:
          type: "string"
          description: "The shopper's first name."
          example: "Automation"
        lastName:
          type: "string"
          description: "The shopper's last name."
          example: "Tester"
        companyName:
          type: "string"
          description: "Company Name"
          example: "Digital River"
        line1:
          type: "string"
          description: "The first line of the address."
          example: "PO BOX 6930"
        line2:
          type: "string"
          description: "The second line of the address."
          example: "123"
        line3:
          type: "string"
          description: "The third line of the address. (Optional)"
          example: "Suite Line 3"
        city:
          type: "string"
          description: "City or town."
          example: "Waconia"
        countrySubdivision:
          type: "string"
          description: "State/County/Province/Region."
          example: "MN"
        postalCode:
          type: "string"
          description: "ZIP or postal code."
          example: "5387.0"
        country:
          type: "string"
          description: "A two-letter (ISO 3166-2) country code. See https://en.wikipedia.org/wiki/ISO_3166-2\
            \ for a complete list of country codes."
          example: "US"
        countryName:
          type: "string"
          description: "Country."
          example: "United States"
        phoneNumber:
          type: "string"
          description: "The shopper's phone number."
          example: "099-222-44454"
        countyName:
          type: "string"
          description: "County."
          example: "Hennepin"
        emailAddress:
          type: "string"
          description: "The shopper's email address."
          example: "automatedTester@digitalriver.com"
        phoneticFirstName:
          type: "string"
          description: "The shopper's Japanese Katakana first name. (Optional, usually\
            \ for Japanese locale.)"
          example: "クリス"
        phoneticLastName:
          type: "string"
          description: "The shopper's Japanese Katakana last name. (Optional, usually\
            \ for Japanese locale.)"
          example: "ミラー"
        division:
          type: "string"
          description: "The shopper's company departmant name. (Optional, usually\
            \ for Japanese locale.)"
          example: "製品開発"
    DefaultOrderLineItems:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/47276010023/line-items"
        lineItem:
          type: "array"
          items:
            $ref: "#/components/schemas/DefaultOrderOneLineItem"
    ExpandedOrderLineItems:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/47276010023/line-items"
        lineItem:
          type: "array"
          items:
            $ref: "#/components/schemas/ExpandedOrderOneLineItem"
    DefaultOrderOneLineItem:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/47276010023/line-items/488822300023"
        id:
          type: "string"
          example: "488822300023"
        quantity:
          type: "integer"
          example: 1
        product:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/5112133200"
            displayName:
              type: "string"
              example: "Good Product"
            thumbnailImage:
              type: "string"
        lineItemState:
          type: "string"
          example: "Complete"
        lineItemStateDetails:
          $ref: "#/components/schemas/lineItemStateDetails"
        pricing:
          $ref: "#/components/schemas/DefaultLineItemPrice"
        downloads:
          type: "object"
          properties:
            downloadUri:
              type: "array"
              items:
                type: "string"
                example: "https://wgtsysot12.digitalriver.com/wgt/9B5A4FCEF11DA80C/171F14235882A3D349C4DF3E9F68F51B28573D6CB50E888238DC305C96D769176F6A4F895B77C58CF0F67A3572E1FE49934F924414F2486E45C01D39B94ADFA2E0920C4390CBA6042FE0C88CD46AAEA99C060E2044E521050A7DE0793B014624647C638FDE4F6D4D/demosft1/WaterLilies.jpg"
        digitalRights:
          type: "object"
          properties:
            serialNumber:
              type: "object"
        billingAgreementId:
          type: "string"
          description: "Digital River billing agreement ID. It represents the terms\
            \ the customer agreed to when they stored their card details or chose\
            \ to apply them to any kind of recurring purchase. The ID of the agreement\
            \ can then be referenced for subsequent purchases, which gives us the\
            \ ability to tie them together."
          example: "fc86a666-9f2f-4294-b591-468ae34122ff"
        subscriptionIds:
          type: "array"
          description: "The unique identifier for the subscription."
          items:
            type: "string"
            example: "[15564325189,15564325289]"
    ExpandedOrderOneLineItem:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/47276010023/line-items/488822300023"
        id:
          type: "string"
          example: "488822300023"
        quantity:
          type: "integer"
          example: 1
        product:
          $ref: "#/components/schemas/DefaultProduct"
        lineItemState:
          type: "string"
          example: "Complete"
        lineItemStateDetails:
          $ref: "#/components/schemas/lineItemStateDetails"
        pricing:
          $ref: "#/components/schemas/DefaultLineItemPrice"
        downloads:
          type: "object"
          properties:
            downloadUri:
              type: "array"
              items:
                type: "string"
                example: "https://wgtsysot12.digitalriver.com/wgt/9B5A4FCEF11DA80C/171F14235882A3D349C4DF3E9F68F51B28573D6CB50E888238DC305C96D769176F6A4F895B77C58CF0F67A3572E1FE49934F924414F2486E45C01D39B94ADFA2E0920C4390CBA6042FE0C88CD46AAEA99C060E2044E521050A7DE0793B014624647C638FDE4F6D4D/demosft1/WaterLilies.jpg"
        digitalRights:
          type: "object"
          properties:
            serialNumber:
              type: "object"
        billingAgreementId:
          type: "string"
          description: "Digital River billing agreement ID. It represents the terms\
            \ the customer agreed to when they stored their card details or chose\
            \ to apply them to any kind of recurring purchase. The ID of the agreement\
            \ can then be referenced for subsequent purchases, which gives us the\
            \ ability to tie them together."
          example: "fc86a666-9f2f-4294-b591-468ae34122ff"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
        subscriptionIds:
          type: "array"
          description: "The unique identifier for the subscription."
          items:
            type: "string"
            example: "[15564325189,15564325289]"
    lineItemStateDetails:
      type: "object"
      properties:
        description:
          type: "string"
          example: "Downloadable - 1"
        backOrdered:
          type: "integer"
          example: 0
        shipped:
          type: "integer"
          example: 0
        returned:
          type: "integer"
          example: 0
        pendingReturn:
          type: "integer"
          example: 0
    ExpandedOrderLineItemsNoFeePricing:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009226180019/line-items"
        lineItem:
          type: "array"
          items:
            $ref: "#/components/schemas/ExpandedLineItemNoFeePricing"
    DefaultProduct:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500"
        parentProduct:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
        id:
          type: "string"
          example: "64578500"
        name:
          type: "string"
          example: "Class I"
        displayName:
          type: "string"
          example: "Class I"
        shortDescription:
          type: "string"
          example: "Class I is the perfect GPS waypoint and route manager for the\
            \ beginning or occasional GPS user."
        longDescription:
          type: "string"
          example: "Class I is the fast and easy way to create, edit, and transfer\
            \ waypoints and routes between your computer and your Garmin, Magellan,\
            \ or Lowrance GPS. Using Class I, you can manage all of your waypoints\
            \ and routes, and display them in lists sorted by name, elevation, or\
            \ distance. Class I connects your GPS to the best mapping and information\
            \ sites on the Internet, giving you one-click access to street and topo\
            \ maps, aerial photos, weather forecasts, and nearby attractions."
        productType:
          type: "string"
          example: "DOWNLOAD"
        sku:
          type: "string"
          example: "Class I"
        externalReferenceId:
          type: "string"
          example: "Test External Reference Number"
        companyId:
          type: "string"
          example: "demosft1"
        displayableProduct:
          type: "string"
          example: "true"
        purchasable:
          type: "string"
          example: "true"
        manufacturerName:
          type: "string"
          example: "Test Manufacturer Name"
        manufacturerPartNumber:
          type: "string"
          example: "Test Manufacturer Part Number"
        thumbnailImage:
          type: "string"
          example: "https://drh-int-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb.jpg"
        productImage:
          type: "string"
          example: "https://drh-int-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox.jpg"
        keywords:
          type: "string"
          example: "testKeyword"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
    ExpandedProduct:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/products/1991893700"
        parentProduct:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/1991893500"
            id:
              type: "string"
              example: "1991893500"
            name:
              type: "string"
              example: "Class X"
            displayName:
              type: "string"
              example: "Class X"
            shortDescription:
              type: "string"
              example: "Class I is the perfect GPS waypoint and route manager for\
                \ the beginning or occasional GPS user."
            longDescription:
              type: "string"
              example: "Class I is the fast and easy way to create, edit, and transfer\
                \ waypoints and routes between your computer and your Garmin, Magellan,\
                \ or Lowrance GPS. Using Class I, you can manage all of your waypoints\
                \ and routes, and display them in lists sorted by name, elevation,\
                \ or distance. Class I connects your GPS to the best mapping and information\
                \ sites on the Internet, giving you one-click access to street and\
                \ topo maps, aerial photos, weather forecasts, and nearby attractions."
            productType:
              type: "string"
              example: "DOWNLOAD"
            sku:
              type: "string"
              example: "Class X"
            companyId:
              type: "string"
              example: "demosft3"
            displayableProduct:
              type: "string"
              example: "true"
            purchasable:
              type: "string"
              example: "true"
            manufacturerPartNumber:
              type: "string"
              example: "1234"
            thumbnailImage:
              type: "string"
              example: "https://drh-int-ora.img.digitalriver.com/Storefront/Company/demosft3/images/product/thumbnail/classIThumb.jpg"
            productImage:
              example: "https://drh-int-ora.img.digitalriver.com/Storefront/Company/demosft3/images/product/detail/classIBox.jpg"
            baseProduct:
              type: "string"
              example: "true"
            variationAttributes:
              type: "object"
              properties:
                attribute:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                      example: "[\"productType\"]"
                    domainValues:
                      type: "array"
                      items:
                        type: "string"
                        example: "[\"PHYSICAL\",\"DOWNLOAD\"]"
        id:
          type: "string"
          example: "1991893700"
        name:
          type: "string"
          example: "Class X"
        displayName:
          type: "string"
          example: "Class X"
        shortDescription:
          type: "string"
          example: "Class X is the perfect test product."
        longDescription:
          type: "string"
          example: "Class X is the fast and easy way to create, edit, and transfer\
            \ waypoints and routes between your computer and your Garmin, Magellan,\
            \ or Lowrance GPS. Using Class X, you can manage all of your waypoints\
            \ and routes, and display them in lists sorted by name, elevation, or\
            \ distance. Class I connects your GPS to the best mapping and information\
            \ sites on the Internet, giving you one-click access to street and topo\
            \ maps, aerial photos, weather forecasts, and nearby attractions."
        productType:
          type: "string"
          example: "PHYSICAL"
        sku:
          type: "string"
          example: "Class X"
        companyId:
          type: "string"
          example: "demosft3"
        displayableProduct:
          type: "string"
          example: "true"
        purchasable:
          type: "string"
          example: "true"
        thumbnailImage:
          type: "string"
          example: "https://drh-int-ora.img.digitalriver.com/Storefront/Company/demosft3/images/product/thumbnail/FYIbook_th.gif"
        productImage:
          type: "string"
          example: "https://drh-int-ora.img.digitalriver.com/Storefront/Company/demosft3/images/product/detail/FYIbook_th.gif"
        baseProduct:
          type: "string"
          example: "false"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
        inventoryStatus:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/1991893700/inventory-status"
            availableQuantity:
              type: "string"
              example: "0"
            availableQuantityIsEstimated:
              type: "string"
              example: "false"
            productIsInStock:
              type: "string"
              example: "false"
            productIsAllowsBackorders:
              type: "string"
              example: "true"
            productIsTracked:
              type: "string"
              example: "true"
            requestedQuantity:
              type: "string"
              example: "false"
            status:
              type: "string"
              example: "PRODUCT_INVENTORY_BACKORDERED"
            statusIsEstimated:
              type: "string"
              example: "false"
    DefaultOrders:
      type: "object"
      properties:
        orders:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/orders"
            order:
              type: "array"
              items:
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/orders/829223750082"
            totalResults:
              type: "string"
              example: "1"
            totalResultPages:
              type: "string"
              example: "1"
    ExpandedOrders:
      type: "object"
      properties:
        orders:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/orders"
            order:
              type: "array"
              items:
                $ref: "#/components/schemas/ExpandedOrderNoFeePricing"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
    DefaultOrder:
      type: "object"
      properties:
        order:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/orders/47276010023"
            id:
              type: "string"
              example: "47276010023"
            submissionDate:
              type: "string"
              example: "2018-04-27T18:01:01.000Z"
            displayName:
              type: "string"
              example: "New Order"
            locale:
              type: "string"
              example: "en_US"
            optIn:
              type: "string"
              example: "false"
            testOrder:
              type: "string"
              example: "false"
            taxExempt:
              type: "string"
              example: "false"
            businessEntityCode:
              type: "string"
              example: "DR_INC-ENTITY"
            taxInclusive:
              type: "boolean"
              description: "The price list setup for the currency.\n  * If true, the\
                \ price list is set to tax inclusive.\n  * If false, the price list\
                \ is set to tax exclusive.\n"
              example: false
            landedCostState:
              $ref: "#/components/schemas/OrderLandedCostState"
            pricing:
              $ref: "#/components/schemas/OrderOrderLevelExpandPrice"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
            payment:
              $ref: "#/components/schemas/OrderResponsePayment"
            orderState:
              type: "string"
              description: "Current state of the order. The possible values are as\
                \ follows. Open, Submitted, Cancelled, Complete, Dispute, Pending\
                \ Payment, In Review, Source Pending Funds, Charge Pending, In Process."
              example: "Complete"
            billingAddress:
              $ref: "#/components/schemas/BillingAddress"
            shippingAddress:
              $ref: "#/components/schemas/ShippingAddress"
            lineItems:
              $ref: "#/components/schemas/DefaultOrderLineItems"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
            paymentSession:
              $ref: "#/components/schemas/PaymentSession"
            customerType:
              type: "string"
              description: "Shopper Type applied to this cart.  B as Business, I as\
                \ Individual."
              example: "B"
            taxRegistrations:
              $ref: "#/components/schemas/TaxRegistrations"
    ExpandedOrder:
      type: "object"
      properties:
        order:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009226180019"
            id:
              type: "string"
              example: "100009226180019"
            submissionDate:
              type: "string"
              example: "2018-05-04T16:26:59.000Z"
            displayName:
              type: "string"
              example: "New Order"
            locale:
              type: "string"
              example: "en_US"
            optIn:
              type: "string"
              example: "false"
            testOrder:
              type: "string"
              example: "false"
            taxExempt:
              type: "string"
              example: "false"
            businessEntityCode:
              type: "string"
              example: "DR_INC-ENTITY"
            taxInclusive:
              type: "boolean"
              description: "The price list setup for the currency.\n  * If true, the\
                \ price list is set to tax inclusive.\n  * If false, the price list\
                \ is set to tax exclusive.\n"
              example: false
            landedCostState:
              $ref: "#/components/schemas/OrderLandedCostState"
            pricing:
              $ref: "#/components/schemas/OrderOrderLevelExpandPrice"
            paymentMethod:
              $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
            payment:
              $ref: "#/components/schemas/ExpandedOrderResponsePayment"
            shippingMethod:
              type: "object"
              properties:
                code:
                  type: "integer"
                  example: 142400
                description:
                  type: "string"
                  example: "USPS - Priority Mail"
            orderState:
              type: "string"
              description: "Current state of the order. The possible values are as\
                \ follows. Open, Submitted, Cancelled, Complete, Dispute, Pending\
                \ Payment, In Review, Source Pending Funds, Charge Pending, In Process."
              example: "In Process"
            orderStateDetails:
              type: "object"
              properties:
                description:
                  type: "string"
                  example: "Not Settled"
                settled:
                  $ref: "#/components/schemas/DefaultCurrency"
                refunded:
                  $ref: "#/components/schemas/DefaultCurrency"
            billingAddress:
              $ref: "#/components/schemas/BillingAddress"
            shippingAddress:
              $ref: "#/components/schemas/ShippingAddress"
            lineItems:
              $ref: "#/components/schemas/ExpandedOrderLineItems"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
            paymentSession:
              $ref: "#/components/schemas/PaymentSession"
            customerType:
              type: "string"
              description: "Shopper Type applied to this cart.  B as Business, I as\
                \ Individual."
              example: "B"
            taxRegistrations:
              $ref: "#/components/schemas/TaxRegistrations"
    ExpandedOrderNoFeePricing:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009226180019"
        id:
          type: "integer"
          example: 100009226180019
        submissionDate:
          type: "string"
          example: "2018-05-04T16:26:59.000Z"
        displayName:
          type: "string"
          example: "New Order"
        locale:
          type: "string"
          example: "en_US"
        optIn:
          type: "string"
          example: "false"
        testOrder:
          type: "string"
          example: "false"
        taxExempt:
          type: "string"
          example: "false"
        businessEntityCode:
          type: "string"
          example: "DR_INC-ENTITY"
        taxInclusive:
          type: "boolean"
          description: "The price list setup for the currency.\n  * If true, the price\
            \ list is set to tax inclusive.\n  * If false, the price list is set to\
            \ tax exclusive.\n"
          example: false
        pricing:
          type: "object"
          properties:
            subtotal:
              $ref: "#/components/schemas/DefaultCurrency"
            subtotalWithDiscount:
              $ref: "#/components/schemas/DefaultCurrency"
            incentive:
              $ref: "#/components/schemas/DefaultCurrency"
            shipping:
              $ref: "#/components/schemas/DefaultCurrency"
            tax:
              $ref: "#/components/schemas/DefaultCurrency"
            total:
              $ref: "#/components/schemas/DefaultCurrency"
            formattedSubtotal:
              type: "string"
              example: "$128.98"
            formattedSubtotalWithDiscount:
              type: "string"
              example: "$123.98"
            formattedIncentive:
              type: "string"
              example: "$5.00"
            formattedShipping:
              type: "string"
              example: "$5.00"
            formattedTax:
              type: "string"
              example: "$9.71"
            formattedTotal:
              type: "string"
              example: "$138.69"
        payment:
          $ref: "#/components/schemas/ExpandedOrderResponsePayment"
        shippingMethod:
          type: "object"
          properties:
            code:
              type: "integer"
              example: 142400
            description:
              type: "string"
              example: "USPS - Priority Mail"
        orderState:
          type: "string"
          description: "Current state of the order. The possible values are as follows.\
            \ Open, Submitted, Cancelled, Complete, Dispute, Pending Payment, In Review,\
            \ Source Pending Funds, Charge Pending, In Process."
          example: "In Process"
        orderStateDetails:
          type: "object"
          properties:
            description:
              type: "string"
              example: "Not Settled"
            settled:
              $ref: "#/components/schemas/DefaultCurrency"
            refunded:
              $ref: "#/components/schemas/DefaultCurrency"
        billingAddress:
          $ref: "#/components/schemas/BillingAddress"
        shippingAddress:
          $ref: "#/components/schemas/ShippingAddress"
        lineItems:
          $ref: "#/components/schemas/ExpandedOrderLineItemsNoFeePricing"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
        paymentSession:
          $ref: "#/components/schemas/PaymentSession"
        customerType:
          type: "string"
          description: "Shopper Type applied to this cart.  B as Business, I as Individual."
          example: "B"
        taxRegistrations:
          $ref: "#/components/schemas/TaxRegistrations"
    DefaultOrderLookup:
      type: "object"
      properties:
        orders:
          type: "object"
          properties:
            order:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009222210019"
                  id:
                    type: "integer"
                    example: 100009222210019
                  submissionDate:
                    type: "string"
                    example: "2018-05-04T17:12:17.000Z"
                  pricing:
                    type: "object"
                    properties:
                      total:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedTotal:
                        type: "string"
                        example: "$13.95"
                  paymentMethod:
                    $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
                  payment:
                    $ref: "#/components/schemas/OrderResponsePayment"
                  orderState:
                    type: "string"
                    description: "Current state of the order. The possible values\
                      \ are as follows. Open, Submitted, Cancelled, Complete, Dispute,\
                      \ Pending Payment, In Review, Source Pending Funds, Charge Pending,\
                      \ In Process."
                    example: "Complete"
                  billingAddress:
                    $ref: "#/components/schemas/BillingAddress"
                  shippingAddress:
                    $ref: "#/components/schemas/ShippingAddress"
                  paymentSession:
                    $ref: "#/components/schemas/PaymentSession"
                  customerType:
                    type: "string"
                    description: "Shopper Type applied to this cart.  B as Business,\
                      \ I as Individual."
                    example: "B"
                  taxRegistrations:
                    $ref: "#/components/schemas/TaxRegistrations"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
    ExpandedOrderLookup:
      type: "object"
      properties:
        orders:
          type: "object"
          properties:
            order:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009222210019"
                  id:
                    type: "integer"
                    example: 100009222210019
                  submissionDate:
                    type: "string"
                    example: "2018-05-04T17:12:17.000Z"
                  locale:
                    type: "string"
                    example: "en_US"
                  testOrder:
                    type: "string"
                    example: "false"
                  pricing:
                    type: "object"
                    properties:
                      total:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedTotal:
                        type: "string"
                        example: "$13.95"
                  paymentMethod:
                    $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
                  payment:
                    $ref: "#/components/schemas/ExpandedOrderResponsePayment"
                  orderState:
                    type: "string"
                    description: "Current state of the order. The possible values\
                      \ are as follows. Open, Submitted, Cancelled, Complete, Dispute,\
                      \ Pending Payment, In Review, Source Pending Funds, Charge Pending,\
                      \ In Process."
                    example: "Complete"
                  billingAddress:
                    $ref: "#/components/schemas/BillingAddress"
                  shippingAddress:
                    $ref: "#/components/schemas/ShippingAddress"
                  paymentSession:
                    $ref: "#/components/schemas/PaymentSession"
                  customerType:
                    type: "string"
                    description: "Shopper Type applied to this cart.  B as Business,\
                      \ I as Individual."
                    example: "B"
                  taxRegistrations:
                    $ref: "#/components/schemas/TaxRegistrations"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
    DefaultPaymentMethods:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/payment-methods"
        applyPaymentMethod:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/apply-payment-method"
        paymentMethod:
          type: "array"
          items:
            type: "object"
            properties:
              type:
                type: "string"
                example: "americanExpress"
              displayName:
                type: "string"
                example: "American Express"
              description:
                type: "string"
                example: "American Express"
    PaymentOptionsResponseLegacy:
      type: "object"
      properties:
        paymentOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
            paymentOption:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
                  id:
                    type: "number"
                    example: 15699113789
                  nickName:
                    type: "string"
                    example: "Default"
                  isDefault:
                    type: "string"
                    example: "true"
    PaymentOptionsResponseLegacyExpand:
      type: "object"
      properties:
        paymentOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
            paymentOption:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
                  id:
                    type: "number"
                    example: 15699113789
                  nickName:
                    type: "string"
                    example: "Default"
                  isDefault:
                    type: "string"
                    example: "true"
                  type:
                    type: "string"
                    example: "CreditCardMethod"
                  creditCard:
                    type: "object"
                    properties:
                      expirationMonth:
                        type: "integer"
                        example: 5
                      expirationYear:
                        type: "integer"
                        example: 2030
                      issueCode:
                        type: "number"
                      startMonth:
                        type: "number"
                      startYear:
                        type: "number"
                      displayableNumber:
                        type: "string"
                        description: "The card number, only display the last four\
                          \ digits. (e.g. ************1111)"
                        example: "************4321"
                      type:
                        type: "string"
                        example: "visa"
                      displayName:
                        type: "string"
                        example: "Visa"
    PaymentOptionsResponsePaymentSource:
      type: "object"
      properties:
        paymentOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
            paymentOption:
              type: "array"
              items:
                type: "object"
                properties:
                  sourceId:
                    type: "string"
                    description: "A unique identifier for the payment source."
                    example: "a231f38d-3a07-4a13-96ed-89693ba7d56c"
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
                  id:
                    type: "number"
                    example: 15699113789
                  nickName:
                    type: "string"
                    example: "Default"
                  isDefault:
                    type: "string"
                    example: "true"
    PaymentOptionsResponsePaymentSourceExpand:
      type: "object"
      properties:
        paymentOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
            paymentOption:
              type: "array"
              items:
                type: "object"
                properties:
                  sourceId:
                    type: "string"
                    description: "A unique identifier for the payment source."
                    example: "a231f38d-3a07-4a13-96ed-89693ba7d56c"
                  sourceClientSecret:
                    type: "string"
                    description: "The unique client secret for the payment source."
                    example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
                  id:
                    type: "number"
                    example: 15699113789
                  nickName:
                    type: "string"
                    example: "Default"
                  isDefault:
                    type: "string"
                    example: "true"
                  type:
                    type: "string"
                    example: "creditCard"
                  creditCard:
                    type: "object"
                    properties:
                      expirationMonth:
                        type: "string"
                        description: "One to two digits representing the expiration\
                          \ month."
                        example: "5"
                      expirationYear:
                        type: "string"
                        description: "Four digits representing the expiration year."
                        example: "2030"
                      brand:
                        type: "string"
                        description: "The card brand (e.g. Visa, MasterCard, American\
                          \ Express, etc.)."
                        example: "Visa"
                      lastFourDigits:
                        type: "string"
                        description: "The last four digits of the card number. (e.g.\
                          \ 1111)"
                        example: "1234"
    PaymentOptionsResponsePaymentSourceForPost:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
        id:
          type: "number"
          example: 740865108
        nickName:
          type: "string"
          example: "Default"
        isDefault:
          type: "string"
          example: "true"
        type:
          type: "string"
          example: "creditCard"
        sourceId:
          type: "string"
          description: "A unique identifier for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c"
        sourceClientSecret:
          type: "string"
          description: "The unique client secret for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
        creditCard:
          type: "object"
          properties:
            expirationYear:
              type: "string"
              description: "Four digits representing the expiration year."
              example: "2030"
            lastFourDigits:
              type: "string"
              description: "The last four digits of the card number. (e.g. 1111)"
              example: "0000"
            clientSecret:
              type: "string"
              description: "The unique client secret for the payment source."
              example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
            expirationMonth:
              type: "string"
              description: "One to two digits representing the expiration month."
              example: "08"
            fundingSource:
              type: "string"
              description: "The card type returned from Payments Processor. (e.g.\
                \ Credit, Debit, PrePaid, Charge, Deferred_debit)"
              example: "debit"
            brand:
              type: "string"
              description: "The card brand (e.g. Visa, MasterCard, American Express,\
                \ etc.)."
              example: "Visa"
            reusable:
              type: "string"
              description: "Whether the payment is reusable."
              example: "true"
    PaymentMethodObjectPaymentSource:
      type: "object"
      properties:
        type:
          type: "string"
          description: "The type of the payment. The payment type will correspond\
            \ to another element in the source response that contains detailed information\
            \ specific to the type. For example, a type of creditCard indicates that\
            \ there is an object in the response named creditCard that will contain\
            \ card-specific data."
          example: "creditCard"
        sourceId:
          type: "string"
          description: "A unique identifier for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c"
        sourceClientSecret:
          type: "string"
          description: "The unique client secret for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
        creditCard:
          type: "object"
          properties:
            expirationYear:
              type: "string"
              description: "Four digits representing the expiration year."
              example: "2030"
            lastFourDigits:
              type: "string"
              description: "The last four digits of the card number. (e.g. 1111)"
              example: "0000"
            clientSecret:
              type: "string"
              description: "The unique client secret for the payment source."
              example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
            expirationMonth:
              type: "string"
              description: "One to two digits representing the expiration month."
              example: "08"
            fundingSource:
              type: "string"
              description: "The card type returned from Payments Processor. (e.g.\
                \ Credit, Debit, PrePaid, Charge, Deferred_debit)"
              example: "debit"
            brand:
              type: "string"
              description: "The card brand (e.g. Visa, MasterCard, American Express,\
                \ etc.)."
              example: "Visa"
            reusable:
              type: "string"
              description: "Whether the payment is reusable."
              example: "true"
          description: "Credit card information. This field is displayed when type\
            \ is creditCard."
        amountContributed:
          type: "object"
          properties:
            currency:
              type: "string"
              description: "Three-letter ISO currency code associated with the object."
              example: "USD"
            value:
              type: "number"
              description: "Value associated with the object."
              example: 1059.5
          description: "The amount which is contributed by this payment source."
        charges:
          type: "array"
          description: "Payment charge information, displayed when the payment source\
            \ has payment charge records."
          items:
            $ref: "#/components/schemas/PaymentMethodObjectPaymentSourceCharge"
        supplementaryPaymentMethods:
          type: "array"
          description: "Supplementary payment information, displayed when cart using\
            \ Payment Source created supplementary payments."
          items:
            $ref: "#/components/schemas/PaymentMethodObjectSupplementaryPaymentSource"
      description: "Payment information, displayed when using a Payment Source created\
        \ payment."
    PaymentMethodObjectSupplementaryPaymentSource:
      type: "object"
      properties:
        type:
          type: "string"
          description: "The type of the payment. The payment type will correspond\
            \ to another element in the source response that contains detailed information\
            \ specific to the type. For example, a type of customerCredit indicates\
            \ that there is an object in the response named customerCredit that will\
            \ contain customer-credit-specific data."
          example: "customerCredit"
        sourceId:
          type: "string"
          description: "A unique identifier for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c"
        sourceClientSecret:
          type: "string"
          description: "The unique client secret for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
        customerCredit:
          type: "object"
          properties:
            flow:
              type: "string"
              description: "The authentication flow of the source."
              enum:
              - "standard"
              - "redirect"
              - "receiver"
            reusable:
              type: "string"
              description: "Whether the payment is reusable."
              example: "true"
          description: "Customer credit information. This field is displayed when\
            \ type is customerCredit."
        charges:
          type: "array"
          description: "Payment charge information, displayed when the payment source\
            \ has payment charge records."
          items:
            $ref: "#/components/schemas/PaymentMethodObjectSupplementaryPaymentSourceCharge"
        amountContributed:
          type: "object"
          properties:
            currency:
              type: "string"
              description: "Three-letter ISO currency code associated with the object."
              example: "USD"
            value:
              type: "number"
              description: "Value associated with the object."
              example: 1059.5
          description: "The amount which is contributed by this payment source."
    PaymentMethodObjectPaymentSourceCharge:
      type: "object"
      properties:
        chargeId:
          type: "string"
          description: "The unique identifier of the charge."
          example: "1cac37c0-98a7-46b2-b9ed-fbc615c9f18a"
        amount:
          type: "object"
          properties:
            currency:
              type: "string"
              description: "Three-letter ISO currency code associated with the object."
              example: "USD"
            value:
              type: "number"
              description: "Value associated with the object."
              example: 1059.5
          description: "The amount which is charged for this payment source."
        status:
          type: "string"
          description: "The current status of this charge. Possible values are: \"\
            pending\" \"capturable\" \"processing\" \"complete\" \"cancelled\" \"\
            failed\""
          example: "failed"
          enum:
          - "pending"
          - "capturable"
          - "processing"
          - "complete"
          - "cancelled"
          - "failed"
        createdTime:
          type: "string"
          description: "The time when the charge was created."
          example: "2021-12-06T09:03:46.877Z"
        updatedTime:
          type: "string"
          description: "The time when the charge was last updated."
          example: "2021-12-06T09:03:46.877Z"
    PaymentMethodObjectSupplementaryPaymentSourceCharge:
      type: "object"
      properties:
        chargeId:
          type: "string"
          description: "The unique identifier of the charge."
          example: "cf57f9c9-8b0d-4e64-998a-816499fefa01"
        amount:
          type: "object"
          properties:
            currency:
              type: "string"
              description: "Three-letter ISO currency code associated with the object."
              example: "USD"
            value:
              type: "number"
              description: "Value associated with the object."
              example: 1059.5
          description: "The amount which is charged for this payment source."
        status:
          type: "string"
          description: "The current status of this charge. Possible values are: \"\
            pending\" \"capturable\" \"processing\" \"complete\" \"cancelled\" \"\
            failed\""
          example: "failed"
          enum:
          - "pending"
          - "capturable"
          - "processing"
          - "complete"
          - "cancelled"
          - "failed"
        createdTime:
          type: "string"
          description: "The time when the charge was created."
          example: "2021-12-06T09:03:46.877Z"
        updatedTime:
          type: "string"
          description: "The time when the charge was last updated."
          example: "2021-12-06T09:03:46.877Z"
    PaymentOptionsIDResponseLegacy:
      type: "object"
      properties:
        paymentOption:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
            id:
              type: "number"
              example: 740865108
            nickName:
              type: "string"
              example: "Default"
            isDefault:
              type: "string"
              example: "true"
            type:
              type: "string"
              example: "CreditCardMethod"
            creditCard:
              type: "object"
              properties:
                expirationMonth:
                  type: "integer"
                  description: "One to two digits representing the expiration month."
                  example: 1
                expirationYear:
                  type: "integer"
                  description: "Four digits representing the expiration year."
                  example: 2030
                displayableNumber:
                  type: "string"
                  description: "The card number, only display the last four digits.\
                    \ (e.g. ************1111)"
                  example: "************4321"
                type:
                  type: "string"
                  description: "The type of the payment. The payment type will correspond\
                    \ to another element in the source response that contains detailed\
                    \ information specific to the type. For example, a type of creditCard\
                    \ indicates that there is an object in the response named creditCard\
                    \ that will contain card-specific data."
                  example: "visa"
                displayName:
                  type: "string"
                  description: "The card number, only display the last four digits.\
                    \ (e.g. ************1111)"
                  example: "Visa"
    PaymentOptionsIDResponseLegacyExpand:
      type: "object"
      properties:
        paymentOption:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
            id:
              type: "number"
              example: 740865108
            nickName:
              type: "string"
              example: "Default"
            isDefault:
              type: "string"
              example: "true"
            type:
              type: "string"
              example: "CreditCardMethod"
            creditCard:
              type: "object"
              properties:
                expirationMonth:
                  type: "integer"
                  description: "One to two digits representing the expiration month."
                expirationYear:
                  type: "integer"
                  description: "Four digits representing the expiration year."
                  example: 2030
                issueCode:
                  type: "number"
                startMonth:
                  type: "number"
                startYear:
                  type: "number"
                displayableNumber:
                  type: "string"
                  description: "The card number, only display the last four digits.\
                    \ (e.g. ************1111)"
                  example: "************4321"
                type:
                  type: "string"
                  description: "The type of the payment. The payment type will correspond\
                    \ to another element in the source response that contains detailed\
                    \ information specific to the type. For example, a type of creditCard\
                    \ indicates that there is an object in the response named creditCard\
                    \ that will contain card-specific data."
                  example: "visa"
                displayName:
                  type: "string"
                  example: "Visa"
    PaymentOptionsIDResponsePaymentSource:
      type: "object"
      properties:
        paymentOption:
          $ref: "#/components/schemas/PaymentOptionsIDPaymentSource"
    PaymentOptionsIDResponsePaymentSourceExpand:
      type: "object"
      properties:
        paymentOption:
          $ref: "#/components/schemas/PaymentOptionsIDPaymentSource"
    PaymentOptionsIDPaymentSource:
      type: "object"
      properties:
        sourceId:
          type: "string"
          description: "A unique identifier for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c"
        sourceClientSecret:
          type: "string"
          description: "The unique client secret for the payment source."
          example: "a231f38d-3a07-4a13-96ed-89693ba7d56c_f6d8c951-59c9-4ef3-ac45-9f33c77d2f46"
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/payment-options/740865108"
        id:
          type: "number"
          example: 740865108
        nickName:
          type: "string"
          example: "Default"
        isDefault:
          type: "string"
          example: "true"
        type:
          type: "string"
          example: "CreditCardMethod"
        creditCard:
          type: "object"
          properties:
            expirationMonth:
              type: "string"
              description: "One to two digits representing the expiration month."
              example: "1"
            expirationYear:
              type: "string"
              description: "Four digits representing the expiration year."
              example: "2030"
            brand:
              type: "string"
              description: "The card brand (e.g. Visa, MasterCard, American Express,\
                \ etc.)."
              example: "Visa"
            lastFourDigits:
              type: "string"
              description: "The last four digits of the card number. (e.g. 1111)"
              example: "1234"
    PaymentSession:
      type: "object"
      properties:
        id:
          type: "string"
          description: "A unique identifier for this session."
        status:
          type: "string"
          description: "The current state of the session. Possible values are:\n \
            \ * requires_source\n  * requires_confirmation\n  * pending\n  * pending_funds\n\
            \  * chargeable\n  * complete\n  * processing\n  * failed\n  * pending_redirect\n"
        clientSecret:
          type: "string"
          description: "The unique client secret related to this session."
        redirectUrl:
          type: "string"
          description: "The redirect URL. This attribute only be displayed when pending_redirect\
            \ status."
          example: "https://api.digitalriver.com:80/payments/redirects/12759bb0-xxxx-4bdb-bfeb-9095ba8059fc?apiKey=a88fxxxx1eef47eb95bc609c22e593c8"
      description: "The payment session information."
    PaymentSessionWithAmount:
      allOf:
      - $ref: "#/components/schemas/PaymentSession"
      - type: "object"
        properties:
          amountContributed:
            type: "object"
            properties:
              currency:
                type: "string"
                description: "Three-letter ISO currency code associated with the object."
                example: "USD"
              value:
                type: "number"
                description: "Value associated with the object."
                example: 1059.5
            description: "The amount which is contributed by this payment source."
          amountRemainingToBeContributed:
            type: "object"
            properties:
              currency:
                type: "string"
                description: "Three-letter ISO currency code associated with the object."
                example: "USD"
              value:
                type: "number"
                description: "Value associated with the object."
                example: 1059.5
            description: "The remaining amount which need to be contributed for this\
              \ cart."
    DefaultPurchasePlans:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/purchase-plan/search"
        purchasePlan:
          type: "array"
          items:
            $ref: "#/components/schemas/DefaultCurrency"
        totalResults:
          type: "string"
          example: "2"
    DefaultPurchasePlan:
      type: "object"
      properties:
        id:
          type: "string"
          example: "11859200"
        isAuthenticationRequiredToBrowse:
          type: "string"
          example: "false"
        purchasePlanName:
          type: "string"
          example: "Copy of @EmailDomain"
        brandDisplayName:
          type: "string"
          example: "@EmailDomain"
        targetMarketId:
          type: "string"
          example: "35600"
        targetMarketName:
          type: "string"
          example: "@EmailDomain"
    DefaultShippingOptions:
      type: "object"
      properties:
        shippingOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options"
            shippingOption:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options/5858800"
                  description:
                    type: "string"
                    description: "The description of the shipping option."
                    example: "UPS"
                  formattedCost:
                    type: "string"
                    description: "The sum of the shipping cost in the locale currency\
                      \ format. It displays a currency symbol such as the dollar sign,\
                      \ a decimal separator, and the number of fractional digits.\
                      \ Contact your Digital River team to set up the formatted cost."
                    example: "19.99USD"
                  applyShippingOptionToCart:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/apply-shipping-option?shippingOptionId=5858800"
    ExpandedShippingOptions:
      type: "object"
      properties:
        shippingOptions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options"
            shippingOption:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options/5858800"
                  id:
                    type: "integer"
                    description: "The shipping option identifier."
                    example: 142400
                  description:
                    type: "string"
                    description: "The description of the shipping option."
                    example: "UPS"
                  cost:
                    type: "object"
                    description: "The shipping fee for the shipping option."
                    allOf:
                    - $ref: "#/components/schemas/DefaultCurrency"
                  formattedCost:
                    type: "string"
                    description: "The sum of the shipping cost in the locale currency\
                      \ format. It displays a currency symbol such as the dollar sign,\
                      \ a decimal separator, and the number of fractional digits.\
                      \ Contact your Digital River team to set up the formatted cost."
                    example: "19.99USD"
                  costWithDiscount:
                    type: "object"
                    properties:
                      currency:
                        type: "string"
                        example: "USD"
                      value:
                        type: "string"
                        example: "19.14"
                    description: "The shipping fee for the shipping option with a\
                      \ shipping discount."
                  formattedCostWithDiscount:
                    type: "string"
                    description: "The sum of the shipping cost with a discount in\
                      \ the locale currency format. It displays a currency symbol\
                      \ such as the dollar sign, a decimal separator, and the number\
                      \ of fractional digits. Contact your Digital River team to set\
                      \ up the formatted cost with a discount."
                    example: "19.14USD"
                  applyShippingOptionToCart:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/apply-shipping-option?shippingOptionId=5858800"
    DefaultShippingOption:
      type: "object"
      properties:
        shippingOption:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options/142400"
            id:
              type: "integer"
              description: "The shipping option identifier."
              example: 142400
            description:
              type: "string"
              description: "The description of the shipping option."
              example: "UPS Ground"
            cost:
              type: "object"
              description: "The shipping fee for the shipping option."
              allOf:
              - $ref: "#/components/schemas/DefaultCurrency"
            formattedCost:
              type: "string"
              description: "The sum of the shipping cost in the locale currency format.\
                \ It displays a currency symbol such as the dollar sign, a decimal\
                \ separator, and the number of fractional digits. Contact your Digital\
                \ River team to set up the formatted cost."
              example: "19.99USD"
            applyShippingOptionToCart:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/apply-shipping-option?shippingOptionId=142400"
    ExpandedShippingOption:
      type: "object"
      properties:
        shippingOption:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/shipping-options/142400"
            id:
              type: "integer"
              description: "The shipping option identifier."
              example: 142400
            description:
              type: "string"
              description: "The description of the shipping option."
              example: "UPS Ground"
            cost:
              type: "object"
              description: "The shipping fee for the shipping option."
              allOf:
              - $ref: "#/components/schemas/DefaultCurrency"
            formattedCost:
              type: "string"
              description: "The sum of the shipping cost in the locale currency format.\
                \ It displays a currency symbol such as the dollar sign, a decimal\
                \ separator, and the number of fractional digits. Contact your Digital\
                \ River team to set up the formatted cost."
              example: "19.99USD"
            costWithDiscount:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "19.14"
              description: "The shipping fee for the shipping option with a shipping\
                \ discount."
            formattedCostWithDiscount:
              type: "string"
              description: "The sum of the shipping cost with a discount in the locale\
                \ currency format. It displays a currency symbol such as the dollar\
                \ sign, a decimal separator, and the number of fractional digits.\
                \ Contact your Digital River team to set up the formatted cost with\
                \ a discount."
              example: "19.14USD"
            applyShippingOptionToCart:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/apply-shipping-option?shippingOptionId=142400"
    DefaultShopper:
      type: "object"
      properties:
        shopper:
          type: "object"
          properties:
            uri:
              type: "string"
              description: "The Uniform Resource Identifier."
              example: "https://api.digitalriver.com/v1/shoppers/me"
            id:
              type: "integer"
              description: "The unique identifier for the shopper."
              example: 489475657389
            username:
              type: "string"
              description: "The shopper's user name."
              example: "jswanson@digitalriver.com"
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Automation"
            lastName:
              type: "string"
              description: "The shopper's last name."
              example: "Tester"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "jswanson@digitalriver.com"
            paymentOptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
              description: "The saved payment options."
            addresses:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/addresses"
              description: "The saved addresses."
            orders:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/orders"
              description: "The shopper's orders."
            subscriptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/subscriptions"
              description: "The shopper's subscriptions."
    ExpandedShopper:
      type: "object"
      properties:
        shopper:
          type: "object"
          properties:
            uri:
              type: "string"
              description: "The Uniform Resource Identifier."
              example: "https://api.digitalriver.com/v1/shoppers/me"
            id:
              type: "integer"
              description: "The unique identifier for the shopper."
              example: 489475657389
            username:
              type: "string"
              description: "The shopper's user name."
              example: "jswanson@digitalriver.com"
            externalReferenceId:
              type: "string"
              description: "The external reference identifier."
              example: "ABC123456789ABC"
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Automation"
            lastName:
              type: "string"
              description: "The shopper's last name."
              example: "Tester"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "jswanson@digitalriver.com"
            locale:
              type: "string"
              description: "The shopper's preferred locale."
              example: "en_US"
            currency:
              type: "string"
              description: "The shopper's preferred currency."
              example: "USD"
            sendMail:
              type: "string"
              example: "false"
            sendEmail:
              type: "string"
              description: "Send email notification to the email address. This is\
                \ for test order only, non-test order will ignore this value."
              example: "true"
            ipAddress:
              type: "string"
              description: "The shopper's IP address. IPv4 or IPv6."
              example: "127.0.0.1"
            paymentOptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
              description: "The saved payment options."
            addresses:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/addresses"
              description: "The saved addresses."
            orders:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/orders"
              description: "The shopper's orders."
            subscriptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/subscriptions"
              description: "The shopper's subscriptions."
    EmptyResponse:
      type: "string"
      example: "This will be empty response."
    DefaultClientHostedShopper:
      type: "object"
      properties:
        shopper:
          type: "object"
          properties:
            uri:
              type: "string"
              description: "The Uniform Resource Identifier."
              example: "https://api.digitalriver.com/v1/shoppers/me"
            id:
              type: "integer"
              description: "The unique identifier for the shopper."
              example: 1234567890
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Automation"
            lastName:
              type: "string"
              description: "The shopper's last name."
              example: "Tester"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "jswanson@digitalriver.com"
            paymentOptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
              description: "The saved payment options."
            addresses:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/addresses"
              description: "The saved addresses."
            orders:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/orders"
              description: "The shopper's orders."
            subscriptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/subscriptions"
              description: "The shopper's subscriptions."
    ExpandedClientHostedShopper:
      type: "object"
      properties:
        shopper:
          type: "object"
          properties:
            uri:
              type: "string"
              description: "The Uniform Resource Identifier."
              example: "https://api.digitalriver.com/v1/shoppers/me"
            id:
              type: "integer"
              description: "The unique identifier for the shopper."
              example: 1234567890
            externalReferenceId:
              type: "string"
              description: "The external reference identifier."
              example: "ABC123456789ABC"
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Automation"
            lastName:
              type: "string"
              description: "The shopper's last name."
              example: "Tester"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "jswanson@digitalriver.com"
            locale:
              type: "string"
              description: "The shopper's preferred locale."
              example: "en_US"
            currency:
              type: "string"
              description: "The shopper's preferred currency."
              example: "USD"
            sendMail:
              type: "string"
              example: "false"
            sendEmail:
              type: "string"
              description: "Send email notification to the email address. This is\
                \ for test order only, non-test order will ignore this value."
              example: "true"
            ipAddress:
              type: "string"
              description: "The shopper's IP address. IPv4 or IPv6."
              example: "127.0.0.1"
            paymentOptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/payment-options"
              description: "The saved payment options."
            addresses:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/addresses"
              description: "The saved addresses."
            orders:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/orders"
              description: "The shopper's orders."
            subscriptions:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/subscriptions"
              description: "The shopper's subscriptions."
    DefaultShopperRequest:
      type: "object"
      properties:
        shopper:
          type: "object"
          properties:
            username:
              type: "string"
              description: "The shopper's user name."
              example: "jswanson@digitalriver.com"
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Automation"
            lastName:
              type: "string"
              description: "The shopper's last name."
              example: "Tester"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "jswanson@digitalriver.com"
            password:
              type: "string"
              description: "The shopper's password."
              example: "qwerasdf"
            locale:
              type: "string"
              description: "The shopper's preferred locale."
              example: "en_US"
            currency:
              type: "string"
              description: "The shopper's preferred currency."
              example: "USD"
            sendMail:
              type: "boolean"
              example: true
            sendEMail:
              type: "boolean"
              description: "Send email notification to the email address. This is\
                \ for test order only, non-test order will ignore this value."
              example: true
    DefaultClientHostedShopperRequest:
      type: "object"
      properties:
        shopper:
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "The shopper's first name."
              example: "Automation"
            lastName:
              type: "string"
              description: "The shopper's last name."
              example: "Tester"
            externalReferenceId:
              type: "string"
              description: "The external reference identifier."
              example: "ABC123456789ABC"
            emailAddress:
              type: "string"
              description: "The shopper's email address."
              example: "jswanson@digitalriver.com"
            locale:
              type: "string"
              description: "The shopper's preferred locale."
              example: "en_US"
            currency:
              type: "string"
              description: "The shopper's preferred currency."
              example: "USD"
            sendMail:
              type: "boolean"
              example: true
            sendEMail:
              type: "boolean"
              description: "Send email notification to the email address. This is\
                \ for test order only, non-test order will ignore this value."
              example: true
    ShopperToken:
      type: "object"
      properties:
        access_token:
          type: "string"
        token_type:
          type: "string"
        expires_in:
          type: "string"
        refresh_token:
          type: "string"
    WebCheckout:
      type: "object"
      properties:
        cart:
          type: "object"
          properties:
            lineItems:
              type: "object"
              properties:
                lineItem:
                  type: "object"
                  properties:
                    quantity:
                      type: "string"
                      example: "15"
                    product:
                      type: "object"
                      properties:
                        id:
                          type: "string"
                          example: "12345"
                        externalReferenceId:
                          type: "string"
                          example: "12345"
                        companyId:
                          type: "string"
                          example: "company"
            offers:
              type: "object"
              properties:
                offerId:
                  type: "string"
                  example: "1234567890"
    DefaultSubmitCart:
      type: "object"
      properties:
        order:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/orders/47278080023"
            id:
              type: "string"
              example: "47278080023"
            submissionDate:
              type: "string"
              example: "2018-04-27T20:31:13.109Z"
            displayName:
              type: "string"
              example: "New Order"
            locale:
              type: "string"
              example: "en_US"
            optIn:
              type: "string"
              example: "false"
            testOrder:
              type: "string"
              example: "false"
            taxExempt:
              type: "string"
              example: "false"
            businessEntityCode:
              type: "string"
              example: "DR_INC-ENTITY"
            orderState:
              type: "string"
              description: "The current state of the order. The possible values are\
                \ as follows. Open, In Process, Cancelled, Source Pending Redirect\
                \ or Submitted."
              example: "Submitted"
            orderStateDetails:
              type: "object"
              properties:
                description:
                  type: "string"
                  example: "Settled"
                settled:
                  $ref: "#/components/schemas/DefaultCurrency"
                refunded:
                  $ref: "#/components/schemas/DefaultCurrency"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
        lineItems:
          type: "object"
          properties:
            lineItem:
              type: "object"
              properties:
                id:
                  type: "string"
                  example: "488822390023"
                quantity:
                  type: "string"
                  example: "1"
                product:
                  $ref: "#/components/schemas/DefaultProduct"
                lineItemState:
                  type: "string"
                  example: "Downloadable"
                lineItemStateDetails:
                  $ref: "#/components/schemas/lineItemStateDetails"
                pricing:
                  $ref: "#/components/schemas/ExpandedLineItemPrice"
                downloads:
                  type: "object"
                  properties:
                    downloadUri:
                      type: "string"
                      example: "https://wgtintot12.digitalriver.com/wgt/9B5A4FCEF11DA80C/171F14235882A3D3E56B5723F9D46513279A35381E6ECCFA38DC305C96D769173E906E98A04A2B5B3CFFB85C93D810E7B365B18617EBAE4682F5E46FAD1C55CE291C52E8142F3D624C7461A8833978160451C577DBEF2976/demosft1/WaterLilies.jpg"
                customAttributes:
                  $ref: "#/components/schemas/DefaultCustomAttributes"
                billingAgreementId:
                  type: "string"
                  description: "Digital River billing agreement ID. It represents\
                    \ the terms the customer agreed to when they stored their card\
                    \ details or chose to apply them to any kind of recurring purchase.\
                    \ The ID of the agreement can then be referenced for subsequent\
                    \ purchases, which gives us the ability to tie them together."
                  example: "fc86a666-9f2f-4294-b591-468ae34122ff"
        billingAddress:
          $ref: "#/components/schemas/BillingAddress"
        shippingAddress:
          $ref: "#/components/schemas/ShippingAddress"
        taxInclusive:
          type: "boolean"
          description: "The price list setup for the currency.\n  * If true, the price\
            \ list is set to tax inclusive.\n  * If false, the price list is set to\
            \ tax exclusive.\n"
          example: false
        landedCostState:
          $ref: "#/components/schemas/OrderLandedCostState"
        pricing:
          $ref: "#/components/schemas/CartOrderLevelExpandPrice"
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
        payment:
          $ref: "#/components/schemas/SubmitCartResponsePayment"
        paymentCompletionResources:
          type: "object"
        termsOfSalesAcceptance:
          type: "string"
          description: "To pass whether or not the customer accepted the Terms of\
            \ Service."
          example: "true"
        paymentSession:
          $ref: "#/components/schemas/PaymentSession"
        customerType:
          type: "string"
          description: "Shopper Type applied to this cart.  B as Business, I as Individual."
          example: "B"
        taxRegistrations:
          $ref: "#/components/schemas/TaxRegistrations"
        organizationId:
          type: "string"
          description: "Only visible when organizationId is explicityly provided."
          example: "digitalriver12345"
    ExpandedSubmitCart:
      type: "object"
      properties:
        order:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/orders/100009159770019"
            id:
              type: "integer"
              example: 100009159770019
            submissionDate:
              type: "string"
              example: "2018-05-04T14:56:57.150Z"
            displayName:
              type: "string"
              example: "New Order"
            locale:
              type: "string"
              example: "en_US"
            optIn:
              type: "string"
              example: "false"
            testOrder:
              type: "string"
              example: "false"
            taxExempt:
              type: "string"
              example: "false"
            businessEntityCode:
              type: "string"
              example: "DR_INC-ENTITY"
            orderState:
              type: "string"
              description: "The current state of the order. The possible values are\
                \ as follows. Open, In Process, Cancelled, Source Pending Redirect\
                \ or Submitted."
              example: "Submitted"
            orderStateDetails:
              type: "object"
              properties:
                description:
                  type: "string"
                settled:
                  $ref: "#/components/schemas/DefaultCurrency"
                refunded:
                  $ref: "#/components/schemas/DefaultCurrency"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
        lineItems:
          type: "object"
          properties:
            lineItem:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "integer"
                    example: 10000378194300020
                  quantity:
                    type: "integer"
                    example: 1
                  product:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358700"
                      id:
                        type: "integer"
                        example: 64358700
                      name:
                        type: "string"
                        example: "Class VI"
                      displayName:
                        type: "string"
                        example: "Class VI"
                      shortDescription:
                        type: "string"
                        example: "Class VI is the most complete and extensible GIS\
                          \ available. It includes all the functionality of Class\
                          \ I and Class II and adds advanced geoprocessing and data\
                          \ conversion capabilities. Professional GIS users use Class\
                          \ VI for all aspects of data building, modeling, analysis,\
                          \ and map display for screen and output."
                      longDescription:
                        type: "string"
                        example: "<p>Class VI is the most complete and extensible\
                          \ GIS available. It includes all the functionality of Class\
                          \ I and Class II and adds advanced geoprocessing and data\
                          \ conversion capabilities. Professional GIS users use Class\
                          \ VI for all aspects of data building, modeling, analysis,\
                          \ and map display for screen and output.</p><p>A complete\
                          \ GIS out of the box, Class VI provides all the functionality\
                          \ for creating and managing an intelligent GIS. This functionality\
                          \ is accessible via an easy-to-use interface that is customizable\
                          \ and extensible through models, scripting, and applications.</p>"
                      productType:
                        type: "string"
                        example: "DOWNLOAD"
                      sku:
                        type: "string"
                        example: "Class VI"
                      externalReferenceId:
                        type: "string"
                      companyId:
                        type: "string"
                        example: "demosft1"
                      displayableProduct:
                        type: "string"
                        example: "true"
                      purchasable:
                        type: "string"
                        example: "true"
                      manufacturerName:
                        type: "string"
                      manufacturerPartNumber:
                        type: "string"
                      thumbnailImage:
                        type: "string"
                        example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classVIThumb_v2.jpg"
                      productImage:
                        type: "string"
                        example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classVIBox_v2.jpg"
                      keywords:
                        type: "string"
                      customAttributes:
                        $ref: "#/components/schemas/DefaultCustomAttributes"
                  lineItemState:
                    type: "string"
                    example: "Downloadable"
                  lineItemStateDetails:
                    $ref: "#/components/schemas/lineItemStateDetails"
                  pricing:
                    $ref: "#/components/schemas/ExpandedLineItemPrice"
                  downloads:
                    type: "object"
                    properties:
                      downloadUri:
                        type: "array"
                        items:
                          type: "string"
                          example: "https://wgtsysot12.digitalriver.com/wgt/9B5A4FCEF11DA80C/171F14235882A3D349C4DF3E9F68F51B28573D6CB50E888238DC305C96D769176F6A4F895B77C58CF0F67A3572E1FE49934F924414F2486E45C01D39B94ADFA2E0920C4390CBA6042FE0C88CD46AAEA99C060E2044E521050A7DE0793B014624647C638FDE4F6D4D/demosft1/WaterLilies.jpg"
                  digitalRights:
                    type: "object"
                  customAttributes:
                    $ref: "#/components/schemas/DefaultCustomAttributes"
                  billingAgreementId:
                    type: "string"
                    description: "Digital River billing agreement ID. It represents\
                      \ the terms the customer agreed to when they stored their card\
                      \ details or chose to apply them to any kind of recurring purchase.\
                      \ The ID of the agreement can then be referenced for subsequent\
                      \ purchases, which gives us the ability to tie them together."
                    example: "fc86a666-9f2f-4294-b591-468ae34122ff"
        billingAddress:
          $ref: "#/components/schemas/BillingAddress"
        shippingAddress:
          $ref: "#/components/schemas/ShippingAddress"
        shippingMethod:
          type: "object"
          properties:
            code:
              type: "integer"
              example: 142400
            description:
              type: "string"
              example: "USPS - Priority Mail"
        taxInclusive:
          type: "boolean"
          description: "The price list setup for the currency.\n  * If true, the price\
            \ list is set to tax inclusive.\n  * If false, the price list is set to\
            \ tax exclusive.\n"
          example: false
        landedCostState:
          $ref: "#/components/schemas/OrderLandedCostState"
        pricing:
          $ref: "#/components/schemas/CartOrderLevelExpandPrice"
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethodObjectPaymentSource"
        payment:
          $ref: "#/components/schemas/SubmitCartResponsePayment"
        paymentCompletionResources:
          type: "object"
        termsOfSalesAcceptance:
          type: "string"
          description: "To pass whether or not the customer accepted the Terms of\
            \ Service."
          example: "true"
        paymentSession:
          $ref: "#/components/schemas/PaymentSession"
        customerType:
          type: "string"
          description: "Shopper Type applied to this cart.  B as Business, I as Individual."
          example: "B"
        taxRegistrations:
          $ref: "#/components/schemas/TaxRegistrations"
        organizationId:
          type: "string"
          description: "Only visible when organizationId is explicityly provided."
          example: "digitalriver12345"
    DefaultResumeCart:
      type: "object"
      properties:
        resumeCart:
          $ref: "#/components/schemas/DefaultSubmitCart"
    ExpandedResumeCart:
      type: "object"
      properties:
        resumeCart:
          $ref: "#/components/schemas/ExpandedSubmitCart"
    SubmitCartResponsePayment:
      type: "object"
      properties:
        name:
          type: "string"
          description: "The given name of this payment."
          example: "Visa"
        displayableNumber:
          type: "string"
          description: "The card number, only display the last four digits. (e.g.\
            \ ************1111)"
          example: "************1111"
        expirationMonth:
          type: "integer"
          description: "One to two digits representing the expiration month."
        expirationYear:
          type: "integer"
          description: "Four digits representing the expiration year."
          example: 2030
        softDescriptor:
          type: "string"
          example: "DRI*demosft1"
      description: "Payment information, displayed when using a non-Payment Source\
        \ created payment."
    OrderResponsePayment:
      type: "object"
      properties:
        paymentMethodName:
          type: "string"
          description: "The given name of this payment."
          example: "discover"
        displayableNumber:
          type: "string"
          description: "The card number, only display the last four digits. (e.g.\
            \ ************1111)"
          example: "************4321"
        expirationMonth:
          type: "string"
          description: "One to two digits representing the expiration month."
          example: "08"
        expirationYear:
          type: "string"
          description: "Four digits representing the expiration year."
          example: "2030"
        customerFirstName:
          type: "string"
          example: "AUTOMATION"
        customerLastName:
          type: "string"
          example: "TESTER"
        customerEmail:
          type: "string"
          example: "automatedtester68091904@digitalriver.com"
        paymentAmount:
          $ref: "#/components/schemas/DefaultCurrency"
        softDescriptor:
          type: "string"
          example: "DRI*demosft1"
      description: "Payment information, displayed when using a non-Payment Source\
        \ created payment."
    ExpandedOrderResponsePayment:
      type: "object"
      properties:
        paymentMethodName:
          type: "string"
          description: "The given name of this payment."
          example: "visa"
        displayableNumber:
          type: "string"
          description: "The card number, only display the last four digits. (e.g.\
            \ ************1111)"
          example: "************4321"
        expirationMonth:
          type: "string"
          description: "One to two digits representing the expiration month."
          example: "08"
        expirationYear:
          type: "string"
          description: "Four digits representing the expiration year."
          example: "2030"
        customerFirstName:
          type: "string"
          example: "JAMES"
        customerLastName:
          type: "string"
          example: "SWANSON"
        customerEmail:
          type: "string"
          example: "144877888@digitalriver.com"
        paymentAmount:
          $ref: "#/components/schemas/DefaultCurrency"
        softDescriptor:
          type: "string"
          example: "DRI*demosft1"
      description: "Payment information, displayed when using a non-Payment Source\
        \ created payment."
    CartLandedCostState:
      type: "string"
      description: "The state of landed cost calculation whose enumerated values are\
        \ as follows:\n  * NOT_ELIGIBLE\n    * The current cart is not eligible for\
        \ landed cost calculation.\n  * PREPAID\n    * The current cart is eligible\
        \ for landed cost calculation, and the landed cost will be prepaid. When the\
        \ landedCostState is PREPAID, but the importTaxAndDuty value is 0, it might\
        \ indicate that landed cost is not required.\n  * VIEWED_NOT_ELIGIBLE\n  \
        \  * The landed cost state was ELIGIBLE or PREPAID, then became not eligible\
        \ due to a change in the order that triggered the status to change to VIEWED_NOT_ELIGIBLE.\
        \ For example, the customer changed their shipping address or added a line\
        \ item or removed a line item.\n  * ERROR\n    * The landed cost calculation\
        \ failed because the integration service was unavailable.\n"
      example: "NOT_ELIGIBLE"
    OrderLandedCostState:
      type: "string"
      description: "The state of landed cost calculation whose enumerated values are\
        \ as follows:\n  * NOT_ELIGIBLE\n    * The landed cost for the requisition\
        \ was not prepaid.\n  * PREPAID\n    * The landed cost for the requisition\
        \ was prepaid. When the landedCostState is PREPAID but the importTaxAndDuty\
        \ value is 0, it might indicate landed cost is not required.\n  * VIEWED_NOT_ELIGIBLE\n\
        \    * The landed cost for the requisition was not prepaid.\n  * ERROR\n \
        \   * The landed cost  was not prepaied because the calculation failed. This\
        \ error occurs when the integration service is unavailable.\n"
      example: "NOT_ELIGIBLE"
    CartOrderLevelDefaultPrice:
      type: "object"
      properties:
        subtotal:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1059.5
          description: "Order total before applying the order level discount.\n- It\
            \ includes:\n    * The line item level discount\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item.\n\
            \    * The \"Excluded from price\" fee (a visible fee)\n    * If the price\
            \ list is set to tax inclusive, this price will include tax.\n- It does\
            \ not include:\n    * The order level discount\n    * If price list is\
            \ set to tax exclusive, this price will NOT include tax.\n- The value\
            \ for this field is the sum of all line item level salePriceWithQuantity\
            \ values. If there is an \"Excluded from price\" (a visible fee), it will\
            \ be treated as a line item and included in this value.\n"
        discount:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "Order level discount.\n- It includes:\n    * If the price\
            \ list is set to tax inclusive, this price will include tax\n- It does\
            \ not include:\n    * line item level discount.\n    * If price list is\
            \ set to tax exclusive, this price will NOT include tax\n- If you need\
            \ an overall discount for this order, you would need to sum the values\
            \ for totalDiscountWithQuantity and discount.\n"
        shippingAndHandling:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 11.47
          description: "The shipping and handling fee.\n- If the price list is set\
            \ to tax inclusive, this price will include tax.\n- If price list is set\
            \ to tax exclusive, this price will NOT include tax.\n"
        importTaxAndDuty:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "The sum of import taxes and duties for all line items."
        tax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 178.49
          description: "The sum of all tax of this order.\n"
        orderTotal:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1070.97
          description: "The final price of the order.\n"
        formattedSubtotal:
          type: "string"
          description: "The formatted subtotal."
          example: "1,059.50GBP"
        formattedDiscount:
          type: "string"
          description: "The formatted discount."
          example: "0.00USB"
        formattedShippingAndHandling:
          type: "string"
          description: "The formatted shippingAndHandling."
          example: "11.47USD"
        formattedImportTaxAndDuty:
          type: "string"
          description: "Formatted importTaxAndDuty, that displays symbols such as\
            \ the dollar sign, a decimal separator, and the number of fractional digits.\
            \ Contact your Digital River team to set up the formatted tax and duty."
          example: "0.00USD"
        formattedTax:
          type: "string"
          description: "The formatted tax."
          example: "178.49USD"
        formattedOrderTotal:
          type: "string"
          description: "The formatted orderTotal."
          example: "1,070.97USD"
    CartOrderLevelExpandPrice:
      type: "object"
      properties:
        subtotal:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1059.5
          description: "Order total before applying the order level discount. This\
            \ is calculated based on sum of line item level salePriceWithQuantity.\n\
            - It includes:\n    * The line item level discount\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item.\n\
            \    * The \"Excluded from price\" fee (a visible fee)\n    * If the price\
            \ list is set to tax inclusive, this price will include tax.\n- It does\
            \ not include:\n    * The order level discount\n    * If price list is\
            \ set to tax exclusive, this price will NOT include tax.\n- The value\
            \ for this field is the sum of all line item level salePriceWithQuantity\
            \ values. If there is an \"Excluded from price\" (a visible fee), it will\
            \ be treated as a line item and included in this value.\n"
        subtotalWithDiscount:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1059.5
          description: "Subtotal applied order level discount.\n  * If the price list\
            \ is set to tax inclusive, this price will include tax.\n  * If price\
            \ list is set to tax exclusive, this price will NOT include tax.\n  *\
            \ The value for this field uses the following formula: subtotal − discount\n"
        discount:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "Order level discount.\n- It includes:\n    * If the price\
            \ list is set to tax inclusive, this price will include tax\n- It does\
            \ not include:\n    * line item level discount.\n    * If price list is\
            \ set to tax exclusive, this price will NOT include tax\n- If you need\
            \ an overall discount for this order, you would need to sum the values\
            \ for totalDiscountWithQuantity and discount.\n"
        shippingAndHandling:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 11.47
          description: "The shipping and handling fee.\n- If the price list is set\
            \ to tax inclusive, this price will include tax.\n- If price list is set\
            \ to tax exclusive, this price will NOT include tax.\n"
        importTaxAndDuty:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "The sum of import taxes and duties for all line items."
        tax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 178.49
          description: "The sum of all tax of this order.\n"
        orderTotal:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1070.97
          description: "The final price of the order.\n"
        formattedSubtotal:
          type: "string"
          description: "The formatted subtotal."
          example: "1,059.50GBP"
        formattedDiscount:
          type: "string"
          description: "The formatted discount."
          example: "0.00USB"
        formattedShippingAndHandling:
          type: "string"
          description: "The formatted shippingAndHandling."
          example: "11.47USD"
        formattedImportTaxAndDuty:
          type: "string"
          description: "Formatted importTaxAndDuty, that displays symbols such as\
            \ the dollar sign, a decimal separator, and the number of fractional digits.\
            \ Contact your Digital River team to set up the formatted tax and duty."
          example: "0.00USD"
        formattedTax:
          type: "string"
          description: "The formatted tax."
          example: "178.49USD"
        formattedOrderTotal:
          type: "string"
          description: "The formatted orderTotal."
          example: "1,070.97USD"
    OrderOrderLevelExpandPrice:
      type: "object"
      properties:
        subtotal:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1059.5
          description: "Order total before applying the order level discount.\n- It\
            \ includes:\n    * The line item level discount\n    * The \"Included\
            \ in Price\" fee (an invisible fee) if it's configured for the line item.\n\
            \    * The \"Excluded from price\" fee (a visible fee)\n    * If the price\
            \ list is set to tax inclusive, this price will include tax.\n- It does\
            \ not include:\n    * The order level discount\n    * If price list is\
            \ set to tax exclusive, this price will NOT include tax.\n- The value\
            \ for this field is the sum of all line item level salePriceWithQuantity\
            \ values. If there is an \"Excluded from price\" (a visible fee), it will\
            \ be treated as a line item and included in this value.\n"
        subtotalWithDiscount:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1059.5
          description: "Subtotal applied order level discount.\n  * If the price list\
            \ is set to tax inclusive, this price will include tax.\n  * If price\
            \ list is set to tax exclusive, this price will NOT include tax.\n  *\
            \ The value for this field uses the following formula: subtotal − discount\n"
        incentive:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 0
          description: "Order level discount. This is calculated based on sum of line\
            \ item level salePriceWithQuantity.\n- It includes:\n    * If the price\
            \ list is set to tax inclusive, this price will include tax\n- It does\
            \ not include:\n    * line item level discount.\n    * If price list is\
            \ set to tax exclusive, this price will NOT include tax\n- If you need\
            \ an overall discount for this order, you would need to sum the values\
            \ for totalDiscountWithQuantity and discount.\n"
        shipping:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 11.47
          description: "The shipping and handling fee.\n- If the price list is set\
            \ to tax inclusive, this price will include tax.\n- If price list is set\
            \ to tax exclusive, this price will NOT include tax.\n"
        tax:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 178.49
          description: "The sum of all tax of this order.\n"
        total:
          type: "object"
          properties:
            currency:
              type: "string"
              example: "USD"
            value:
              type: "number"
              example: 1070.97
          description: "The final price of the order.\n"
        formattedSubtotal:
          type: "string"
          description: "The formatted subtotal."
          example: "1,059.50GBP"
        formattedIncentive:
          type: "string"
          description: "The formatted incentive."
          example: "0.00USB"
        formattedShipping:
          type: "string"
          description: "The formatted shipping."
          example: "11.47USD"
        formattedTax:
          type: "string"
          description: "The formatted tax."
          example: "178.49USD"
        formattedTotal:
          type: "string"
          description: "The formatted total."
          example: "1,070.97USD"
    DefaultCategories:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/categories"
        category:
          type: "array"
          items:
            type: "object"
            properties:
              uri:
                type: "string"
                example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100"
              displayName:
                type: "string"
                example: "Shop by Category"
              products:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100/products"
    ExpandedCategories:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/categories"
        category:
          type: "array"
          items:
            type: "object"
            properties:
              uri:
                type: "string"
                example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100"
              id:
                type: "integer"
                example: 6912100
              locale:
                type: "string"
                example: "en_US"
              name:
                type: "string"
                example: "Shop by Category"
              displayName:
                type: "string"
                example: "Shop by Category"
              shortDescription:
                type: "string"
              longDescription:
                type: "string"
              thumbnailImage:
                type: "string"
                example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/category/thumbnail/shop_by_category.gif"
              customAttributes:
                $ref: "#/components/schemas/DefaultCustomAttributes"
              products:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100/products"
                  totalResults:
                    type: "integer"
                    example: 0
                  totalResultPages:
                    type: "integer"
                    example: 0
              categories:
                type: "object"
                properties:
                  category:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        uri:
                          type: "string"
                          example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912300"
                        id:
                          type: "integer"
                          example: 6912300
                        locale:
                          type: "string"
                          example: "en_US"
                        name:
                          type: "string"
                          example: "Fitness"
                        displayName:
                          type: "string"
                          example: "Fitness"
                        shortDescription:
                          type: "string"
                        longDescription:
                          type: "string"
                        thumbnailImage:
                          type: "string"
                        products:
                          type: "object"
                          properties:
                            uri:
                              type: "string"
                              example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912300/products"
    ExpandedProductCategories:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/categories"
        category:
          type: "array"
          items:
            type: "object"
            properties:
              uri:
                type: "string"
                example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100"
              id:
                type: "integer"
                example: 6912100
              locale:
                type: "string"
                example: "en_US"
              name:
                type: "string"
                example: "Shop by Category"
              displayName:
                type: "string"
                example: "Shop by Category"
              shortDescription:
                type: "string"
              longDescription:
                type: "string"
              thumbnailImage:
                type: "string"
                example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/category/thumbnail/shop_by_category.gif"
              products:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100/products"
    DefaultCategory:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100"
        id:
          type: "integer"
          example: 6912100
        locale:
          type: "string"
          example: "en_US"
        name:
          type: "string"
          example: "Shop by Category"
        displayName:
          type: "string"
          example: "Shop by Category"
        shortDescription:
          type: "string"
        longDescription:
          type: "string"
        thumbnailImage:
          type: "string"
          example: "https://drh1.img.digitalriver.com/DRHM/Storefront/Company/demosft1/images/category/thumbnail/shop_by_category.gif"
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912100/products"
        categories:
          type: "object"
          properties:
            category:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912300"
                  relation:
                    type: "string"
                    example: "https://developers.digitalriver.com/v1/shoppers/CategoriesResource"
                  displayName:
                    type: "string"
                    example: "Fitness"
                  products:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912300/products"
    ExpandedCategory:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912200"
        id:
          type: "integer"
          example: 6912200
        locale:
          type: "string"
          example: "en_US"
        name:
          type: "string"
          example: "Shop by Solution"
        displayName:
          type: "string"
          example: "Shop by Solution"
        shortDescription:
          type: "string"
        longDescription:
          type: "string"
        thumbnailImage:
          type: "string"
          example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/category/thumbnail/shop_by_solution.gif"
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912200/products"
            totalResults:
              type: "integer"
              example: 0
            totalResultPages:
              type: "integer"
              example: 0
        categories:
          type: "object"
          properties:
            category:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912600"
                  id:
                    type: "integer"
                    example: 6912600
                  locale:
                    type: "string"
                    example: "en_US"
                  name:
                    type: "string"
                    example: "Home and Home Office"
                  displayName:
                    type: "string"
                    example: "Home and Home Office"
                  shortDescription:
                    type: "string"
                  longDescription:
                    type: "string"
                  thumbnailImage:
                    type: "string"
                  products:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912600/products"
    DefaultCategoryOffers:
      type: "object"
      properties:
        categoryOffers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/42764172709/category-offers"
            categoryOffer:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/offers/42764172709/category-offers/31640300"
                  id:
                    type: "integer"
                    example: 31640300
                  category:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912300"
                      id:
                        type: "integer"
                        example: 6912300
                      locale:
                        type: "string"
                        example: "en_US"
                      name:
                        type: "string"
                        example: "Fitness"
                      displayName:
                        type: "string"
                        example: "Fitness"
                      shortDescription:
                        type: "string"
                      longDescription:
                        type: "string"
                      thumbnailImage:
                        type: "string"
                      products:
                        type: "object"
                        properties:
                          uri:
                            type: "string"
                            example: "https://api.digitalriver.com/v1/shoppers/me/categories/6912300/products"
                  discount:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        example: "percentOff"
                      value:
                        type: "string"
                        example: "25%"
          description: "Category information of the offer."
    DefaultFinancing:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/products/73248500/financing"
        financingTerm:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "integer"
                example: 1324500
              totalRepayable:
                $ref: "#/components/schemas/DefaultCurrency"
              formattedTotalRepayable:
                type: "string"
                example: "$8.92"
              creditAmount:
                $ref: "#/components/schemas/DefaultCurrency"
              formattedCreditAmount:
                type: "string"
                example: "$7.20"
              monthlyPaymentAmount:
                $ref: "#/components/schemas/DefaultCurrency"
              formattedMonthlyPaymentAmount:
                type: "string"
                example: "$0.08"
              durationInMonths:
                type: "integer"
                example: 120
              interestRatePct:
                type: "number"
                example: 0.04500000178813934
              interestRatePctForDisplay:
                type: "number"
                example: 4.5
              effectiveInterestRate:
                type: "number"
                example: 0.04500000178813934
              effectiveInterestRateForDisplay:
                type: "number"
                example: 4.5
              description:
                type: "string"
                example: "4.5% for 120 months"
    DefaultProductsInventory:
      type: "object"
      properties:
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/inventory-status"
            inventoryStatus:
              type: "array"
              items:
                $ref: "#/components/schemas/InventoryStatus"
    DefaultInventoryStatus:
      type: "object"
      properties:
        inventoryStatus:
          $ref: "#/components/schemas/InventoryStatus"
    InventoryStatus:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/inventory-status"
        product:
          type: "array"
          items:
            type: "object"
            properties:
              uri:
                type: "string"
                example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500"
              id:
                type: "integer"
                example: 64578500
              externalReferenceId:
                type: "string"
                example: "Test External Reference Number"
              companyId:
                type: "string"
                example: "demosft1"
        availableQuantity:
          type: "integer"
          example: 2147483647
        availableQuantityIsEstimated:
          type: "string"
          example: "false"
        productIsInStock:
          type: "string"
          example: "true"
        productIsAllowsBackorders:
          type: "string"
          example: "true"
        productIsTracked:
          type: "string"
          example: "false"
        requestedQuantityAvailable:
          type: "string"
          example: "true"
        status:
          type: "string"
          example: "PRODUCT_INVENTORY_IN_STOCK"
        statusIsEstimated:
          type: "string"
          example: "false"
        expectedInStockDate:
          type: "string"
        customStockMessage:
          type: "string"
    DefaultOffers:
      type: "object"
      properties:
        offers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers"
            offer:
              type: "array"
              items:
                $ref: "#/components/schemas/DefaultOfferComponent"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
    ExpandedOffers:
      type: "object"
      properties:
        offers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers"
            offer:
              type: "array"
              items:
                $ref: "#/components/schemas/ExpandedOfferComponent"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
    DefaultOffer:
      type: "object"
      properties:
        offer:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709"
            id:
              type: "integer"
              example: 154344709
            name:
              type: "string"
              example: "Home Page Security & Backup Recovery Features"
            policyName:
              type: "string"
            type:
              type: "string"
              example: "FeatureProducts"
            image:
              type: "string"
              example: "https://drh1.img.digitalriver.com/DRHM/Storefront/Site/demosft1/images/promo/security_header.gif"
            trigger:
              type: "string"
              description: "The offer trigger determines how the offer is activated\
                \ or redeemed by shoppers, possible values are: User Triggered, Always\
                \ Triggered.\n* Always Triggered: The offer is available to any shopper\
                \ on your store. Shoppers simply have to meet the conditions you set\
                \ up in the offer for the offer to be triggered and redeemed by shoppers.\n\
                * User Triggered: To be redeemed when shopper taking additional actions\
                \ on their part, for example click a link, enter a coupon code.\n"
              example: "Always Triggered"
            salesPitch:
              type: "array"
              items:
                type: "string"
                example: "[\"Header Message\",\"Footer Message\",\"Sales Pitch Extra\
                  \ Info\",\"Sales Pitch Extra Info 2\"]"
            productOffers:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers"
                productOffer:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers/64358400"
                      id:
                        type: "integer"
                        example: 64358400
                      product:
                        type: "object"
                        properties:
                          uri:
                            type: "string"
                            example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400"
                          displayName:
                            type: "string"
                            example: "Class III"
                          thumbnailImage:
                            type: "string"
                            example: "https://drh1.img.digitalriver.com/DRHM/Storefront/Company/demosft1/images/product/thumbnail/classIIIThumb_v2.jpg"
                      pricing:
                        type: "object"
                        properties:
                          listPrice:
                            $ref: "#/components/schemas/DefaultCurrency"
                          salePriceWithQuantity:
                            $ref: "#/components/schemas/DefaultCurrency"
                          formattedListPrice:
                            type: "string"
                            example: "$39.99"
                          formattedSalePriceWithQuantity:
                            type: "string"
                            example: "$38.99"
                          listPriceIncludesTax:
                            type: "string"
                            example: "false"
              description: "Product information of the offer."
            categoryOffers:
              type: "object"
              description: "Category information of the offer."
            offerBundleGroups:
              type: "object"
    DefaultOfferComponent:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709"
        name:
          type: "string"
          example: "Home Page Security & Backup Recovery Features"
        trigger:
          type: "string"
          description: "The offer trigger determines how the offer is activated or\
            \ redeemed by shoppers, possible values are: User Triggered, Always Triggered.\n\
            * Always Triggered: The offer is available to any shopper on your store.\
            \ Shoppers simply have to meet the conditions you set up in the offer\
            \ for the offer to be triggered and redeemed by shoppers.\n* User Triggered:\
            \ To be redeemed when shopper taking additional actions on their part,\
            \ for example click a link, enter a coupon code.\n"
          example: "Always Triggered"
        productOffers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers"
          description: "Product information of the offer."
        categoryOffers:
          type: "object"
          description: "Category information of the offer."
        offerBundleGroups:
          type: "object"
    ExpandedOffer:
      type: "object"
      properties:
        offer:
          $ref: "#/components/schemas/ExpandedOfferComponent"
    ExpandedOfferComponent:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709"
        id:
          type: "integer"
          example: 154344709
        name:
          type: "string"
          example: "Home Page Security & Backup Recovery Features"
        policyName:
          type: "string"
        type:
          type: "string"
          example: "FeatureProducts"
        image:
          type: "string"
          example: "https://drh1.img.digitalriver.com/DRHM/Storefront/Site/demosft1/images/promo/security_header.gif"
        trigger:
          type: "string"
          description: "The offer trigger determines how the offer is activated or\
            \ redeemed by shoppers, possible values are: User Triggered, Always Triggered.\n\
            * Always Triggered: The offer is available to any shopper on your store.\
            \ Shoppers simply have to meet the conditions you set up in the offer\
            \ for the offer to be triggered and redeemed by shoppers.\n* User Triggered:\
            \ To be redeemed when shopper taking additional actions on their part,\
            \ for example click a link, enter a coupon code.\n"
          example: "Always Triggered"
        salesPitch:
          type: "array"
          example:
          - "Header Message"
          - "Footer Message"
          - "Sales Pitch Extra Info"
          - "Sales Pitch Extra Info 2"
          items:
            type: "string"
        customAttributes:
          $ref: "#/components/schemas/DefaultCustomAttributes"
        productOffers:
          $ref: "#/components/schemas/ExpandedProductOffersComponent"
        categoryOffers:
          type: "object"
          description: "Category information of the offer."
        offerBundleGroups:
          type: "object"
    DefaultOffersForCart:
      type: "object"
      properties:
        offers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/point-of-promotions/Interstitial_CrossSell/offers"
            offer:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/Interstitial_CrossSell/offers/19351557308"
                  id:
                    type: "integer"
                    example: 19351557308
                  productOffers:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/Interstitial_CrossSell/offers/19351557308/product-offers"
                    description: "Product information of the offer."
    DefaultPOPOffers:
      type: "object"
      properties:
        offers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/SiteMerchandising_HomePageStoreSpecials/offers"
            offer:
              type: "array"
              items:
                $ref: "#/components/schemas/DefaultOfferComponent"
    ExpandedPOPOffers:
      type: "object"
      properties:
        offers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/SiteMerchandising_HomePageStoreSpecials/offers"
            offer:
              type: "array"
              items:
                $ref: "#/components/schemas/ExpandedOfferComponent"
    DefaultPointOfPromotions:
      type: "object"
      properties:
        pointOfPromotions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions"
            pointOfPromotion:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/SiteMerchandising_HomePageTopSellers"
                  id:
                    type: "string"
                    example: "SiteMerchandising_HomePageTopSellers"
                  offers:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/SiteMerchandising_HomePageTopSellers/offers"
    DefaultPointOfPromotion:
      type: "object"
      properties:
        pointOfPromotion:
          $ref: "#/components/schemas/PointOfPromotion"
    DefaultProductPointOfPromotions:
      type: "object"
      properties:
        pointOfPromotions:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/point-of-promotions"
            pointOfPromotion:
              type: "array"
              items:
                $ref: "#/components/schemas/PointOfPromotion"
    PointOfPromotion:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/SiteMerchandising_HomePageStoreSpecials"
        id:
          type: "string"
          example: "SiteMerchandising_HomePageStoreSpecials"
        offerTypes:
          type: "array"
          items:
            type: "string"
            example: "FeatureProducts"
        offers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/point-of-promotions/SiteMerchandising_HomePageStoreSpecials/offers"
    DefaultProductPricing:
      type: "object"
      properties:
        pricing:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/pricing"
            listPrice:
              $ref: "#/components/schemas/DefaultCurrency"
            salePriceWithQuantity:
              $ref: "#/components/schemas/DefaultCurrency"
            formattedListPrice:
              type: "string"
              example: "$19.99"
            formattedSalePriceWithQuantity:
              type: "string"
              example: "$17.99"
            listPriceIncludesTax:
              type: "string"
              example: "false"
            formattedCommitmentPrice:
              type: "string"
              description: "This is only available for annual paid monthly product"
              example: "$240.00"
            commitmentPrice:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "240.00"
              description: "This is only available for annual paid monthly product"
            msrpPrice:
              type: "string"
            formattedMsrpPrice:
              type: "string"
    ExpandedProductPricing:
      type: "object"
      properties:
        pricing:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/pricing"
            listPrice:
              $ref: "#/components/schemas/DefaultCurrency"
            listPriceWithQuantity:
              $ref: "#/components/schemas/DefaultCurrency"
            salePriceWithQuantity:
              $ref: "#/components/schemas/DefaultCurrency"
            formattedListPrice:
              type: "string"
              example: "$19.99"
            formattedListPriceWithQuantity:
              type: "string"
              example: "$19.99"
            formattedSalePriceWithQuantity:
              type: "string"
              example: "$17.99"
            totalDiscountWithQuantity:
              $ref: "#/components/schemas/DefaultCurrency"
            formattedTotalDiscountWithQuantity:
              type: "string"
              example: "$2.00"
            listPriceIncludesTax:
              type: "string"
              example: "false"
            formattedCommitmentPrice:
              type: "string"
              description: "This is only available for annual paid monthly product"
              example: "$240.00"
            commitmentPrice:
              type: "object"
              properties:
                currency:
                  type: "string"
                  example: "USD"
                value:
                  type: "string"
                  example: "240.00"
              description: "This is only available for annual paid monthly product"
            discountDescription:
              type: "string"
              example: "10%"
            tax:
              type: "object"
              properties:
                vatPercentage:
                  type: "integer"
                  example: 0
            feePricing:
              type: "object"
              properties:
                salePriceWithFeesAndQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedSalePriceWithFeesAndQuantity:
                  type: "string"
                  example: "$17.99"
            msrpPrice:
              type: "string"
            formattedMsrpPrice:
              type: "string"
    DefaultProductOffers:
      type: "object"
      properties:
        productOffers:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers"
            productOffer:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers/64358400"
                  id:
                    type: "integer"
                    example: 64358400
                  product:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400"
                      displayName:
                        type: "string"
                        example: "Class III"
                      thumbnailImage:
                        type: "string"
                        example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIIIThumb_v2.jpg"
                  pricing:
                    type: "object"
                    properties:
                      listPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      salePriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedListPrice:
                        type: "string"
                        example: "$39.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$38.99"
                      listPriceIncludesTax:
                        type: "string"
                        example: "false"
          description: "Product information of the offer."
    ExpandedProductOffers:
      type: "object"
      properties:
        productOffers:
          $ref: "#/components/schemas/ExpandedProductOffersComponent"
    ExpandedProductOffersComponent:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers"
        productOffer:
          type: "array"
          items:
            type: "object"
            properties:
              uri:
                type: "string"
                example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers/64358400"
              id:
                type: "integer"
                example: 64358400
              product:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400"
                  id:
                    type: "integer"
                    example: 64358400
                  name:
                    type: "string"
                    example: "Class III"
                  displayName:
                    type: "string"
                    example: "Class III"
                  shortDescription:
                    type: "string"
                    example: "Class III adds the ability to export waypoints, routes,\
                      \ and tracks from your GPS device. With Class II, all GPS data\
                      \ is converted to .shp, .shx, and .dbf files for further use\
                      \ in a GIS environment."
                  longDescription:
                    type: "string"
                    example: "this was soo long"
                  productType:
                    type: "string"
                    example: "DOWNLOAD"
                  sku:
                    type: "string"
                    example: "Class III"
                  externalReferenceId:
                    type: "string"
                    example: "GPS-XFSD"
                  companyId:
                    type: "string"
                    example: "demosft1"
                  displayableProduct:
                    type: "string"
                    example: "true"
                  purchasable:
                    type: "string"
                    example: "true"
                  manufacturerName:
                    type: "string"
                  manufacturerPartNumber:
                    type: "string"
                  minimumQuantity:
                    type: "string"
                  maximumQuantity:
                    type: "string"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIIIThumb_v2.jpg"
                  productImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIIIBox_v2.jpg"
                  keywords:
                    type: "string"
                  baseProduct:
                    type: "string"
                    example: "false"
                  customAttributes:
                    $ref: "#/components/schemas/DefaultCustomAttributes"
                  inventoryStatus:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400/inventory-status"
                      availableQuantity:
                        type: "integer"
                        example: 2147483647
                      availableQuantityIsEstimated:
                        type: "string"
                        example: "false"
                      productIsInStock:
                        type: "string"
                        example: "true"
                      productIsAllowsBackorders:
                        type: "string"
                        example: "true"
                      productIsTracked:
                        type: "string"
                        example: "false"
                      requestedQuantityAvailable:
                        type: "string"
                        example: "true"
                      status:
                        type: "string"
                        example: "PRODUCT_INVENTORY_IN_STOCK"
                      statusIsEstimated:
                        type: "string"
                        example: "false"
                      expectedInStockDate:
                        type: "string"
                      customStockMessage:
                        type: "string"
              addProductToCart:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64358400&offerId=154344709"
                  cartUri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64358400&offerId=154344709"
              salesPitch:
                type: "string"
                example: "La classe III ajoute la capacité d'exporter des buts, des\
                  \ itinéraires, et des voies de votre dispositif de GPS."
              image:
                type: "string"
              pricing:
                type: "object"
                properties:
                  listPrice:
                    $ref: "#/components/schemas/DefaultCurrency"
                  listPriceWithQuantity:
                    $ref: "#/components/schemas/DefaultCurrency"
                  salePriceWithQuantity:
                    $ref: "#/components/schemas/DefaultCurrency"
                  formattedListPrice:
                    type: "string"
                    example: "$39.99"
                  formattedListPriceWithQuantity:
                    type: "string"
                    example: "$39.99"
                  formattedSalePriceWithQuantity:
                    type: "string"
                    example: "$38.99"
                  totalDiscountWithQuantity:
                    $ref: "#/components/schemas/DefaultCurrency"
                  formattedTotalDiscountWithQuantity:
                    type: "string"
                    example: "$1.00"
                  listPriceIncludesTax:
                    type: "string"
                    example: "false"
                  discountDescription:
                    type: "string"
                    example: "$1.00"
                  tax:
                    type: "object"
                    properties:
                      vatPercentage:
                        type: "integer"
                        example: 0
      description: "Product information of the offer."
    DefaultProductOffer:
      type: "object"
      properties:
        productOffer:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers/64358400"
            id:
              type: "integer"
              example: 64358400
            product:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400"
                displayName:
                  type: "string"
                  example: "Class III"
                thumbnailImage:
                  type: "string"
                  example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIIIThumb_v2.jpg"
            addProductToCart:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500&offerId=154344709"
                cartUri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500&offerId=154344709"
            salesPitch:
              type: "string"
              example: "For testing purposes"
            image:
              type: "string"
              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Site/demosft1/images/promo/business_header.gif"
            pricing:
              type: "object"
              properties:
                listPrice:
                  $ref: "#/components/schemas/DefaultCurrency"
                salePriceWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedListPrice:
                  type: "string"
                  example: "$39.99"
                formattedSalePriceWithQuantity:
                  type: "string"
                  example: "$38.99"
                listPriceIncludesTax:
                  type: "string"
                  example: "false"
    ExpandedProductOffer:
      type: "object"
      properties:
        productOffer:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/offers/154344709/product-offers/64358400"
            id:
              type: "integer"
              example: 64358400
            product:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400"
                id:
                  type: "integer"
                  example: 64358400
                name:
                  type: "string"
                  example: "Class III"
                displayName:
                  type: "string"
                  example: "Class III"
                shortDescription:
                  type: "string"
                  example: "Class III adds the ability to export waypoints, routes,\
                    \ and tracks from your GPS device. With Class II, all GPS data\
                    \ is converted to .shp, .shx, and .dbf files for further use in\
                    \ a GIS environment."
                longDescription:
                  type: "string"
                  example: "this was soo long"
                productType:
                  type: "string"
                  example: "DOWNLOAD"
                sku:
                  type: "string"
                  example: "Class III"
                externalReferenceId:
                  type: "string"
                  example: "GPS-XFSD"
                companyId:
                  type: "string"
                  example: "demosft1"
                displayableProduct:
                  type: "string"
                  example: "true"
                purchasable:
                  type: "string"
                  example: "true"
                manufacturerName:
                  type: "string"
                manufacturerPartNumber:
                  type: "string"
                minimumQuantity:
                  type: "string"
                maximumQuantity:
                  type: "string"
                thumbnailImage:
                  type: "string"
                  example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIIIThumb_v2.jpg"
                productImage:
                  type: "string"
                  example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIIIBox_v2.jpg"
                keywords:
                  type: "string"
                baseProduct:
                  type: "string"
                  example: "false"
                customAttributes:
                  $ref: "#/components/schemas/DefaultCustomAttributes"
                inventoryStatus:
                  type: "object"
                  properties:
                    uri:
                      type: "string"
                      example: "https://api.digitalriver.com/v1/shoppers/me/products/64358400/inventory-status"
                    availableQuantity:
                      type: "integer"
                      example: 2147483647
                    availableQuantityIsEstimated:
                      type: "string"
                      example: "false"
                    productIsInStock:
                      type: "string"
                      example: "true"
                    productIsAllowsBackorders:
                      type: "string"
                      example: "true"
                    productIsTracked:
                      type: "string"
                      example: "false"
                    requestedQuantityAvailable:
                      type: "string"
                      example: "true"
                    status:
                      type: "string"
                      example: "PRODUCT_INVENTORY_IN_STOCK"
                    statusIsEstimated:
                      type: "string"
                      example: "false"
                    expectedInStockDate:
                      type: "string"
                    customStockMessage:
                      type: "string"
            addProductToCart:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64358400&offerId=154344709"
                cartUri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64358400&offerId=154344709"
            salesPitch:
              type: "string"
              example: "La classe III ajoute la capacité d'exporter des buts, des\
                \ itinéraires, et des voies de votre dispositif de GPS."
            image:
              type: "string"
            pricing:
              type: "object"
              properties:
                listPrice:
                  $ref: "#/components/schemas/DefaultCurrency"
                listPriceWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                salePriceWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedListPrice:
                  type: "string"
                  example: "$39.99"
                formattedListPriceWithQuantity:
                  type: "string"
                  example: "$39.99"
                formattedSalePriceWithQuantity:
                  type: "string"
                  example: "$38.99"
                totalDiscountWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedTotalDiscountWithQuantity:
                  type: "string"
                  example: "$1.00"
                listPriceIncludesTax:
                  type: "string"
                  example: "false"
                discountDescription:
                  type: "string"
                  example: "$1.00"
                tax:
                  type: "object"
                  properties:
                    vatPercentage:
                      type: "integer"
                      example: 0
    DefaultVariations:
      type: "object"
      properties:
        variations:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/variations"
            product:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500"
                  displayName:
                    type: "string"
                    example: "Class I"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb.jpg"
                  pricing:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/pricing"
                      formattedListPrice:
                        type: "string"
                        example: "$19.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$17.99"
                  addProductToCart:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500"
                      cartUri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500"
    ExpandedVariations:
      type: "object"
      properties:
        variations:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/variations"
            product:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500"
                  parentProduct:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
                  categories:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/categories"
                  familyAttributes:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/family-attributes"
                  id:
                    type: "integer"
                    example: 64578500
                  name:
                    type: "string"
                    example: "Class I"
                  displayName:
                    type: "string"
                    example: "Class I"
                  shortDescription:
                    type: "string"
                    example: "Class I is the perfect GPS waypoint and route manager\
                      \ for the beginning or occasional GPS user."
                  longDescription:
                    type: "string"
                    example: "Class I is the fast and easy way to create, edit, and\
                      \ transfer waypoints and routes between your computer and your\
                      \ Garmin, Magellan, or Lowrance GPS. Using Class I, you can\
                      \ manage all of your waypoints and routes, and display them\
                      \ in lists sorted by name, elevation, or distance. Class I connects\
                      \ your GPS to the best mapping and information sites on the\
                      \ Internet, giving you one-click access to street and topo maps,\
                      \ aerial photos, weather forecasts, and nearby attractions."
                  productType:
                    type: "string"
                    example: "DOWNLOAD"
                  sku:
                    type: "string"
                    example: "Class I"
                  externalReferenceId:
                    type: "string"
                    example: "Test External Reference Number"
                  companyId:
                    type: "string"
                    example: "demosft1"
                  displayableProduct:
                    type: "string"
                    example: "true"
                  purchasable:
                    type: "string"
                    example: "true"
                  manufacturerName:
                    type: "string"
                    example: "Test Manufacturer Name"
                  manufacturerPartNumber:
                    type: "string"
                    example: "Test Manufacturer Part Number"
                  minimumQuantity:
                    type: "string"
                  maximumQuantity:
                    type: "string"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb.jpg"
                  productImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox.jpg"
                  keywords:
                    type: "string"
                    example: "testKeyword"
                  baseProduct:
                    type: "string"
                    example: "false"
                  customAttributes:
                    $ref: "#/components/schemas/DefaultCustomAttributes"
                  pricing:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/pricing"
                      listPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      listPriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      salePriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedListPrice:
                        type: "string"
                        example: "$19.99"
                      formattedListPriceWithQuantity:
                        type: "string"
                        example: "$19.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$17.99"
                      totalDiscountWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedTotalDiscountWithQuantity:
                        type: "string"
                        example: "$2.00"
                      listPriceIncludesTax:
                        type: "string"
                        example: "false"
                      discountDescription:
                        type: "string"
                        example: "10%"
                      tax:
                        type: "object"
                        properties:
                          vatPercentage:
                            type: "integer"
                            example: 0
                      feePricing:
                        type: "object"
                        properties:
                          salePriceWithFeesAndQuantity:
                            $ref: "#/components/schemas/DefaultCurrency"
                          formattedSalePriceWithFeesAndQuantity:
                            type: "string"
                            example: "$17.99"
                      msrpPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedMsrpPrice:
                        type: "string"
                  inventoryStatus:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/inventory-status"
                      availableQuantity:
                        type: "integer"
                        example: 2147483647
                      availableQuantityIsEstimated:
                        type: "string"
                        example: "false"
                      productIsInStock:
                        type: "string"
                        example: "true"
                      productIsAllowsBackorders:
                        type: "string"
                        example: "true"
                      productIsTracked:
                        type: "string"
                        example: "false"
                      requestedQuantityAvailable:
                        type: "string"
                        example: "true"
                      status:
                        type: "string"
                        example: "PRODUCT_INVENTORY_IN_STOCK"
                      statusIsEstimated:
                        type: "string"
                        example: "false"
                      expectedInStockDate:
                        type: "string"
                      customStockMessage:
                        type: "string"
                  addProductToCart:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500"
                      cartUri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500"
    DefaultProducts:
      type: "object"
      properties:
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products"
            product:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
                  displayName:
                    type: "string"
                    example: "Class I"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb_v2.jpg"
                  pricing:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/pricing"
                      formattedListPrice:
                        type: "string"
                        example: "$19.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$18.99"
                  variations:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/variations"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
    ExpandedProducts:
      type: "object"
      properties:
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products"
            product:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
                  categories:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/categories"
                  familyAttributes:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/family-attributes"
                  id:
                    type: "integer"
                    example: 64358200
                  name:
                    type: "string"
                    example: "Class I"
                  displayName:
                    type: "string"
                    example: "Class I"
                  shortDescription:
                    type: "string"
                    example: "Class I is the perfect GPS waypoint and route manager\
                      \ for the beginning or occasional GPS user."
                  longDescription:
                    type: "string"
                    example: "Class I is the fast and easy way to create, edit, and\
                      \ transfer waypoints and routes between your computer and your\
                      \ Garmin, Magellan, or Lowrance GPS. Using Class I, you can\
                      \ manage all of your waypoints and routes, and display them\
                      \ in lists sorted by name, elevation, or distance. Class I connects\
                      \ your GPS to the best mapping and information sites on the\
                      \ Internet, giving you one-click access to street and topo maps,\
                      \ aerial photos, weather forecasts, and nearby attractions."
                  productType:
                    type: "string"
                    example: "DOWNLOAD"
                  sku:
                    type: "string"
                    example: "Class I"
                  externalReferenceId:
                    type: "string"
                    example: "987654"
                  companyId:
                    type: "string"
                    example: "demosft1"
                  displayableProduct:
                    type: "string"
                    example: "true"
                  purchasable:
                    type: "string"
                    example: "true"
                  manufacturerName:
                    type: "string"
                  manufacturerPartNumber:
                    type: "string"
                    example: "987654"
                  minimumQuantity:
                    type: "string"
                  maximumQuantity:
                    type: "string"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb_v2.jpg"
                  productImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox_v2.jpg"
                  keywords:
                    type: "string"
                  baseProduct:
                    type: "string"
                    example: "true"
                  customAttributes:
                    $ref: "#/components/schemas/DefaultCustomAttributes"
                  variationAttributes:
                    type: "object"
                    properties:
                      attribute:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            name:
                              type: "string"
                              example: "productType"
                            displayName:
                              type: "string"
                            domainValues:
                              type: "array"
                              items:
                                type: "string"
                                enum:
                                - "PHYSICAL"
                                - "DOWNLOAD"
                  pricing:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/pricing"
                      listPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      listPriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      salePriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedListPrice:
                        type: "string"
                        example: "$19.99"
                      formattedListPriceWithQuantity:
                        type: "string"
                        example: "$19.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$18.99"
                      totalDiscountWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedTotalDiscountWithQuantity:
                        type: "string"
                        example: "$1.00"
                      listPriceIncludesTax:
                        type: "string"
                        example: "false"
                      formattedCommitmentPrice:
                        type: "string"
                        description: "This is only available for annual paid monthly\
                          \ product"
                        example: "$240.00"
                      commitmentPrice:
                        type: "object"
                        properties:
                          currency:
                            type: "string"
                            example: "USD"
                          value:
                            type: "string"
                            example: "240.00"
                        description: "This is only available for annual paid monthly\
                          \ product"
                      discountDescription:
                        type: "string"
                        example: "$1.00"
                      tax:
                        type: "object"
                        properties:
                          vatPercentage:
                            type: "integer"
                            example: 0
                      feePricing:
                        type: "object"
                        properties:
                          salePriceWithFeesAndQuantity:
                            $ref: "#/components/schemas/DefaultCurrency"
                          formattedSalePriceWithFeesAndQuantity:
                            type: "string"
                            example: "$18.99"
                      msrpPrice:
                        type: "string"
                      formattedMsrpPrice:
                        type: "string"
                  inventoryStatus:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/inventory-status"
                      availableQuantity:
                        type: "integer"
                        example: 2147483647
                      availableQuantityIsEstimated:
                        type: "string"
                        example: "false"
                      productIsInStock:
                        type: "string"
                        example: "true"
                      productIsAllowsBackorders:
                        type: "string"
                        example: "true"
                      productIsTracked:
                        type: "string"
                        example: "false"
                      requestedQuantityAvailable:
                        type: "string"
                        example: "true"
                      status:
                        type: "string"
                        example: "PRODUCT_INVENTORY_IN_STOCK"
                      statusIsEstimated:
                        type: "string"
                        example: "false"
                      expectedInStockDate:
                        type: "string"
                      customStockMessage:
                        type: "string"
                  variations:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/variations"
                      product:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            uri:
                              type: "string"
                              example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500"
                            categories:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/categories"
                            familyAttributes:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/family-attributes"
                            id:
                              type: "integer"
                              example: 64578500
                            name:
                              type: "string"
                              example: "Class I"
                            displayName:
                              type: "string"
                              example: "Class I"
                            shortDescription:
                              type: "string"
                              example: "Class I is the perfect GPS waypoint and route\
                                \ manager for the beginning or occasional GPS user."
                            longDescription:
                              type: "string"
                              example: "Class I is the fast and easy way to create,\
                                \ edit, and transfer waypoints and routes between\
                                \ your computer and your Garmin, Magellan, or Lowrance\
                                \ GPS. Using Class I, you can manage all of your waypoints\
                                \ and routes, and display them in lists sorted by\
                                \ name, elevation, or distance. Class I connects your\
                                \ GPS to the best mapping and information sites on\
                                \ the Internet, giving you one-click access to street\
                                \ and topo maps, aerial photos, weather forecasts,\
                                \ and nearby attractions."
                            productType:
                              type: "string"
                              example: "DOWNLOAD"
                            sku:
                              type: "string"
                              example: "Class I"
                            externalReferenceId:
                              type: "string"
                              example: "Test External Reference Number"
                            companyId:
                              type: "string"
                              example: "demosft1"
                            displayableProduct:
                              type: "string"
                              example: "true"
                            purchasable:
                              type: "string"
                              example: "true"
                            manufacturerName:
                              type: "string"
                              example: "Test Manufacturer Name"
                            manufacturerPartNumber:
                              type: "string"
                              example: "Test Manufacturer Part Number"
                            minimumQuantity:
                              type: "string"
                            maximumQuantity:
                              type: "string"
                            thumbnailImage:
                              type: "string"
                              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb.jpg"
                            productImage:
                              type: "string"
                              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox.jpg"
                            keywords:
                              type: "string"
                              example: "testKeyword"
                            baseProduct:
                              type: "string"
                              example: "false"
                            customAttributes:
                              $ref: "#/components/schemas/DefaultCustomAttributes"
                            pricing:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/pricing"
                                listPrice:
                                  $ref: "#/components/schemas/DefaultCurrency"
                                listPriceWithQuantity:
                                  $ref: "#/components/schemas/DefaultCurrency"
                                salePriceWithQuantity:
                                  $ref: "#/components/schemas/DefaultCurrency"
                                formattedListPrice:
                                  type: "string"
                                  example: "$19.99"
                                formattedListPriceWithQuantity:
                                  type: "string"
                                  example: "$19.99"
                                formattedSalePriceWithQuantity:
                                  type: "string"
                                  example: "$17.99"
                                totalDiscountWithQuantity:
                                  $ref: "#/components/schemas/DefaultCurrency"
                                formattedTotalDiscountWithQuantity:
                                  type: "string"
                                  example: "$2.00"
                                listPriceIncludesTax:
                                  type: "string"
                                  example: "false"
                                discountDescription:
                                  type: "string"
                                  example: "10%"
                                tax:
                                  type: "object"
                                  properties:
                                    vatPercentage:
                                      type: "integer"
                                feePricing:
                                  type: "object"
                                  properties:
                                    salePriceWithFeesAndQuantity:
                                      $ref: "#/components/schemas/DefaultCurrency"
                                    formattedSalePriceWithFeesAndQuantity:
                                      type: "string"
                                      example: "[\"$17.99\"]"
                                msrpPrice:
                                  $ref: "#/components/schemas/DefaultCurrency"
                                formattedMsrpPrice:
                                  type: "string"
                            inventoryStatus:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/inventory-status"
                                availableQuantity:
                                  type: "integer"
                                  example: 2147483647
                                availableQuantityIsEstimated:
                                  type: "string"
                                  example: "false"
                                productIsInStock:
                                  type: "string"
                                  example: "true"
                                productIsAllowsBackorders:
                                  type: "string"
                                  example: "true"
                                productIsTracked:
                                  type: "string"
                                  example: "false"
                                requestedQuantityAvailable:
                                  type: "string"
                                  example: "true"
                                status:
                                  type: "string"
                                  example: "PRODUCT_INVENTORY_IN_STOCK"
                                statusIsEstimated:
                                  type: "string"
                                  example: "false"
                                expectedInStockDate:
                                  type: "string"
                                customStockMessage:
                                  type: "string"
                            addProductToCart:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500"
                                cartUri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500"
                            purchaseProduct:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/purchase"
                            addProductToWishList:
                              type: "object"
                              properties:
                                uri:
                                  type: "string"
                                  example: "https://api.digitalriver.com/v1/shoppers/me/wish-lists/default?productId=64578500"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
            facets:
              type: "object"
              properties:
                facetField:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        example: "categoryName"
                      displayName:
                        type: "string"
                        example: "Category Name"
                      constraints:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            name:
                              type: "string"
                              example: "Fitness"
                            count:
                              type: "integer"
                              example: 1
                            query:
                              type: "string"
                              example: "Fitness"
    DefaultShopperProducts:
      type: "object"
      properties:
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products"
            nextPage:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products?pageNumber=11&pageSize=1"
            previousPage:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products?pageNumber=9&pageSize=1"
            product:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/73248400"
                  displayName:
                    type: "string"
                    example: "Class VI"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft3/images/product/thumbnail/classVIThumb.jpg"
                  pricing:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/73248400/pricing"
                      formattedListPrice:
                        type: "string"
                        example: "$79.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$79.99"
                  addProductToCart:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=73248400"
                      cartUri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=73248400"
            totalResults:
              type: "integer"
              example: 11
            totalResultPages:
              type: "integer"
              example: 11
    ExpandedShopperProducts:
      type: "object"
      properties:
        products:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products"
            nextPage:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products?pageNumber=11&pageSize=1"
            previousPage:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products?pageNumber=9&pageSize=1"
            product:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
                  categories:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/categories"
                  familyAttributes:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/family-attributes"
                  id:
                    type: "integer"
                    example: 64358200
                  name:
                    type: "string"
                    example: "Class I"
                  displayName:
                    type: "string"
                    example: "Class I"
                  shortDescription:
                    type: "string"
                    example: "Class I is the perfect GPS waypoint and route manager\
                      \ for the beginning or occasional GPS user."
                  longDescription:
                    type: "string"
                    example: "Class I is the fast and easy way to create, edit, and\
                      \ transfer waypoints and routes between your computer and your\
                      \ Garmin, Magellan, or Lowrance GPS. Using Class I, you can\
                      \ manage all of your waypoints and routes, and display them\
                      \ in lists sorted by name, elevation, or distance. Class I connects\
                      \ your GPS to the best mapping and information sites on the\
                      \ Internet, giving you one-click access to street and topo maps,\
                      \ aerial photos, weather forecasts, and nearby attractions."
                  productType:
                    type: "string"
                    example: "DOWNLOAD"
                  sku:
                    type: "string"
                    example: "Class I"
                  externalReferenceId:
                    type: "string"
                    example: "987654"
                  companyId:
                    type: "string"
                    example: "demosft1"
                  displayableProduct:
                    type: "string"
                    example: "true"
                  purchasable:
                    type: "string"
                    example: "true"
                  manufacturerName:
                    type: "string"
                  manufacturerPartNumber:
                    type: "string"
                    example: "987654"
                  minimumQuantity:
                    type: "string"
                  maximumQuantity:
                    type: "string"
                  thumbnailImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb_v2.jpg"
                  productImage:
                    type: "string"
                    example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox_v2.jpg"
                  keywords:
                    type: "string"
                  baseProduct:
                    type: "string"
                    example: "true"
                  customAttributes:
                    $ref: "#/components/schemas/DefaultCustomAttributes"
                  pricing:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/pricing"
                      listPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      listPriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      salePriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedListPrice:
                        type: "string"
                        example: "$19.99"
                      formattedListPriceWithQuantity:
                        type: "string"
                        example: "$19.99"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$18.99"
                      totalDiscountWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedTotalDiscountWithQuantity:
                        type: "string"
                        example: "$1.00"
                      listPriceIncludesTax:
                        type: "string"
                        example: "false"
                      formattedCommitmentPrice:
                        type: "string"
                        description: "This is only available for annual paid monthly\
                          \ product"
                        example: "$240.00"
                      commitmentPrice:
                        type: "object"
                        properties:
                          currency:
                            type: "string"
                            example: "USD"
                          value:
                            type: "string"
                            example: "240.00"
                        description: "This is only available for annual paid monthly\
                          \ product"
                      discountDescription:
                        type: "string"
                        example: "$1.00"
                      tax:
                        type: "object"
                        properties:
                          vatPercentage:
                            type: "integer"
                            example: 0
                      feePricing:
                        type: "object"
                        properties:
                          salePriceWithFeesAndQuantity:
                            $ref: "#/components/schemas/DefaultCurrency"
                          formattedSalePriceWithFeesAndQuantity:
                            type: "string"
                            example: "$18.99"
                      msrpPrice:
                        type: "string"
                      formattedMsrpPrice:
                        type: "string"
                  inventoryStatus:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/inventory-status"
                      availableQuantity:
                        type: "integer"
                        example: 2147483647
                      availableQuantityIsEstimated:
                        type: "string"
                        example: "false"
                      productIsInStock:
                        type: "string"
                        example: "true"
                      productIsAllowsBackorders:
                        type: "string"
                        example: "true"
                      productIsTracked:
                        type: "string"
                        example: "false"
                      requestedQuantityAvailable:
                        type: "string"
                        example: "true"
                      status:
                        type: "string"
                        example: "PRODUCT_INVENTORY_IN_STOCK"
                      statusIsEstimated:
                        type: "string"
                        example: "false"
                      expectedInStockDate:
                        type: "string"
                      customStockMessage:
                        type: "string"
                  addProductToCart:
                    type: "object"
                    properties:
                      uri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500"
                      cartUri:
                        type: "string"
                        example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500"
            totalResults:
              type: "integer"
              example: 1
            totalResultPages:
              type: "integer"
              example: 1
            facets:
              type: "object"
              properties:
                facetField:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        example: "categoryName"
                      displayName:
                        type: "string"
                        example: "Category Name"
                      constraints:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            name:
                              type: "string"
                              example: "Fitness"
                            count:
                              type: "integer"
                              example: 1
                            query:
                              type: "string"
                              example: "Fitness"
    DefaultTransferProduct:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/products/18977555"
        displayName:
          type: "string"
          example: "Transfer Product"
        thumbnailImage:
          type: "string"
          example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/newImage.jpg"
        addProductToCart:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=18977555"
            cartUri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=18977555"
    ExpandedTransferProduct:
      type: "object"
      properties:
        uri:
          type: "string"
          example: "https://api.digitalriver.com/v1/shoppers/me/products/18977555"
        categories:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/18977555/categories"
        familyAttributes:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/18977555/family-attributes"
        id:
          type: "integer"
          example: 18977555
        name:
          type: "string"
          example: "Transfer Product"
        displayName:
          type: "string"
          example: "Transfer Product"
        shortDescription:
          type: "string"
          example: "Class I is the perfect GPS waypoint and route manager for the\
            \ beginning or occasional GPS user."
        longDescription:
          type: "string"
          example: "Class I is the fast and easy way to create, edit, and transfer\
            \ waypoints and routes between your computer and your Garmin, Magellan,\
            \ or Lowrance GPS. Using Class I, you can manage all of your waypoints\
            \ and routes, and display them in lists sorted by name, elevation, or\
            \ distance. Class I connects your GPS to the best mapping and information\
            \ sites on the Internet, giving you one-click access to street and topo\
            \ maps, aerial photos, weather forecasts, and nearby attractions."
        productType:
          type: "string"
          example: "DOWNLOAD"
        sku:
          type: "string"
          example: "TransferProduct"
        externalReferenceId:
          type: "string"
          example: "Test External Reference Number"
        companyId:
          type: "string"
          example: "demosft1"
        displayableProduct:
          type: "string"
          example: "true"
        purchasable:
          type: "string"
          example: "true"
        manufacturerName:
          type: "string"
          example: "Test Manufacturer Name"
        manufacturerPartNumber:
          type: "string"
          example: "Test Manufacturer Part Number"
        minimumQuantity:
          type: "string"
        maximumQuantity:
          type: "string"
        thumbnailImage:
          type: "string"
          example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/newImage.jpg"
        productImage:
          type: "string"
          example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/newImage.jpg"
        keywords:
          type: "string"
          example: "testKeyword"
        addProductToCart:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=18977555"
            cartUri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=18977555"
    DefaultProductById:
      type: "object"
      properties:
        product:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500"
            parentProduct:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
            categories:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/categories"
            familyAttributes:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/family-attributes"
            id:
              type: "integer"
              example: 64578500
            name:
              type: "string"
              example: "Class I"
            displayName:
              type: "string"
              example: "Class I"
            shortDescription:
              type: "string"
              example: "Class I is the perfect GPS waypoint and route manager for\
                \ the beginning or occasional GPS user."
            longDescription:
              type: "string"
              example: "Class I is the fast and easy way to create, edit, and transfer\
                \ waypoints and routes between your computer and your Garmin, Magellan,\
                \ or Lowrance GPS. Using Class I, you can manage all of your waypoints\
                \ and routes, and display them in lists sorted by name, elevation,\
                \ or distance. Class I connects your GPS to the best mapping and information\
                \ sites on the Internet, giving you one-click access to street and\
                \ topo maps, aerial photos, weather forecasts, and nearby attractions."
            productType:
              type: "string"
              example: "DOWNLOAD"
            sku:
              type: "string"
              example: "Class I"
            externalReferenceId:
              type: "string"
              example: "Test External Reference Number"
            companyId:
              type: "string"
              example: "demosft1"
            displayableProduct:
              type: "string"
              example: "true"
            purchasable:
              type: "string"
              example: "true"
            manufacturerName:
              type: "string"
              example: "Test Manufacturer Name"
            manufacturerPartNumber:
              type: "string"
              example: "Test Manufacturer Part Number"
            minimumQuantity:
              type: "string"
            maximumQuantity:
              type: "string"
            thumbnailImage:
              type: "string"
              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb.jpg"
            productImage:
              type: "string"
              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox.jpg"
            keywords:
              type: "string"
              example: "testKeyword"
            baseProduct:
              type: "string"
              example: "false"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
            pricing:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64578500/pricing"
                listPrice:
                  $ref: "#/components/schemas/DefaultCurrency"
                salePriceWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedListPrice:
                  type: "string"
                  example: "$19.99"
                formattedSalePriceWithQuantity:
                  type: "string"
                  example: "$17.99"
                msrpPrice:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedMsrpPrice:
                  type: "string"
                  example: "$2.00"
                listPriceIncludesTax:
                  type: "string"
                  example: "false"
                formattedCommitmentPrice:
                  type: "string"
                  description: "This is only available for annual paid monthly product"
                  example: "$240.00"
                commitmentPrice:
                  type: "object"
                  properties:
                    currency:
                      type: "string"
                      example: "USD"
                    value:
                      type: "string"
                      example: "240.00"
                  description: "This is only available for annual paid monthly product"
            addProductToCart:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500"
                cartUri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500"
            transferProduct:
              $ref: "#/components/schemas/DefaultTransferProduct"
    ExpandedProductById:
      type: "object"
      properties:
        product:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
            parentProduct:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200"
            categories:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/categories"
            familyAttributes:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/family-attributes"
            id:
              type: "integer"
              example: 64358200
            name:
              type: "string"
              example: "Class I"
            displayName:
              type: "string"
              example: "Class I"
            shortDescription:
              type: "string"
              example: "Class I is the perfect GPS waypoint and route manager for\
                \ the beginning or occasional GPS user."
            longDescription:
              type: "string"
              example: "Class I is the fast and easy way to create, edit, and transfer\
                \ waypoints and routes between your computer and your Garmin, Magellan,\
                \ or Lowrance GPS. Using Class I, you can manage all of your waypoints\
                \ and routes, and display them in lists sorted by name, elevation,\
                \ or distance. Class I connects your GPS to the best mapping and information\
                \ sites on the Internet, giving you one-click access to street and\
                \ topo maps, aerial photos, weather forecasts, and nearby attractions."
            productType:
              type: "string"
              example: "DOWNLOAD"
            sku:
              type: "string"
              example: "Class I"
            externalReferenceId:
              type: "string"
              example: "987654"
            companyId:
              type: "string"
              example: "demosft1"
            displayableProduct:
              type: "string"
              example: "true"
            purchasable:
              type: "string"
              example: "true"
            manufacturerName:
              type: "string"
            manufacturerPartNumber:
              type: "string"
              example: "987654"
            minimumQuantity:
              type: "string"
            maximumQuantity:
              type: "string"
            thumbnailImage:
              type: "string"
              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/thumbnail/classIThumb_v2.jpg"
            productImage:
              type: "string"
              example: "https://drh-sys-ora.img.digitalriver.com/Storefront/Company/demosft1/images/product/detail/classIBox_v2.jpg"
            keywords:
              type: "string"
            baseProduct:
              type: "string"
              example: "true"
            customAttributes:
              $ref: "#/components/schemas/DefaultCustomAttributes"
            pricing:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/pricing"
                listPrice:
                  $ref: "#/components/schemas/DefaultCurrency"
                listPriceWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                salePriceWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedListPrice:
                  type: "string"
                  example: "$19.99"
                formattedListPriceWithQuantity:
                  type: "string"
                  example: "$19.99"
                formattedSalePriceWithQuantity:
                  type: "string"
                  example: "$18.99"
                totalDiscountWithQuantity:
                  $ref: "#/components/schemas/DefaultCurrency"
                formattedTotalDiscountWithQuantity:
                  type: "string"
                  example: "$1.00"
                listPriceIncludesTax:
                  type: "string"
                  example: "false"
                formattedCommitmentPrice:
                  type: "string"
                  description: "This is only available for annual paid monthly product"
                  example: "$240.00"
                commitmentPrice:
                  type: "object"
                  properties:
                    currency:
                      type: "string"
                      example: "USD"
                    value:
                      type: "string"
                      example: "240.00"
                  description: "This is only available for annual paid monthly product"
                discountDescription:
                  type: "string"
                  example: "$1.00"
                tax:
                  type: "object"
                  properties:
                    vatPercentage:
                      type: "integer"
                      example: 0
                feePricing:
                  type: "object"
                  properties:
                    salePriceWithFeesAndQuantity:
                      $ref: "#/components/schemas/DefaultCurrency"
                    formattedSalePriceWithFeesAndQuantity:
                      type: "string"
                      example: "$18.99"
                msrpPrice:
                  type: "string"
                formattedMsrpPrice:
                  type: "string"
            inventoryStatus:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/products/64358200/inventory-status"
                availableQuantity:
                  type: "integer"
                  example: 2147483647
                availableQuantityIsEstimated:
                  type: "string"
                  example: "false"
                productIsInStock:
                  type: "string"
                  example: "true"
                productIsAllowsBackorders:
                  type: "string"
                  example: "true"
                productIsTracked:
                  type: "string"
                  example: "false"
                requestedQuantityAvailable:
                  type: "string"
                  example: "true"
                status:
                  type: "string"
                  example: "PRODUCT_INVENTORY_IN_STOCK"
                statusIsEstimated:
                  type: "string"
                  example: "false"
                expectedInStockDate:
                  type: "string"
                customStockMessage:
                  type: "string"
            addProductToCart:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active/line-items?productId=64578500"
                cartUri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/shoppers/me/carts/active?productId=64578500"
            transferProduct:
              $ref: "#/components/schemas/ExpandedTransferProduct"
    DefaultVolumePricing:
      type: "object"
      properties:
        volumePricing:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/shoppers/me/products/73248500/pricing/volume-pricing"
            tier:
              type: "array"
              items:
                type: "object"
                properties:
                  from:
                    type: "integer"
                    example: 1
                  to:
                    type: "integer"
                    example: 1
                  pricing:
                    type: "object"
                    properties:
                      listPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      listPriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      salePriceWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedListPrice:
                        type: "string"
                        example: "$8.00"
                      formattedListPriceWithQuantity:
                        type: "string"
                        example: "$8.00"
                      formattedSalePriceWithQuantity:
                        type: "string"
                        example: "$8.00"
                      totalDiscountWithQuantity:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedTotalDiscountWithQuantity:
                        type: "string"
                        example: "$0.00"
                      discountDescription:
                        type: "string"
                      feePricing:
                        type: "object"
                        properties:
                          salePriceWithFeesAndQuantity:
                            $ref: "#/components/schemas/DefaultCurrency"
                          formattedSalePriceWithFeesAndQuantity:
                            type: "string"
                            example: "$8.00"
                      listPriceIncludesTax:
                        type: "string"
                        example: "false"
                      msrpPrice:
                        $ref: "#/components/schemas/DefaultCurrency"
                      formattedMsrpPrice:
                        type: "string"
            formattedSalesPriceRange:
              type: "string"
              example: "$5.00-$8.00"
    ClientCredentialToken:
      type: "object"
      properties:
        access_token:
          type: "string"
          example: "your_access_token"
        token_type:
          type: "string"
          example: "bearer"
        expires_in:
          type: "string"
          example: "3599"
    OauthToken:
      type: "object"
      properties:
        access_token:
          type: "string"
          example: "your_access_token"
        token_type:
          type: "string"
          example: "bearer"
        expires_in:
          type: "string"
          example: "3599"
        refresh_token:
          type: "string"
          example: "your_refresh_token"
    AccessToken:
      type: "object"
      properties:
        sessionId:
          type: "string"
          example: "your_session_ID"
        userId:
          type: "string"
          example: "your_user_ID"
        externalReferenceId:
          type: "string"
          example: "external_reference_ID"
        authenticated:
          type: "string"
          example: "true"
        locale:
          type: "string"
          example: "en_US"
        currency:
          type: "string"
          example: "USD"
        cartId:
          type: "string"
          example: "your_cart_ID"
        clientIpAddress:
          type: "string"
        domain:
          type: "string"
          example: "drh-api-ot04.digitalriverws.net"
        expiresIn:
          type: "integer"
          example: 86397
        themeId:
          type: "string"
        sessionTag:
          type: "string"
          example: "session_tag"
    InvalidLimitedToken:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "dr_limited_token_invalid"
                  description:
                    type: "string"
                    enum:
                    - "The Digital River limited token is invalid, expired, or revoked."
    InvalidTokenRequest:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid_request"
                  description:
                    type: "string"
                    enum:
                    - "The required parameter is missing or empty."
    BadRequest:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-request"
                  description:
                    type: "string"
                    enum:
                    - "Invalid Request Content"
    InvalidToken:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-token"
                  description:
                    type: "string"
                    enum:
                    - "Invalid Token for Shopper Session"
    InvalidCategoriesFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-request"
                  description:
                    type: "string"
                    enum:
                    - "Invalid page size. Must be positive, non-zero, and less than\
                      \ 100000."
    InvalidKeywordFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-keyword-expression"
                  description:
                    type: "string"
                    enum:
                    - "Invalid keyword expression [expression entered]"
    InvalidRequest:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-request"
        description:
          type: "string"
          enum:
          - "The system cannot parse the request because the request is not valid."
    InvalidPaymentRequest:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-request"
        description:
          type: "string"
          enum:
          - "Invalid payment method type for this request."
    ApplyPaymentMethodEmptyCart:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "apply-payment-failure"
        description:
          type: "string"
          enum:
          - "Cannot apply a payment method to an empty cart."
    ApplyPaymentMethodFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "apply-payment-failure"
        description:
          type: "string"
          enum:
          - "Failed to apply the requested payment method to the cart."
    invalid-credit-card-number:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-credit-card-number"
        description:
          type: "string"
          enum:
          - "The credit card number specified for the cart is invalid."
    DeclinedCreditCard:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "credit-card-declined"
        description:
          type: "string"
          enum:
          - "The credit card payment was declined."
    InvalidPaymentMethod:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-payment-method"
        description:
          type: "string"
          enum:
          - "The cart does not support the specified payment method."
    InvalidShippingOption:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "shipping-option-failure"
        description:
          type: "string"
          enum:
          - "Shipping option cannot be applied to cart."
    CartPaymentFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "cart-payment-failure"
        description:
          type: "string"
          enum:
          - "Cannot submit the order due to a payment processing failure."
    PayPalFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "paypal-failure"
        description:
          type: "string"
          enum:
          - "Cannot process the cart because PayPal returned a failure or declined\
            \ status."
    PayPalLookupFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "paypal-lookup-failure"
        description:
          type: "string"
          enum:
          - "Cannot process the cart could due to a PayPal lookup processing failure."
    InvalidBillingCountryFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-bill-to-country"
        description:
          type: "string"
          enum:
          - "Billing Address country for the request is invalid."
    RestrictedBillingCountryFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "restricted-bill-to-country"
        description:
          type: "string"
          enum:
          - "Billing Address country for the request is restricted."
    InvalidShippingCountryFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-ship-to-country"
        description:
          type: "string"
          enum:
          - "Shipping Address country for the request is invalid."
    RestrictedShippingCountryFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "restricted-ship-to-country"
        description:
          type: "string"
          enum:
          - "Shipping Address country for the request is restricted."
    RestrictedIPFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "ip-address-restriction-error"
        description:
          type: "string"
          enum:
          - "Country for IP address for the request is restricted."
    ExistingCouponCodeFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "coupon-code-already-used"
        description:
          type: "string"
          enum:
          - "The shopper previously entered this coupon code. The shopper cannot use\
            \ this coupon code again."
    InvalidCouponCodeFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-coupon"
        description:
          type: "string"
          enum:
          - "The coupon code is invalid. The shopper cannot use this coupon code."
    InventoryUnavailableFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "inventory-unavailable"
        description:
          type: "string"
          enum:
          - "Inventory unavailable for the product specified in the request. The subcodes\
            \ are as follows: inventory-unavailable-to-add-tight-bundle-child-line-item\
            \ — The product is not purchasable; inventory-unavailable-to-add-semi-tight-bundle-child-line-item\
            \ — The inventory is not available to add to the cart."
    LineItemCreationFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "line-item-creation-failure"
        description:
          type: "string"
          enum:
          - "Cannot create the Line Item for the specified product."
    LineItemUpdateFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "line-item-update-failure"
        description:
          type: "string"
          enum:
          - "Cannot update the Line Item for the request."
    ExistingOfferFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "offer-already-used"
        description:
          type: "string"
          enum:
          - "The offer has already been used."
    InvalidOfferFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "offer-not-active"
        description:
          type: "string"
          enum:
          - "The offer for the request is not active."
    OfferNotApplicableFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "offer-not-applicable"
        description:
          type: "string"
          enum:
          - "Cannot apply the offer ID for request to the cart."
    OfferNotDeployedFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "offer-not-deployed"
        description:
          type: "string"
          enum:
          - "Offer is not deployed. Cannot use the coupon code."
    OfferUnavailableFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "offer-unavailable"
        description:
          type: "string"
          enum:
          - "The offer ID for the request is not available for the cart."
    OfferLimitFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "offer-usage-limit-exceeded"
        description:
          type: "string"
          enum:
          - "Offer usage limit exceeded. Cannot use the coupon code."
    PrivateStoreMaximumPurchaseFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "over-private-store-shopper-restriction"
        description:
          type: "string"
          enum:
          - "Maximum purchasable quantity[x]; Remaining purchasable quantity[y]; Cannot\
            \ add the product to the cart."
    PrivateStoreMinimumRemainingPurchaseFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "private-store-remaining-quantity-under-line-item-restriction"
        description:
          type: "string"
          enum:
          - "Remaining purchasable quantity[x]; Minimum purchasable quantity[y]; Cannot\
            \ add the product to the cart."
    ShopperUsageLimitFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "shopper-usage-limit-exceeded"
        description:
          type: "string"
          enum:
          - "The shopper exceeded the offer usage limit. The shopper cannot use the\
            \ coupon code."
    PrivateStoreMinimumPurchaseFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "under-private-store-line-item-restriction"
        description:
          type: "string"
          enum:
          - "Minimum purchasable quantity[x]; Cannot add the product to the cart."
    InvalidCurrencyCodeFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-currency-code"
        description:
          type: "string"
          enum:
          - "Requested currency is not supported."
    InvalidLocaleFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-locale"
        description:
          type: "string"
          enum:
          - "Requested locale is not valid."
    PaymentAuthFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "auth-error"
        description:
          type: "string"
          enum:
          - "Payment failure."
    CardDeclinedFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "credit-card-declined"
        description:
          type: "string"
          enum:
          - "The credit card payment was declined."
    CreditFloorFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "credit-floor-exceeded"
        description:
          type: "string"
          enum:
          - "Total amount for the order does not exceed the credit card minimum."
    InventoryStatusFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "inventory-status-failure"
        description:
          type: "string"
          enum:
          - "Inventory unavailable for one or more of the products in the cart."
    PaymentPostAuthFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "payment-post-auth-failure"
        description:
          type: "string"
          enum:
          - "Cannot submit the order due to a payment processing failure."
    SubmitFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "submit-cart-failed"
        description:
          type: "string"
          enum:
          - "Cannot complete and submit the cart."
    FraudFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "cart-fraud-failure"
        description:
          type: "string"
          enum:
          - "Cannot submit the order due to a fraud validation failure."
    PaymentFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "cart-payment-failure"
        description:
          type: "string"
          enum:
          - "Cannot submit the order  due to a payment processing failure."
    InvalidExpirationFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-credit-card-expiration-date"
        description:
          type: "string"
          enum:
          - "The credit card expiration date specified for the cart is invalid."
    InvalidCardNumberFailure:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-credit-card-number"
        description:
          type: "string"
          enum:
          - "The credit card number specified for the cart is invalid."
    InvalidRequestFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/InvalidRequest"
    ApplyPaymentMethodInvalidRequest:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/InvalidPaymentRequest"
    ApplyPaymentFailure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/InvalidPaymentMethod"
    BillingCountryFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/RestrictedBillingCountryFailure"
    ShippingCountryFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/RestrictedShippingCountryFailure"
    RestrictedIPFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/RestrictedIPFailure"
    PostCartLineItemsFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/PrivateStoreMinimumPurchaseFailure"
    InvalidShopperPostFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/InvalidLocaleFailure"
    DefaultReturns:
      type: "object"
      properties:
        returns:
          type: "array"
          items:
            $ref: "#/components/schemas/DefaultReturn"
    DefaultReturn:
      type: "object"
      properties:
        return:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "string"
                example: "6654727889"
              reason:
                type: "string"
                example: "DUPLICATE_ORDER"
              comments:
                type: "string"
                example: "Shopper initiated self service return-"
              type:
                type: "string"
                example: "LineItemLevelReturnProduct"
              status:
                type: "string"
                example: "RefundedWithoutReturn"
              generationDate:
                type: "string"
                example: "2020-01-30T17:37:09.000Z"
              generatedBy:
                type: "string"
                example: "56066c6b-139b-47ff-9b07-1c799c10ea75"
              origin:
                type: "string"
                example: "SHOPPER"
              policy:
                type: "string"
                example: "LOD"
              dateRefunded:
                type: "string"
                example: "In Process"
              refundTotal:
                type: "object"
                properties:
                  currency:
                    type: "string"
                    example: "USD"
                  value:
                    type: "number"
                    example: 0
              formattedRefundTotal:
                type: "string"
                example: "0.00USD"
              outstandingTotal:
                type: "object"
                properties:
                  currency:
                    type: "string"
                    example: "USD"
                  value:
                    type: "number"
                    example: 107.53
              formattedOutstandingTotal:
                type: "string"
                example: "107.53USD"
              requestedTotal:
                type: "object"
                properties:
                  currency:
                    type: "string"
                    example: "USD"
                  value:
                    type: "number"
                    example: 107.53
              formattedRequestedTotal:
                type: "string"
                example: "107.53USD"
              returnLineItems:
                type: "object"
                properties:
                  returnLineItem:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        dueDate:
                          type: "string"
                          example: "2020-02-07T05:59:59.000Z"
                        expectedQty:
                          type: "integer"
                          example: 1
                        returnedQty:
                          type: "integer"
                          example: 1
                        type:
                          type: "integer"
                          example: 100409
                        notes:
                          type: "string"
                          example: "LOD_REFUNDED-2020-02-07T05:59:59.000Z"
                        date:
                          type: "string"
                          example: "2020-01-30T17:37:09.000Z"
                        status:
                          type: "string"
                          example: "RefundedWithoutReturn"
                        returnLITotal:
                          type: "object"
                          properties:
                            currency:
                              type: "string"
                              example: "USD"
                            value:
                              type: "number"
                              example: 107.53
                        formattedReturnLITotal:
                          type: "string"
                          example: "107.53USD"
                        lineItem:
                          type: "object"
                          properties:
                            uri:
                              type: "string"
                              example: "https://api.digitalriver.com/v1/shoppers/me/orders/793374880082/line-items/793451150082"
    ReturnRequest:
      required:
      - "return"
      type: "object"
      properties:
        return:
          title: "The Return Schema"
          required:
          - "acceptELOD"
          - "reason"
          - "returnLineItems"
          type: "object"
          properties:
            reason:
              type: "string"
              example: "DUPLICATE_ORDER"
            comments:
              type: "string"
              example: "Duplicate Order"
            acceptELOD:
              type: "string"
              example: "true"
            returnLineItems:
              required:
              - "returnLineItem"
              type: "object"
              properties:
                returnLineItem:
                  type: "array"
                  items:
                    required:
                    - "lineItem"
                    - "lineItemQuantityIDs"
                    type: "object"
                    properties:
                      lineItemQuantityIDs:
                        type: "array"
                        items:
                          type: "integer"
                          example: 1
                          default: 0
                      lineItem:
                        required:
                        - "id"
                        - "quantity"
                        type: "object"
                        properties:
                          id:
                            type: "string"
                            example: "123"
                          quantity:
                            type: "integer"
                            example: 1
    PostReturnsFailures:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  relation:
                    type: "string"
                    example: "https://developers.digitalriver.com/v1/shoppers/OrdersResource"
                  code:
                    type: "string"
                    example: "invalid-request"
                  description:
                    type: "string"
                    example: "Return Reason cannot be empty."
    site:
      type: "object"
      properties:
        site:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/site"
            id:
              type: "string"
              example: "shopx1"
            name:
              type: "string"
              example: "shopx1"
            companyId:
              type: "string"
              example: "shopx1"
            defaultLocale:
              type: "string"
              example: "en_US"
            searchService:
              type: "string"
              example: "inMemory"
            settings:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/site/settings"
            localeOptions:
              type: "object"
              properties:
                localeOption:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      locale:
                        type: "string"
                        enum:
                        - "ko_KR"
                      primaryCurrency:
                        type: "string"
                        enum:
                        - "KRW"
                      supportedCurrencies:
                        type: "object"
                        properties:
                          currency:
                            type: "array"
                            items:
                              type: "string"
                              enum:
                              - "KRW"
    siteAttributes:
      type: "object"
      properties:
        attribute:
          type: "object"
          properties:
            key:
              type: "string"
              example: "TAX"
            locale:
              type: "string"
              example: "en_US"
            value:
              type: "string"
              example: "Tax"
    shopperSite:
      type: "object"
      properties:
        site:
          type: "object"
          properties:
            uri:
              type: "string"
              example: "https://api.digitalriver.com/v1/site"
            id:
              type: "string"
              example: "shopx1"
            name:
              type: "string"
              example: "shopx1"
            companyId:
              type: "string"
              example: "shopx1"
            defaultLocale:
              type: "string"
              example: "en_US"
            searchService:
              type: "string"
              example: "inMemory"
            settings:
              type: "object"
              properties:
                uri:
                  type: "string"
                  example: "https://api.digitalriver.com/v1/site/settings"
            localeOptions:
              type: "object"
              properties:
                localeOption:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      locale:
                        type: "string"
                        enum:
                        - "ko_KR"
                      primaryCurrency:
                        type: "string"
                        enum:
                        - "KRW"
                      supportedCurrencies:
                        type: "object"
                        properties:
                          currency:
                            type: "array"
                            items:
                              type: "string"
                              enum:
                              - "KRW"
    siteSettings:
      type: "object"
      properties:
        settings:
          type: "object"
          properties:
            setting:
              type: "array"
              items:
                type: "object"
                properties:
                  uri:
                    type: "string"
                    example: "https://api.digitalriver.com/v1/site/settings/PEOPLE_BOUGHT_THIS_DISPLAY_VARIATIONS"
                  key:
                    type: "string"
                    example: "PEOPLE_BOUGHT_THIS_DISPLAY_VARIATIONS"
                  value:
                    type: "string"
                    example: "false"
    resource-not-found:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "resource-not-found"
                  description:
                    type: "string"
                    description: "See the [resource-not-found](#resource-not-found)\
                      \ for more info"
                    enum:
                    - "Site not found"
    invalid_token:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid_token"
                  description:
                    type: "string"
                    description: "See the [invalid_token](#invalid_token) for more\
                      \ info"
                    enum:
                    - "Invalid token for specified shopper"
    invalid-ip-address:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-ip-address"
                  description:
                    type: "string"
                    description: "See the [invalid-ip-address](#invalid-ip-address)\
                      \ for more info"
                    enum:
                    - "Requested ip address is not valid"
    cart-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "cart-failure"
                  description:
                    type: "string"
                    description: "See the [cart-failure](#cart-failure) for more info"
                    enum:
                    - "Unable to retrieve the cart details due to data inconsistency."
    invalid-request:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-request"
                  description:
                    type: "string"
                    description: "See the [invalid-request](#invalid-request) for\
                      \ more info"
                    enum:
                    - "The request was invalid and could not be parsed by the system."
    ip-address-restriction-error:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "ip-address-restriction-error"
                  description:
                    type: "string"
                    description: "See the [ip-address-restriction-error](#ip-address-restriction-error)\
                      \ for more info"
                    enum:
                    - "Country for ip address is restricted for request"
    concurrent-cart-modification-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "concurrent-cart-modification-failure"
                  description:
                    type: "string"
                    description: "See the [concurrent-cart-modification-failure](#concurrent-cart-modification-failure)\
                      \ for more info"
                    enum:
                    - "Request attempted to modify the cart while the cart was being\
                      \ updated by another request."
    no-offer-identifier:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "no-offer-identifier"
                  description:
                    type: "string"
                    description: "See the [no-offer-identifier](#no-offer-identifier)\
                      \ for more info"
                    enum:
                    - "The offer ID or offer external reference ID is missing. Provide\
                      \ the offer ID or external reference ID and try again."
    custom_description_exceeds_limitation:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "custom_description_exceeds_limitation"
                  description:
                    type: "string"
                    description: "See the [custom_description_exceeds_limitation](#custom_description_exceeds_limitation)\
                      \ for more info"
                    enum:
                    - "The custom description for the offer exceeds length limitation\
                      \ (2000). Shorten the custom description and try again."
    no-discount-or-type:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "no-discount-or-type"
                  description:
                    type: "string"
                    description: "See the [no-discount-or-type](#no-discount-or-type)\
                      \ for more info"
                    enum:
                    - "Either the discount or discount type or both are missing. Include\
                      \ both the discount and discount type in the payload and try\
                      \ again."
    invalid-discount:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-discount"
                  description:
                    type: "string"
                    description: "See the [invalid-discount](#invalid-discount) for\
                      \ more info"
                    enum:
                    - "The discount value is invalid. Provide a valid discount value\
                      \ and try again."
    invalid_discount_type:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid_discount_type"
                  description:
                    type: "string"
                    description: "See the [invalid_discount_type](#invalid_discount_type)\
                      \ for more info"
                    enum:
                    - "The offer discount type is invalid. Provide a valid offer discount\
                      \ type and try again."
    no-product-identifier:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "no-product-identifier"
                  description:
                    type: "string"
                    description: "See the [no-product-identifier](#no-product-identifier)\
                      \ for more info"
                    enum:
                    - "The product ID or product external reference ID is missing.\
                      \ Provide the product ID or external reference ID and try again."
    duplicate_product_identifier:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "no-product-identifier"
                  description:
                    type: "string"
                    description: "See the [duplicate_product_identifier](#duplicate_product_identifier)\
                      \ for more info"
                    enum:
                    - "Use either product ID or product external reference ID in the\
                      \ Applied Offers payload and try again."
    invalid-product-id-412:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "no-product-identifier"
                  description:
                    type: "string"
                    description: "See the [invalid-product-id](#invalid-product-id-412)\
                      \ for more info"
                    enum:
                    - "The product ID or product external reference ID is invalid.\
                      \ Provide the correct product ID or product external reference\
                      \ ID and try again."
    invalid-product-id-409:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "no-product-identifier"
                  description:
                    type: "string"
                    description: "See the [invalid-product-id](#invalid-product-id-409)\
                      \ for more info"
                    enum:
                    - "Could not find a Product resource with an id of {productId}"
    invalid-offer-id:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-offer-id"
                  description:
                    type: "string"
                    description: "See the [invalid-offer-id](#invalid-offer-id) for\
                      \ more info"
                    enum:
                    - "The offer ID: {offerId} for the request is invalid. Provide\
                      \ a valid offer ID or Offer external reference ID and try again."
    password-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "password-failure"
                  description:
                    type: "string"
                    description: "See the [password-failure](#password-failure) for\
                      \ more info"
                    enum:
                    - "Password must be between 8 - 32 characters."
    add-base-product-cart-error:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "add-base-product-cart-error"
                  description:
                    type: "string"
                    description: "See the [add-base-product-cart-error](#add-base-product-cart-error)\
                      \ for more info"
                    enum:
                    - "Base products cannot be added to cart."
    inventory-unavailable-error:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "inventory-unavailable-error"
                  subcode:
                    type: "string"
                    description: "possible subcodes:\n  - `inventory-unavailable-to-add-tight-bundle-child-line-item`\n\
                      \  - `inventory-unavailable-to-add-semi-tight-bundle-child-line-item`\n"
                    enum:
                    - "inventory-unavailable-to-add-tight-bundle-child-line-item"
                  description:
                    type: "string"
                    description: "See the [inventory-unavailable-error](#inventory-unavailable-error)\
                      \ for more info"
                    enum:
                    - "We're sorry but {product_name} is currently out of stock and\
                      \ cannot be added to your cart. We apologize for any inconvenience."
    line-item-creation-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "line-item-creation-failure"
                  description:
                    type: "string"
                    description: "See the [line-item-creation-failure](#line-item-creation-failure)\
                      \ for more info"
                    enum:
                    - "Line item could not be created."
    precondition-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "precondition-failure"
                  description:
                    type: "string"
                    description: "See the [precondition-failure](#precondition-failure)\
                      \ for more info"
                    enum:
                    - "Applied the wrong offer ID: {offerId} with the offer. Enter\
                      \ the correct offer ID and try again."
    submit-cart-failed:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "submit-cart-failed"
                  description:
                    type: "string"
                    description: "See the [submit-cart-failed](#submit-cart-failed)\
                      \ for more info"
                    enum:
                    - "A requisition cannot be null."
    invalid-bill-to-country:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-bill-to-country"
                  description:
                    type: "string"
                    description: "See the [invalid-bill-to-country](#invalid-bill-to-country)\
                      \ for more info"
                    enum:
                    - "Billing Address country for request is invalid"
    restricted-bill-to-country:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "restricted-bill-to-country"
                  description:
                    type: "string"
                    description: "See the [restricted-bill-to-country](#restricted-bill-to-country)\
                      \ for more info"
                    enum:
                    - "Billing Address country is restricted for request"
    invalid-ship-to-country:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-ship-to-country"
                  description:
                    type: "string"
                    description: "See the [invalid-ship-to-country](#invalid-ship-to-country)\
                      \ for more info"
                    enum:
                    - "Shipping Address country for request is invalid"
    restricted-ship-to-country:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "restricted-ship-to-country"
                  description:
                    type: "string"
                    description: "See the [restricted-ship-to-country](#restricted-ship-to-country)\
                      \ for more info"
                    enum:
                    - "Shipping Address country is restricted for request"
    cart-fraud-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "cart-fraud-failure"
                  description:
                    type: "string"
                    description: "See the [cart-fraud-failure](#cart-fraud-failure)\
                      \ for more info"
                    enum:
                    - "The order could not be submitted due to fraud validation failure"
    cart-payment-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "cart-payment-failure"
                  description:
                    type: "string"
                    description: "See the [cart-payment-failure](#cart-payment-failure)\
                      \ for more info"
                    enum:
                    - "The order could not be submitted due to payment processing\
                      \ failure"
    credit-card-expired:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "credit-card-expired"
                  description:
                    type: "string"
                    description: "See the [credit-card-expired](#credit-card-expired)\
                      \ for more info"
                    enum:
                    - "The credit card used for payment has expired"
    operation-failed:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "operation-failed"
                  description:
                    type: "string"
                    description: "See the [operation-failed](#operation-failed) for\
                      \ more info"
                    enum:
                    - "Cart could not be established for request."
    apply-shopper-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "apply-shopper-failure"
                  description:
                    type: "string"
                    description: "See the [apply-shopper-failure](#apply-shopper-failure)\
                      \ for more info"
                    enum:
                    - "Shopper account information could not be applied to cart."
    invalid-payment-method:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-payment-method"
                  description:
                    type: "string"
                    description: "See the [invalid-payment-method](#invalid-payment-method)\
                      \ for more info"
                    enum:
                    - "Payment method is not supported for this Site"
    apply-payment-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "apply-payment-failure"
                  description:
                    type: "string"
                    description: "See the [apply-payment-failure](#apply-payment-failure)\
                      \ for more info"
                    enum:
                    - "The shopper must have an approved line of credit account."
    delete-payment-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "delete-payment-failure"
                  description:
                    type: "string"
                    description: "See the [delete-payment-failure](#delete-payment-failure)\
                      \ for more info"
                    enum:
                    - "Payment methods cannot be deleted from an empty cart."
    invalid-payment-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "invalid-payment-failure"
                  description:
                    type: "string"
                    description: "See the [invalid-payment-failure](#invalid-payment-failure)\
                      \ for more info"
                    enum:
                    - "The cart could not be processed due to no available payment\
                      \ methods set"
    paypal-lookup-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "paypal-lookup-failure"
                  description:
                    type: "string"
                    description: "See the [paypal-lookup-failure](#paypal-lookup-failure)\
                      \ for more info"
                    enum:
                    - "The cart could not be processed due to paypal lookup processing\
                      \ failure"
    duplicate_offer_identifier:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "duplicate_offer_identifier"
                  description:
                    type: "string"
                    description: "See the [duplicate_offer_identifier](#duplicate_offer_identifier)\
                      \ for more info"
                    enum:
                    - "Use either offer ID or offer external reference ID in the Applied\
                      \ Offers payload and try again."
    line-item-update-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "line-item-update-failure"
                  description:
                    type: "string"
                    description: "See the [line-item-update-failure](#line-item-update-failure)\
                      \ for more info"
                    enum:
                    - "Line Item could not be updated for the request"
    over-private-store-shopper-restriction:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "over-private-store-shopper-restriction"
                  description:
                    type: "string"
                    description: "See the [over-private-store-shopper-restriction](#over-private-store-shopper-restriction)\
                      \ for more info"
                    enum:
                    - "the message of requisition.extendedAttribute 'over-private-store-shopper-restriction'"
    private-store-remaining-quantity-under-line-item-restriction:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "private-store-remaining-quantity-under-line-item-restriction"
                  description:
                    type: "string"
                    description: "See the [private-store-remaining-quantity-under-line-item-restriction](#private-store-remaining-quantity-under-line-item-restriction)\
                      \ for more info"
                    enum:
                    - "the message of requisition.extendedAttribute 'private-store-remaining-quantity-under-line-item-restriction'"
    under-private-store-line-item-restriction:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "under-private-store-line-item-restriction"
                  description:
                    type: "string"
                    description: "See the [under-private-store-line-item-restriction](#under-private-store-line-item-restriction)\
                      \ for more info"
                    enum:
                    - "Minimum purchasable quantity[x]; Cannot add the product to\
                      \ the cart."
    TaxRegistrations:
      type: "array"
      items:
        type: "object"
        properties:
          key:
            type: "string"
            description: "Tax Registration Key"
            example: "UK_VAT"
          value:
            type: "string"
            description: "Tax ID value"
            example: "GB698588737"
    resume-cart-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "resume-cart-failure"
                  description:
                    type: "string"
                    description: "See the [resume-cart-failure](#resume-cart-failure)\
                      \ for more info"
                    enum:
                    - "Requisition is not present or not in Source Pending Redirect\
                      \ state."
    internal-payment-error:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "internal-payment-error"
                  description:
                    type: "string"
                    description: "See the [internal-payment-error](#internal-payment-error)\
                      \ for more info"
                    enum:
                    - "An internal server error occurred, try again later"
    cart-charge-failure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "cart-charge-failure"
                  description:
                    type: "string"
                    description: "See the [cart-charge-failure](#cart-charge-failure)\
                      \ for more info"
                    enum:
                    - "Failed to charge source."
    payment-unexpected-error:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "payment-unexpected-error"
                  description:
                    type: "string"
                    description: "See the [payment-unexpected-error](#payment-unexpected-error)\
                      \ for more info"
                    enum:
                    - "The request failed to complete."
    InvalidPaymentSource:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "invalid-payment-source"
        description:
          type: "string"
          enum:
          - "A PaymentSource with Source ID [sourceId] is not valid for creating BillingOption"
    PaymentOptionAlreadyExists:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "resource-already-exists"
        description:
          type: "string"
          enum:
          - "A Payment Option with a nickname of [nickname] already exists."
    PaymentSourceAlreadyExists:
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "resource-already-exists"
        description:
          type: "string"
          enum:
          - "A PaymentSource with a Source ID [sourceId] already exists."
    CouponCodeNotEligibleWarning:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            warning:
              type: "array"
              items:
                properties:
                  code:
                    type: "string"
                    enum:
                    - "couponcode_not_eligible"
                  description:
                    type: "string"
                    enum:
                    - "The relevant discount triggered by {coupon code} will be applied\
                      \ to the cart once it meets the offer criteria..."
      description: "Only visible when shopper applies the VALID promoCode to the cart\
        \ but it doesn't meet the offer criteria."
    ApplyShippingOptionFailure:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                $ref: "#/components/schemas/InvalidShippingOption"
    Cart:
      type: "object"
      properties:
        customer:
          $ref: "#/components/schemas/ResourceIdentifiable"
        externalId:
          type: "string"
        totalItemsInCart:
          type: "integer"
          readOnly: true
        testOrder:
          type: "boolean"
        sendEmail:
          type: "boolean"
        locale:
          type: "string"
        currency:
          type: "string"
        taxExempt:
          type: "boolean"
        lineItems:
          type: "array"
          items:
            $ref: "#/components/schemas/LineItem"
        pricing:
          $ref: "#/components/schemas/OrderPricing"
        businessEntityCode:
          type: "string"
          readOnly: true
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethod"
        shippingChoice:
          $ref: "#/components/schemas/ShippingMethod"
        shippingMethods:
          type: "array"
          items:
            $ref: "#/components/schemas/ShippingMethod"
        billingAddress:
          $ref: "#/components/schemas/Address"
        shippingAddress:
          $ref: "#/components/schemas/Address"
        customAttributes:
          type: "object"
        emailAddress:
          type: "string"
        taxInclusive:
          type: "boolean"
        created:
          type: "string"
        state:
          type: "string"
        id:
          type: "string"
          readOnly: true
        companyId:
          type: "string"
        siteId:
          type: "string"
    ResourceIdentifiable:
      type: "object"
      properties:
        id:
          type: "string"
          readOnly: true
        companyId:
          type: "string"
        siteId:
          type: "string"
    LineItem:
      type: "object"
      properties:
        id:
          type: "string"
          readOnly: true
        quantity:
          type: "integer"
        product:
          $ref: "#/components/schemas/ProductReference"
        pricing:
          $ref: "#/components/schemas/LineItemPricing"
        customAttributes:
          type: "object"
      additionalProperties: false
    OrderPricing:
      type: "object"
      properties:
        total:
          $ref: "#/components/schemas/Price"
        subtotal:
          $ref: "#/components/schemas/Price"
        subtotalWithDiscount:
          $ref: "#/components/schemas/Price"
        shippingAndHandling:
          $ref: "#/components/schemas/CustomPrice"
        discount:
          $ref: "#/components/schemas/Price"
        tax:
          $ref: "#/components/schemas/Price"
        fees:
          $ref: "#/components/schemas/Price"
      additionalProperties: false
    PaymentMethod:
      type: "object"
      properties:
        attributes:
          $ref: "#/components/schemas/PaymentMethodAttributes"
      additionalProperties: false
    ShippingMethod:
      type: "object"
      properties:
        id:
          type: "string"
          readOnly: true
        description:
          type: "string"
          readOnly: true
        cost:
          $ref: "#/components/schemas/Price"
        clientProvidedShippingCost:
          type: "boolean"
        serviceLevel:
          type: "string"
        taxAmount:
          $ref: "#/components/schemas/BigDecimal"
      additionalProperties: false
    Address:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Address id"
        firstName:
          type: "string"
          description: "First name"
        lastName:
          type: "string"
          description: "Last name"
        companyName:
          type: "string"
          description: "Company name"
        line1:
          type: "string"
          description: "Address line 1"
          readOnly: true
        line2:
          type: "string"
          description: "Address line 2"
        line3:
          type: "string"
          description: "Address line 3"
        city:
          type: "string"
          description: "City"
        postalCode:
          type: "string"
          description: "Postal code"
        countrySubdivision:
          type: "string"
          description: "Country sub division"
        country:
          type: "string"
          description: "Country code"
        countryName:
          type: "string"
          description: "Country name"
        phoneNumber:
          type: "string"
          description: "Phone number"
        emailAddress:
          type: "string"
          description: "Email address"
        countyName:
          type: "string"
          description: "County name"
    ProductReference:
      type: "object"
      properties:
        externalId:
          type: "string"
        companyId:
          type: "string"
        id:
          type: "string"
          readOnly: true
        siteId:
          type: "string"
      additionalProperties: false
    LineItemPricing:
      type: "object"
      properties:
        itemPrice:
          $ref: "#/components/schemas/CustomPrice"
        listPrice:
          $ref: "#/components/schemas/CustomPrice"
        listPriceWithQuantity:
          $ref: "#/components/schemas/Price"
        salePriceWithQuantity:
          $ref: "#/components/schemas/Price"
        totalDiscountWithQuantity:
          $ref: "#/components/schemas/Price"
        tax:
          $ref: "#/components/schemas/Tax"
        discountDescription:
          type: "string"
          readOnly: true
        msrpPrice:
          $ref: "#/components/schemas/Price"
        fees:
          type: "array"
          readOnly: true
          items:
            $ref: "#/components/schemas/FeePricing"
      additionalProperties: false
    Price:
      type: "object"
      properties:
        value:
          type: "number"
        formattedValue:
          type: "string"
          readOnly: true
      additionalProperties: false
    CustomPrice:
      type: "object"
      properties:
        value:
          type: "number"
        percentOff:
          type: "number"
        formattedValue:
          type: "string"
          readOnly: true
      additionalProperties: false
    PaymentMethodAttributes:
      required:
      - "type"
      type: "object"
      properties:
        paymentOptionId:
          type: "string"
        paymentOptionNickname:
          type: "string"
        type:
          type: "string"
        token:
          type: "string"
        sourceId:
          type: "string"
        displayName:
          type: "string"
          readOnly: true
        description:
          type: "string"
          readOnly: true
        instrument:
          type: "object"
      additionalProperties: false
    BigDecimal:
      type: "object"
    Long:
      type: "object"
    Tax:
      type: "object"
      properties:
        vatPercentage:
          type: "number"
      additionalProperties: false
    FeePricing:
      type: "object"
      properties:
        name:
          type: "string"
        displayName:
          type: "string"
        feeTypeCode:
          type: "string"
        feeAmount:
          $ref: "#/components/schemas/Price"
        feeAmountWithQuantity:
          $ref: "#/components/schemas/Price"
      additionalProperties: false
    InvalidIPAddress:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/InvalidIPAddressError"
    InvalidIPAddressError:
      required:
      - "code"
      - "description"
      type: "object"
      properties:
        code:
          type: "string"
          enum:
          - "ip-address-restriction-error"
        subcode:
          type: "string"
        description:
          type: "string"
          enum:
          - "The country for IP address is restricted for this request."
        message:
          type: "string"
    ip-address-restriction-error-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "ip-address-restriction-error"
                  description:
                    type: "string"
                    enum:
                    - "The country for IP address is restricted for this request."
    AppliedOffers:
      type: "object"
      properties:
        appliedOffers:
          type: "array"
          items:
            $ref: "#/components/schemas/AppliedOffer"
      additionalProperties: false
    AppliedOffer:
      type: "object"
      properties:
        id:
          type: "string"
          readOnly: true
          example: "19383398500"
        cartDescription:
          type: "string"
          example: "Description of the cart"
        appliedCouponCode:
          type: "string"
          example: "CouponCodeExample"
        appliedTo:
          $ref: "#/components/schemas/AppliedTo"
        type:
          type: "string"
          example: "Discount"
      additionalProperties: false
    AppliedTo:
      type: "object"
      properties:
        appliedLevel:
          type: "string"
          example: "Product(s) (Line Item)"
        cartId:
          type: "string"
          example: "33478770190"
        lineItemId:
          type: "string"
          example: "15217540193"
      additionalProperties: false
    offer-not-found:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "resource-not-found"
              subcode:
                type: "string"
                enum:
                - "offer-not-found"
              description:
                type: "string"
                enum:
                - "Provided offer not applied to the cart."
    offer-not-applicable:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "invalid-offer-id"
              subcode:
                type: "string"
                enum:
                - "offer-not-applicable"
              description:
                type: "string"
                enum:
                - "Always triggered offer is not supported."
    TaxRegistration:
      title: "Tax ID"
      required:
      - "key"
      - "value"
      type: "object"
      properties:
        key:
          type: "string"
          example: "UK_VAT"
        value:
          pattern: ".*"
          type: "string"
          example: "GB875205418"
      additionalProperties: false
    missing-information:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            required:
            - "code"
            - "description"
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "missing-information"
              subcode:
                type: "string"
              description:
                type: "string"
                enum:
                - "request content required."
    missing-information-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                required:
                - "code"
                - "description"
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "missing-information"
                  description:
                    type: "string"
                    enum:
                    - "request content required."
    missing-customer-type:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "missing-information"
              subcode:
                type: "string"
                enum:
                - "missing-customer-type"
              description:
                type: "string"
                enum:
                - "The customerType is required."
    missing-customer-type-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "missing-information"
                  description:
                    type: "string"
                    enum:
                    - "The customerType is required."
    vat-exemption-failure:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "vat-exemption-failure"
              subcode:
                type: "string"
                enum:
                - "invalid-code"
              description:
                type: "string"
                enum:
                - "Tax Exemption Rest of the World is not enabled on this site."
    vat-exemption-failure-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "vat-exemption-failure"
                  description:
                    type: "string"
                    enum:
                    - "Tax Exemption Rest of the World is not enabled on this site."
    invalid-customer-type:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "verification-failure"
              subcode:
                type: "string"
                enum:
                - "invalid-customer-type"
              description:
                type: "string"
                enum:
                - "The site does not support this customerType. Choose 'B' for Business\
                  \ or 'I' for Individual."
    invalid-customer-type-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "verification-failure"
                  description:
                    type: "string"
                    enum:
                    - "The site does not support this customerType. Choose 'B' for\
                      \ Business or 'I' for Individual."
    missing-tax-registrations:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "missing-information"
              subcode:
                type: "string"
                enum:
                - "missing-tax-registrations"
              description:
                type: "string"
                enum:
                - "The taxRegistrations is required."
    missing-tax-registrations-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "missing-information"
                  description:
                    type: "string"
                    enum:
                    - "The taxRegistrations is required."
    missing-tax-identification:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "missing-information"
              subcode:
                type: "string"
                enum:
                - "missing-tax-identification"
              description:
                type: "string"
                enum:
                - "The tax ID key can't be empty. Send the tax ID again."
                - "The value of tax ID key {key} is missing. Send the tax ID again."
                - "The required tax ID key {key} is missing. Send the tax ID again."
    missing-tax-identification-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "missing-information"
                  description:
                    type: "string"
                    enum:
                    - "The tax ID key can't be empty. Send the tax ID again."
                    - "The value of tax ID key {key} is missing. Send the tax ID again."
                    - "The required tax ID key {key} is missing. Send the tax ID again."
    invalid-tax-identification:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              code:
                type: "string"
                enum:
                - "verification-failure"
              subcode:
                type: "string"
                enum:
                - "invalid-tax-identification"
              description:
                type: "string"
                enum:
                - "The key {key} is invalid for the cart. Correct the tax ID and try\
                  \ again."
                - "The required tax ID - value {value} of key {key} is invalid. Correct\
                  \ the tax ID and try again."
                - "The optional tax ID - value {value} of key {key} is invalid. Correct\
                  \ the tax ID and try again."
    invalid-tax-identification-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "verification-failure"
                  description:
                    type: "string"
                    enum:
                    - "The key {key} is invalid for the cart. Correct the tax ID and\
                      \ try again."
                    - "The required tax ID - value {value} of key {key} is invalid.\
                      \ Correct the tax ID and try again."
                    - "The optional tax ID - value {value} of key {key} is invalid.\
                      \ Correct the tax ID and try again."
    resource-not-found-ext:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    enum:
                    - "resource-not-found"
                  description:
                    type: "string"
                    enum:
                    - "A Cart identifier for the provided value of {cartId} is not\
                      \ valid."
    TaxRegistrationsSchema:
      type: "object"
      properties:
        oneOf:
          type: "array"
          items:
            type: "object"
            properties:
              type:
                type: "string"
                example: "object"
              title:
                type: "string"
                example: "Business"
              additionalProperties:
                type: "boolean"
                example: false
              required:
                type: "array"
                example: "customerType"
                items:
                  type: "string"
              properties:
                type: "object"
                properties:
                  customerType:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        example: "string"
                      readOnly:
                        type: "boolean"
                        example: true
                      enum:
                        type: "array"
                        example:
                        - "B"
                        items:
                          type: "string"
                  taxRegistrations:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        example: "array"
                      title:
                        type: "string"
                        example: "Tax Registrations"
                      minItems:
                        type: "integer"
                        example: 1
                      maxItems:
                        type: "integer"
                        example: 1
                      items:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            $ref:
                              type: "string"
                              example: "#/definitions/UK_VAT"
                  companyId:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        example: "string"
                  siteId:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                        example: "string"
        definitions:
          type: "object"
          properties:
            '{TAX_KEY}':
              type: "object"
              properties:
                type:
                  type: "string"
                  example: "string"
                additionalProperties:
                  type: "boolean"
                  example: false
                properties:
                  type: "object"
                  properties:
                    key:
                      type: "object"
                      properties:
                        type:
                          type: "string"
                          example: "string"
                        readOnly:
                          type: "boolean"
                          example: true
                        enum:
                          type: "array"
                          example:
                          - "UK_VAT"
                          items:
                            type: "string"
                    value:
                      type: "object"
                      properties:
                        type:
                          type: "string"
                          example: "string"
                        title:
                          type: "string"
                          example: "VAT Number"
                        description:
                          type: "string"
                          example: "Please enter your VAT number including the two\
                            \ letter country code and without any punctuation marks\
                            \ or spaces such as GB123456789 or GB123456789012."
                        pattern:
                          type: "string"
                          example: "^[Gg]{1}[Bb]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}$,^[Gg]{1}[Bb]{1}[A-Za-z]{1}[A-Za-z]{1}[0-9]{1}[0-9]{1}[0-9]{1}$,^[Gg]{1}[Bb]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}$"
              description: "Tax registration key"
    ActivationRequest:
      required:
      - "activationKey"
      type: "object"
      properties:
        activationKey:
          type: "string"
          description: "The subscription activation key"
        activationDate:
          type: "string"
          description: "The subscription activation date in \"2020-10-11T01:23:48.000Z\"\
            , \"2020-10-11T01:23:48.000-0500\", \"2020-10-11T01:23:48.000+1100\"."
          format: "date-time"
        expirationDate:
          type: "string"
          description: "The subscription expiration date in \"2020-10-11T01:23:48.000Z\"\
            , \"2020-10-11T01:23:48.000-0500\", \"2020-10-11T01:23:48.000+1100\"."
          format: "date-time"
    CancelSubscriptionRequest:
      type: "object"
      properties:
        suppressCancelNotification:
          type: "boolean"
          description: "The clients can use this element to suppress cancel notification\
            \ email.By default this is false."
    ChangeExpirationDateRequest:
      required:
      - "expirationDate"
      type: "object"
      properties:
        expirationDate:
          type: "string"
          description: "The subscription expiration date in \"2020-10-11T01:23:48.000Z\"\
            , \"2020-10-11T01:23:48.000-0500\", \"2020-10-11T01:23:48.000+1100\"."
          format: "date-time"
    ChangeRenewalPriceRequest:
      required:
      - "renewalUnitPrice"
      type: "object"
      properties:
        renewalUnitPrice:
          type: "number"
          description: "Renewal unit price"
          format: "double"
    ChangeRenewalQuantityRequest:
      required:
      - "renewalQuantity"
      type: "object"
      properties:
        renewalQuantity:
          type: "integer"
          description: "Renewal quantity"
          format: "int32"
    CreditCard:
      type: "object"
      properties:
        expirationMonth:
          type: "string"
          description: "Card expiration month"
        expirationYear:
          type: "string"
          description: "Card expiration year"
        displayableNumber:
          type: "string"
          description: "Card displayable number"
        type:
          type: "string"
          description: "Card tyoe"
        displayName:
          type: "string"
          description: "Card display name"
        brand:
          type: "string"
          description: "Card brand"
        lastFourDigits:
          type: "string"
          description: "Last four digits of card"
    PaymentOption:
      type: "object"
      properties:
        nickName:
          type: "string"
          description: "Nick name"
        id:
          type: "string"
          description: "Payment id"
        isDefault:
          type: "string"
          description: "Is default payment method"
        type:
          type: "string"
          description: "Payment type"
        sourceId:
          type: "string"
          description: "Payment source id"
        creditCard:
          $ref: "#/components/schemas/CreditCard"
        sourceClientSecret:
          type: "string"
          description: "Payment source client secret"
        address:
          $ref: "#/components/schemas/Address"
    PaymentSourceChangeRequest:
      required:
      - "sourceId"
      type: "object"
      properties:
        sourceId:
          type: "string"
          description: "Payment source id"
        isShippingSameAsBilling:
          type: "boolean"
          description: "The shipping address of subscription should be updated same\
            \ as billing address.The default is true."
    Product:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Product id"
        externalReferenceId:
          type: "string"
          description: "Product external reference id"
        displayName:
          type: "string"
          description: "Product display name"
        sku:
          type: "string"
          description: "Product SKU"
    ProductForPostReq:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Product id"
        externalReferenceId:
          type: "string"
          description: "Product external reference id"
    RenewalTypeChangeRequest:
      required:
      - "autoRenewal"
      type: "object"
      properties:
        autoRenewal:
          type: "boolean"
          description: "Auto renewal type boolean"
    SubAddOn:
      required:
      - "product"
      - "quantity"
      type: "object"
      properties:
        product:
          $ref: "#/components/schemas/Product"
        quantity:
          type: "integer"
          description: "Addon product quantity"
          format: "int32"
        proratedUnitPrice:
          type: "number"
          description: "If “proratedUnitPrice” attribute is present then it overrides\
            \ all other prices and skip normal proration."
        renewalPrice:
          $ref: "#/components/schemas/ProbableRenewalPriceBean"
    SubAddOnForPostReq:
      required:
      - "product"
      - "quantity"
      type: "object"
      properties:
        product:
          $ref: "#/components/schemas/ProductForPostReq"
        quantity:
          type: "integer"
          description: "Addon product quantity"
          format: "int32"
        proratedUnitPrice:
          type: "number"
          description: "If “proratedUnitPrice” attribute is present then it overrides\
            \ all other prices and skip normal proration."
    SubAddOnChangeRequest:
      required:
      - "addOns"
      - "product"
      - "quantity"
      type: "object"
      properties:
        addOns:
          type: "array"
          items:
            $ref: "#/components/schemas/SubAddOnForPostReq"
        product:
          $ref: "#/components/schemas/ProductForPostReq"
        quantity:
          type: "integer"
          description: "Product quantity"
          format: "int32"
        proratedUnitPrice:
          type: "number"
          description: "If “proratedUnitPrice” attribute is present then it overrides\
            \ all other prices and skip normal proration."
    SubAddOnForReduce:
      required:
      - "product"
      - "quantity"
      type: "object"
      properties:
        product:
          $ref: "#/components/schemas/ProductForPostReq"
        quantity:
          type: "integer"
          description: "Addon product quantity"
          format: "int32"
    SubAddOnChangeRequestForReduce:
      required:
      - "addOns"
      - "product"
      - "quantity"
      type: "object"
      properties:
        addOns:
          type: "array"
          items:
            $ref: "#/components/schemas/SubAddOnForReduce"
        product:
          $ref: "#/components/schemas/ProductForPostReq"
        quantity:
          type: "integer"
          description: "Product quantity"
          format: "int32"
    SubExternalReferenceIdChangeRequest:
      required:
      - "externalReferenceId"
      type: "object"
      properties:
        externalReferenceId:
          type: "string"
          description: "External reference id"
    SubPaymentOptionChangeRequest:
      required:
      - "paymentOptionId"
      type: "object"
      properties:
        paymentOptionId:
          type: "string"
          description: "Payment option id"
        isShippingSameAsBilling:
          type: "boolean"
          description: "The shipping address of subscription should be updated same\
            \ as billing address. The default value is true."
    SubPerpetualPriceAddOn:
      required:
      - "perpetualUnitPrice"
      - "product"
      type: "object"
      properties:
        product:
          $ref: "#/components/schemas/ProductForPostReq"
        perpetualUnitPrice:
          type: "number"
          description: "Perpetual unit price of addon product"
          format: "double"
    SubPerpetualPriceChangeRequest:
      required:
      - "perpetualUnitPrice"
      type: "object"
      properties:
        perpetualUnitPrice:
          type: "number"
          description: "Perpetual unit price of subscription product"
          format: "double"
        addOns:
          type: "array"
          description: "This is mandatory only if subscription is associated with\
            \ addons."
          items:
            $ref: "#/components/schemas/SubPerpetualPriceAddOn"
    SubRenewalProductChangeRequest:
      required:
      - "renewalProductId"
      type: "object"
      properties:
        renewalProductId:
          type: "string"
          description: "Renewal product id"
    SubShippingAddressChangeRequest:
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "First name"
        lastName:
          type: "string"
          description: "Last name"
        companyName:
          type: "string"
          description: "Company name"
        line1:
          type: "string"
          description: "Line 1"
        line2:
          type: "string"
          description: "Line 2"
        line3:
          type: "string"
          description: "Line 3"
        city:
          type: "string"
          description: "City"
        countrySubdivision:
          type: "string"
          description: "Country sub division"
        postalCode:
          type: "string"
          description: "Postal code"
        country:
          type: "string"
          description: "Country"
        phoneNumber:
          type: "string"
          description: "Phone number"
        countyName:
          type: "string"
          description: "County name"
        emailAddress:
          type: "string"
          description: "Email address"
    SubscriptionInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Subscription id"
          readOnly: true
        billingAgreementId:
          type: "string"
          description: "Billing agreement id"
          readOnly: true
        externalReferenceId:
          type: "string"
          description: "External reference id"
          readOnly: true
        creationDate:
          type: "string"
          description: "Subscription creation date"
          format: "date-time"
          readOnly: true
        activationDate:
          type: "string"
          description: "Subscription activation date"
          format: "date-time"
          readOnly: true
        nextRenewalDate:
          type: "string"
          description: "Subscription next renewal date"
          format: "date-time"
          readOnly: true
        nextBillingDate:
          type: "string"
          description: "Subscription next billing date"
          format: "date-time"
          readOnly: true
        expirationDate:
          type: "string"
          description: "Subscription expiration date"
          format: "date-time"
          readOnly: true
        graceDate:
          type: "string"
          description: "Subscription grace date"
          format: "date-time"
          readOnly: true
        cancellationDate:
          type: "string"
          description: "Subscription cancellation date"
          format: "date-time"
          readOnly: true
        currentQuantity:
          type: "integer"
          description: "Subscription current quantity"
          format: "int32"
          readOnly: true
        renewalQuantity:
          type: "integer"
          description: "Subscription renewal quantity"
          format: "int32"
          readOnly: true
        autoRenewal:
          type: "boolean"
          description: "Subscription auto renewal flag"
          readOnly: true
        locale:
          type: "string"
          description: "Subscription locale"
          readOnly: true
        state:
          $ref: "#/components/schemas/State"
        duration:
          type: "integer"
          description: "Subscription duration"
          format: "int32"
          readOnly: true
        frequency:
          type: "integer"
          description: "Subscription frequency"
          format: "int32"
          readOnly: true
        currentBillingCycleNumber:
          type: "integer"
          description: "Subscription current billing cycle"
          format: "int32"
          readOnly: true
        totalNumberOfBillingCycle:
          type: "integer"
          description: "Subscription total billing cycle"
          format: "int32"
          readOnly: true
        siteId:
          type: "string"
          description: "Site id"
          readOnly: true
        shopper:
          $ref: "#/components/schemas/ShopperInfo"
        renewalPrice:
          $ref: "#/components/schemas/ProbableRenewalPriceBean"
        term:
          $ref: "#/components/schemas/Term"
        product:
          $ref: "#/components/schemas/Product"
        shipToAddress:
          $ref: "#/components/schemas/Address"
        paymentOption:
          $ref: "#/components/schemas/PaymentOption"
        addOns:
          type: "array"
          readOnly: true
          items:
            $ref: "#/components/schemas/SubAddOn"
    SubscriptionInfoList:
      type: "object"
      properties:
        subscriptions:
          type: "array"
          items:
            $ref: "#/components/schemas/SubscriptionInfo"
    State:
      type: "object"
      properties:
        Subscribed:
          type: "string"
        PendingActivation:
          type: "string"
        Cancelled:
          type: "string"
        FreeTrial:
          type: "string"
        PendingRenewal:
          type: "string"
      description: "All possible subscription states"
    Action:
      type: "object"
      properties:
        ACTIVATE:
          type: "string"
        EXPIRATION_DATE:
          type: "string"
        CANCEL:
          type: "string"
        PAYMENT_OPTION:
          type: "string"
        PAYMENT_SOURCE:
          type: "string"
        RENEWAL_PRICE:
          type: "string"
        RENEWAL_TYPE:
          type: "string"
        RENEWAL_PRODUCT:
          type: "string"
        RENEWAL_QUANTITY:
          type: "string"
        REDUCE:
          type: "string"
        DOWNGRADE:
          type: "string"
        PERPETUAL_PRICE:
          type: "string"
        SHIP_TO_ADDRESS:
          type: "string"
        REFERENCE_ID:
          type: "string"
      description: "All possible subscription actions"
    Term:
      type: "object"
      properties:
        termUnit:
          type: "string"
          description: "Term unit"
        termLength:
          type: "integer"
          description: "Term length"
          format: "int32"
    SubscriptionActionInfo:
      type: "object"
      properties:
        subscriptionId:
          type: "string"
          description: "Subscription id"
        actions:
          type: "array"
          items:
            $ref: "#/components/schemas/ActionDetails"
    ActionDetails:
      type: "object"
      properties:
        action:
          $ref: "#/components/schemas/Action"
        receivedTime:
          type: "string"
          description: "Subscription Action received type"
    ResourceNotFound:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    description: "Error code"
                    enum:
                    - "resource-not-found"
                  subCode:
                    type: "string"
                    description: "Sub-error code"
                    enum:
                    - "invalid-subscription-id"
                  description:
                    type: "string"
                    description: "Error description"
                    enum:
                    - "No subscription found with subscription id: 10300"
    PreviewResponseWithoutCart:
      type: "object"
      properties:
        subscriptionId:
          type: "string"
          description: "Subscription id"
        subTotal:
          type: "number"
          description: "Subscription total amount"
        credit:
          type: "number"
          description: "Credit amount"
        totalAmountDue:
          type: "number"
          description: "Total amount due"
        totalTax:
          type: "number"
          description: "Total tax"
        currency:
          type: "string"
          description: "Currency"
        prorationDate:
          type: "string"
          description: "Proration date"
        isCartNeeded:
          type: "boolean"
          description: "Is cart needed"
        isPaymentOnFile:
          type: "boolean"
          description: "Is payment on file"
        previewCharges:
          $ref: "#/components/schemas/PreviewCharges"
        previewSubscription:
          $ref: "#/components/schemas/SubAddOnChangeRequest"
        reduceActionUrl:
          type: "string"
          description: "Reduct action URL"
    PreviewCharges:
      type: "array"
      items:
        type: "object"
        properties:
          productId:
            type: "string"
            description: "Product id"
          quantity:
            type: "integer"
            description: "Quantity"
            format: "int32"
          unitPrice:
            type: "number"
            description: "Unit price"
          proratedUnitPrice:
            type: "number"
            description: "Prorated unit price"
    PreviewResponseWithCart:
      type: "object"
      properties:
        subscriptionId:
          type: "string"
          description: "Subscription id"
        subTotal:
          type: "number"
          description: "Subscription total amount"
        credit:
          type: "number"
          description: "Credit amount"
        totalAmountDue:
          type: "number"
          description: "Total amount due"
        totalTax:
          type: "number"
          description: "Total tax"
        currency:
          type: "string"
          description: "Currency"
        prorationDate:
          type: "string"
          description: "Proration date"
        isCartNeeded:
          type: "boolean"
          description: "Is cart needed"
        isPaymentOnFile:
          type: "boolean"
          description: "Is payment on file"
        previewCharges:
          $ref: "#/components/schemas/PreviewCharges"
        previewSubscription:
          $ref: "#/components/schemas/SubAddOnChangeRequest"
        reduceActionUrl:
          type: "string"
          description: "Reduct action URL"
        cart:
          $ref: "#/components/schemas/CartResponse"
    CartResponse:
      type: "object"
      properties:
        token:
          type: "string"
          description: "token"
        url:
          type: "string"
          description: "Web checkout URL"
    BadRequestError:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    description: "Error code"
                    enum:
                    - "validation-error"
                  subCode:
                    type: "string"
                    description: "Sub-error code"
                    enum:
                    - "required-data-missing"
                  description:
                    type: "string"
                    description: "Error description"
                    enum:
                    - "Missing required data: companyId"
    ForbiddenError:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    description: "Error code"
                    enum:
                    - "access-denied"
                  subCode:
                    type: "string"
                    description: "Sub-error code"
                    enum:
                    - "invalid-operation"
                  description:
                    type: "string"
                    description: "Error description"
                    enum:
                    - "You do not have permission to perform this operation"
    ConflictError:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            error:
              type: "array"
              items:
                type: "object"
                properties:
                  code:
                    type: "string"
                    description: "Error code"
                    enum:
                    - "validation-error"
                  subCode:
                    type: "string"
                    description: "Sub-error code"
                    enum:
                    - "invalid-state"
                  description:
                    type: "string"
                    description: "Error description"
                    enum:
                    - "Subscription must be in PendingActivation state"
    OrderInfoList:
      type: "array"
      items:
        $ref: "#/components/schemas/OrderInfo"
    OrderInfo:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Order id"
    ShopperInfo:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
          description: "User Id"
        externalReferenceId:
          type: "string"
          description: "External reference Id"
    ProbableRenewalPriceBean:
      required:
      - "currency"
      - "locked"
      - "unitPrice"
      type: "object"
      properties:
        unitPrice:
          type: "number"
          description: "Unit price"
          format: "double"
        locked:
          type: "boolean"
          description: "true if Hold price present. false if hold price not present"
        currency:
          type: "string"
          description: "Currency for Unit price"
    EmailUpdaterRequest:
      required:
      - "emailAddress"
      type: "object"
      properties:
        emailAddress:
          type: "string"
          description: "Updated Email address"
  requestBodies:
    SubAddOnChangeRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SubAddOnChangeRequest"
    SubAddOnChangeRequestForReduce:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SubAddOnChangeRequestForReduce"
x-tagGroups:
- name: "OAUTH"
  tags:
  - "Token"
  - "Access Tokens"
- name: "SHOPPER"
  tags:
  - "Shoppers"
  - "Account"
  - "Addresses"
  - "Payment-Options"
- name: "BROWSE (PRODUCT DISCOVERY)"
  tags:
  - "Categories"
  - "Products"
  - "Product Variations"
  - "Pricing"
  - "Inventory Status"
  - "Financing"
  - "Offers"
  - "Purchase Plan"
  - "Purchase Plan Search"
  - "Purchase Plan Authorize"
- name: "CART"
  tags:
  - "Apply Shopper"
  - "Line Items"
  - "Billing Address"
  - "Shipping Address"
  - "Payment Methods"
  - "Shipping Options"
  - "Web Checkout"
  - "Submit Cart"
  - "Apply or Detach Payment Methods"
  - "Apply Shipping Option"
  - "Carts"
  - "Cart Offers"
  - "API Trigger Offer"
  - "Resume Cart"
  - "Third Party Subscription Engine Support"
  - "Tax Registration"
  - "Price override"
- name: "ORDERS"
  tags:
  - "Orders"
  - "Order Lookup"
  - "Returns"
- name: "SUBSCRIPTIONS"
  tags:
  - "Manage Subscription"
  - "Subscription Renewal"
  - "Immediate Midterm Change"
  - "Payment"
  - "Address"
  - "Order"
  - "Pending Action"
  - "Retrieve Subscription"
  - "Email Updater"